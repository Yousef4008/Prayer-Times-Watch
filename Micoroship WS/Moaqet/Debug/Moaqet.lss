
Moaqet.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000e0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00005d30  2**0
                  ALLOC, LOAD, DATA
  2 .bss          00000006  00800060  00800060  00005d30  2**0
                  ALLOC
  3 .comment      0000002f  00000000  00000000  00005d30  2**0
                  CONTENTS, READONLY
  4 .stack.descriptors.hdr 000001a4  00000000  00000000  00005d5f  2**0
                  CONTENTS, READONLY
  5 .debug_aranges 000002e8  00000000  00000000  00005f08  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00006ab5  00000000  00000000  000061f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001020  00000000  00000000  0000cca5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000021cf  00000000  00000000  0000dcc5  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000814  00000000  00000000  0000fe94  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000545  00000000  00000000  000106a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000433a  00000000  00000000  00010bed  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001f8  00000000  00000000  00014f27  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .text         00000004  00005c8a  00005c8a  00005d1e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00015120  2**2
                  CONTENTS, READONLY, DEBUGGING
 15 .text.SEVENSEG_init 00000038  0000587a  0000587a  0000590e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.SEVENSEG_displayNumber 000000e6  00004af4  00004af4  00004b88  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.displaySettingsOn7Segment 00000336  00002276  00002276  0000230a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.displayPrayerTimesOn7Segment 00000384  00001bb4  00001bb4  00001c48  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.displayDateOn7Segment 000001ea  000033a0  000033a0  00003434  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.displayTimeOn7Segment 00000098  000050d8  000050d8  0000516c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .text.displayCountryCodeOn7Segment 0000004e  00005658  00005658  000056ec  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .text.displayTemperatureOn7Segment 0000004e  000056a6  000056a6  0000573a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .text.BUZZER_init 00000016  00005b60  00005b60  00005bf4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .text.BUZZER_toggle 0000000a  00005c56  00005c56  00005cea  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 .text.LM35_getTemperature 00000044  0000573c  0000573c  000057d0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 .text.RTC_init 00000028  00005980  00005980  00005a14  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 .text.BCD_toDicmal 0000001a  00005b2e  00005b2e  00005bc2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 .text.RTC_Read_Clock 0000005e  0000559c  0000559c  00005630  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 .text.RTC_Read_Calendar 0000007a  0000527a  0000527a  0000530e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 30 .text.Dicmal_toBCD 00000026  000059f8  000059f8  00005a8c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 31 .text.RTC_Clock_Write 00000042  000057c4  000057c4  00005858  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 32 .text.RTC_Calendar_Write 0000007e  000051fc  000051fc  00005290  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 33 .text.settingsButtons_init 00000034  00005920  00005920  000059b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 34 .text.settingsButtons_getState 00000066  00005536  00005536  000055ca  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 35 .text.incrementDigitValue 000001dc  00003772  00003772  00003806  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 36 .text.decrementDigitValue 000001ce  0000394e  0000394e  000039e2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 37 .text.weekDayLed_init 00000020  00005ad0  00005ad0  00005b64  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 38 .text.weekDayLed_lightup 000000f4  00004732  00004732  000047c6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 39 .text.calcJulianData 000000ee  00004918  00004918  000049ac  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 40 .text.calcTimeDec 0000023a  00002b28  00002b28  00002bbc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 41 .text.calcDuhurTime 0000006e  000054c8  000054c8  0000555c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 42 .text.calcAsrTime 0000017e  000041ba  000041ba  0000424e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 43 .text.calcRemainingPrayerTimes 000001e8  0000358a  0000358a  0000361e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 44 .text.calcPrayerHrMin 00000072  000053e6  000053e6  0000547a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 45 .text.calAllPrayerTimes 0000019c  00003ce6  00003ce6  00003d7a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 46 .text.checkIqamahAlert 000001f6  000031aa  000031aa  0000323e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 47 .text.main    00000548  0000166c  0000166c  00001700  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 48 .text.ADC_init 00000078  0000536e  0000536e  00005402  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 49 .text.ADC_readChannel 00000020  00005af0  00005af0  00005b84  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 50 .text.GPIO_setupPinDirection 000000e6  00004bda  00004bda  00004c6e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 51 .text.GPIO_writePin 000000e6  00004cc0  00004cc0  00004d54  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 52 .text.GPIO_togglePin 00000070  00005458  00005458  000054ec  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 53 .text.GPIO_readPin 0000008c  00005170  00005170  00005204  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 54 .text.GPIO_setupPortDirection 00000024  00005a1e  00005a1e  00005ab2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 55 .text.GPIO_writePort 00000024  00005a42  00005a42  00005ad6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 56 .text.I2C_init 0000002c  00005954  00005954  000059e8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 57 .text.I2C_start 0000003a  00005806  00005806  0000589a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 58 .text.I2C_repeatedStart 0000003a  00005840  00005840  000058d4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 59 .text.I2C_stop 0000000c  00005c32  00005c32  00005cc6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 60 .text.I2C_writeByte 00000024  00005a66  00005a66  00005afa  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 61 .text.I2C_readByteWithACK 0000000e  00005bc2  00005bc2  00005c56  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 62 .text.I2C_readByteWithNACK 0000000e  00005bd0  00005bd0  00005c64  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 63 .text.acosf   0000033e  00001f38  00001f38  00001fcc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 64 .text.asinf   0000021e  00002f8c  00002f8c  00003020  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 65 .text.atan2f  0000028c  0000289c  0000289c  00002930  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 66 .text.atanf   000002f0  000025ac  000025ac  00002640  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 67 .progmemx.data.atanlo 00000010  00000208  00000208  0000029c  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 68 .progmemx.data.atanhi 00000010  00000218  00000218  000002ac  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 69 .text         0000000e  00005bde  00005bde  00005c72  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 70 .text         000000ce  00004f58  00004f58  00004fec  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 71 .text         00000008  00005c74  00005c74  00005d08  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 72 .text         000000de  00004da6  00004da6  00004e3a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 73 .text         0000000e  00005bec  00005bec  00005c80  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 74 .text         0000005e  000055fa  000055fa  0000568e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 75 .text         0000007a  000052f4  000052f4  00005388  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 76 .text         0000000c  00005c3e  00005c3e  00005cd2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 77 .text         00000006  00005c84  00005c84  00005d18  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 78 .text         0000000e  00005bfa  00005bfa  00005c8e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 79 .text         0000000e  00005c08  00005c08  00005c9c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 80 .text         00000022  00005aae  00005aae  00005b42  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 81 .text         00000044  00005780  00005780  00005814  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 82 .text         0000000e  00005c16  00005c16  00005caa  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 83 .text         00000008  00005c7c  00005c7c  00005d10  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 84 .text         000000d4  00004e84  00004e84  00004f18  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 85 .text.sqrtf   0000022a  00002d62  00002d62  00002df6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 86 .text.cosf    0000016a  00004338  00004338  000043cc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 87 .text.fabsf   00000004  00005c8e  00005c8e  00005d22  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 88 .text.sinf    000001ca  00003b1c  00003b1c  00003bb0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 89 .text.tanf    0000019c  00003e82  00003e82  00003f16  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 90 .text.__cosdf 000000ee  00004a06  00004a06  00004a9a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 91 .text.__rem_pio2f 0000019c  0000401e  0000401e  000040b2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 92 .text.__sindf 000000f2  00004826  00004826  000048ba  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 93 .text.__tandf 0000015e  000044a2  000044a2  00004536  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 94 .text         0000000a  00005c60  00005c60  00005cf4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 95 .text.__rem_pio2_large 0000143c  00000230  00000230  000002c4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 96 .progmemx.data.PIo2 00000020  000001e8  000001e8  0000027c  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 97 .progmemx.data.ipio2 00000108  000000e0  000000e0  00000174  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 98 .progmemx.data.init_jk 00000008  00000228  00000228  000002bc  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 99 .text         0000000a  00005c6a  00005c6a  00005cfe  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
100 .text         00000048  000056f4  000056f4  00005788  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
101 .text.floorf  00000132  00004600  00004600  00004694  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
102 .text.scalbnf 000000b2  00005026  00005026  000050ba  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
103 .text.libgcc.div 00000028  000059a8  000059a8  00005a3c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
104 .text.libgcc  0000000c  00005c4a  00005c4a  00005cde  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
105 .text.libgcc.mul 0000001e  00005b10  00005b10  00005ba4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
106 .text.libgcc.mul 00000010  00005ba2  00005ba2  00005c36  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
107 .text.libgcc.prologue 00000038  000058b2  000058b2  00005946  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
108 .text.libgcc.prologue 00000036  000058ea  000058ea  0000597e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
109 .text.libgcc  00000010  00005bb2  00005bb2  00005c46  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
110 .text.libgcc  00000018  00005b48  00005b48  00005bdc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
111 .text.libgcc.div 00000028  000059d0  000059d0  00005a64  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
112 .text.libgcc.mul 00000016  00005b76  00005b76  00005c0a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
113 .text.__dummy_fini 00000002  00005c96  00005c96  00005d2a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
114 .text.__dummy_funcs_on_exit 00000002  00005c98  00005c98  00005d2c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
115 .text.__dummy_simulator_exit 00000002  00005c9a  00005c9a  00005d2e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
116 .text.exit    00000016  00005b8c  00005b8c  00005c20  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
117 .text._Exit   00000004  00005c92  00005c92  00005d26  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
118 .text.avrlibc 0000000e  00005c24  00005c24  00005cb8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
119 .text.avrlibc 00000024  00005a8a  00005a8a  00005b1e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 46 00 	jmp	0x8c	; 0x8c <__ctors_end>
   4:	0c 94 45 2e 	jmp	0x5c8a	; 0x5c8a <__bad_interrupt>
   8:	0c 94 45 2e 	jmp	0x5c8a	; 0x5c8a <__bad_interrupt>
   c:	0c 94 45 2e 	jmp	0x5c8a	; 0x5c8a <__bad_interrupt>
  10:	0c 94 45 2e 	jmp	0x5c8a	; 0x5c8a <__bad_interrupt>
  14:	0c 94 45 2e 	jmp	0x5c8a	; 0x5c8a <__bad_interrupt>
  18:	0c 94 45 2e 	jmp	0x5c8a	; 0x5c8a <__bad_interrupt>
  1c:	0c 94 45 2e 	jmp	0x5c8a	; 0x5c8a <__bad_interrupt>
  20:	0c 94 45 2e 	jmp	0x5c8a	; 0x5c8a <__bad_interrupt>
  24:	0c 94 45 2e 	jmp	0x5c8a	; 0x5c8a <__bad_interrupt>
  28:	0c 94 45 2e 	jmp	0x5c8a	; 0x5c8a <__bad_interrupt>
  2c:	0c 94 45 2e 	jmp	0x5c8a	; 0x5c8a <__bad_interrupt>
  30:	0c 94 45 2e 	jmp	0x5c8a	; 0x5c8a <__bad_interrupt>
  34:	0c 94 45 2e 	jmp	0x5c8a	; 0x5c8a <__bad_interrupt>
  38:	0c 94 45 2e 	jmp	0x5c8a	; 0x5c8a <__bad_interrupt>
  3c:	0c 94 45 2e 	jmp	0x5c8a	; 0x5c8a <__bad_interrupt>
  40:	0c 94 45 2e 	jmp	0x5c8a	; 0x5c8a <__bad_interrupt>
  44:	0c 94 45 2e 	jmp	0x5c8a	; 0x5c8a <__bad_interrupt>
  48:	0c 94 45 2e 	jmp	0x5c8a	; 0x5c8a <__bad_interrupt>
  4c:	0c 94 45 2e 	jmp	0x5c8a	; 0x5c8a <__bad_interrupt>
  50:	0c 94 45 2e 	jmp	0x5c8a	; 0x5c8a <__bad_interrupt>
  54:	cc 1b       	sub	r28, r28
  56:	f4 1b       	sub	r31, r20
  58:	26 1c       	adc	r2, r6
  5a:	5a 1c       	adc	r5, r10
  5c:	6b 1c       	adc	r6, r11
  5e:	76 1c       	adc	r7, r6
  60:	81 1c       	adc	r8, r1
  62:	8b 1c       	adc	r8, r11
  64:	95 1c       	adc	r9, r5
  66:	ba 1c       	adc	r11, r10
  68:	df 1c       	adc	r13, r15
  6a:	0e 1d       	adc	r16, r14
  6c:	3f 1d       	adc	r19, r15
  6e:	4f 1d       	adc	r20, r15
  70:	5a 1d       	adc	r21, r10
  72:	65 1d       	adc	r22, r5
  74:	70 1d       	adc	r23, r0
  76:	7b 1d       	adc	r23, r11
  78:	a3 23       	and	r26, r19
  7a:	b3 23       	and	r27, r19
  7c:	c3 23       	and	r28, r19
  7e:	d3 23       	and	r29, r19
  80:	e3 23       	and	r30, r19
  82:	f3 23       	and	r31, r19
  84:	03 24       	eor	r0, r3

00000086 <.dinit>:
  86:	00 60       	ori	r16, 0x00	; 0
  88:	00 66       	ori	r16, 0x60	; 96
  8a:	80 00       	.word	0x0080	; ????

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf e5       	ldi	r28, 0x5F	; 95
  92:	d8 e0       	ldi	r29, 0x08	; 8
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	e6 e8       	ldi	r30, 0x86	; 134
  9a:	f0 e0       	ldi	r31, 0x00	; 0
  9c:	40 e0       	ldi	r20, 0x00	; 0
  9e:	17 c0       	rjmp	.+46     	; 0xce <__do_clear_bss+0x8>
  a0:	b5 91       	lpm	r27, Z+
  a2:	a5 91       	lpm	r26, Z+
  a4:	35 91       	lpm	r19, Z+
  a6:	25 91       	lpm	r18, Z+
  a8:	05 91       	lpm	r16, Z+
  aa:	07 fd       	sbrc	r16, 7
  ac:	0c c0       	rjmp	.+24     	; 0xc6 <__do_clear_bss>
  ae:	95 91       	lpm	r25, Z+
  b0:	85 91       	lpm	r24, Z+
  b2:	ef 01       	movw	r28, r30
  b4:	f9 2f       	mov	r31, r25
  b6:	e8 2f       	mov	r30, r24
  b8:	05 90       	lpm	r0, Z+
  ba:	0d 92       	st	X+, r0
  bc:	a2 17       	cp	r26, r18
  be:	b3 07       	cpc	r27, r19
  c0:	d9 f7       	brne	.-10     	; 0xb8 <__do_copy_data+0x20>
  c2:	fe 01       	movw	r30, r28
  c4:	04 c0       	rjmp	.+8      	; 0xce <__do_clear_bss+0x8>

000000c6 <__do_clear_bss>:
  c6:	1d 92       	st	X+, r1
  c8:	a2 17       	cp	r26, r18
  ca:	b3 07       	cpc	r27, r19
  cc:	e1 f7       	brne	.-8      	; 0xc6 <__do_clear_bss>
  ce:	eb 38       	cpi	r30, 0x8B	; 139
  d0:	f4 07       	cpc	r31, r20
  d2:	31 f7       	brne	.-52     	; 0xa0 <__do_copy_data+0x8>
  d4:	0e 94 36 0b 	call	0x166c	; 0x166c <main>
  d8:	0c 94 c6 2d 	jmp	0x5b8c	; 0x5b8c <exit>

000000dc <_exit>:
  dc:	f8 94       	cli

000000de <__stop_program>:
  de:	ff cf       	rjmp	.-2      	; 0xde <__stop_program>

Disassembly of section .text:

00005c8a <__bad_interrupt>:
    5c8a:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.SEVENSEG_init:

0000587a <SEVENSEG_init>:
* Description :
-> Initialize 7-segment display
*/
void SEVENSEG_init()
{
	GPIO_setupPortDirection(SEVENSEG_SELECTION_P0,PORT_OUTPUT);
    587a:	6f ef       	ldi	r22, 0xFF	; 255
    587c:	83 e0       	ldi	r24, 0x03	; 3
    587e:	0e 94 0f 2d 	call	0x5a1e	; 0x5a1e <GPIO_setupPortDirection>
	GPIO_setupPortDirection(SEVENSEG_SELECTION_P0,PORT_OUTPUT);
    5882:	6f ef       	ldi	r22, 0xFF	; 255
    5884:	83 e0       	ldi	r24, 0x03	; 3
    5886:	0e 94 0f 2d 	call	0x5a1e	; 0x5a1e <GPIO_setupPortDirection>
	GPIO_setupPortDirection(SEVENSEG_PORT,PORT_OUTPUT);
    588a:	6f ef       	ldi	r22, 0xFF	; 255
    588c:	81 e0       	ldi	r24, 0x01	; 1
    588e:	0e 94 0f 2d 	call	0x5a1e	; 0x5a1e <GPIO_setupPortDirection>
	GPIO_setupPinDirection(SEVENSEG_EN_PORT,SEVENSEG_EN0_PIN,PIN_OUTPUT);
    5892:	41 e0       	ldi	r20, 0x01	; 1
    5894:	65 e0       	ldi	r22, 0x05	; 5
    5896:	82 e0       	ldi	r24, 0x02	; 2
    5898:	0e 94 ed 25 	call	0x4bda	; 0x4bda <GPIO_setupPinDirection>
	GPIO_setupPinDirection(SEVENSEG_EN_PORT,SEVENSEG_EN1_PIN,PIN_OUTPUT);
    589c:	41 e0       	ldi	r20, 0x01	; 1
    589e:	66 e0       	ldi	r22, 0x06	; 6
    58a0:	82 e0       	ldi	r24, 0x02	; 2
    58a2:	0e 94 ed 25 	call	0x4bda	; 0x4bda <GPIO_setupPinDirection>
	GPIO_setupPinDirection(SEVENSEG_EN_PORT,SEVENSEG_EN2_PIN,PIN_OUTPUT);
    58a6:	41 e0       	ldi	r20, 0x01	; 1
    58a8:	67 e0       	ldi	r22, 0x07	; 7
    58aa:	82 e0       	ldi	r24, 0x02	; 2
    58ac:	0e 94 ed 25 	call	0x4bda	; 0x4bda <GPIO_setupPinDirection>
    58b0:	08 95       	ret

Disassembly of section .text.SEVENSEG_displayNumber:

00004af4 <SEVENSEG_displayNumber>:
/*
* Description :
-> Display a number on a 7-segment display
*/
void SEVENSEG_displayNumber(uint8 displayNum, uint8 selectedDisplay)
{
    4af4:	cf 93       	push	r28
    4af6:	df 93       	push	r29
    4af8:	c8 2f       	mov	r28, r24
    4afa:	d6 2f       	mov	r29, r22

	if(selectedDisplay < 16){
    4afc:	60 31       	cpi	r22, 0x10	; 16
    4afe:	a0 f4       	brcc	.+40     	; 0x4b28 <SEVENSEG_displayNumber+0x34>
		GPIO_writePin(SEVENSEG_EN_PORT,SEVENSEG_EN0_PIN,LOGIC_LOW);
    4b00:	40 e0       	ldi	r20, 0x00	; 0
    4b02:	65 e0       	ldi	r22, 0x05	; 5
    4b04:	82 e0       	ldi	r24, 0x02	; 2
    4b06:	0e 94 60 26 	call	0x4cc0	; 0x4cc0 <GPIO_writePin>
		GPIO_writePin(SEVENSEG_EN_PORT,SEVENSEG_EN1_PIN,LOGIC_HIGH);
    4b0a:	41 e0       	ldi	r20, 0x01	; 1
    4b0c:	66 e0       	ldi	r22, 0x06	; 6
    4b0e:	82 e0       	ldi	r24, 0x02	; 2
    4b10:	0e 94 60 26 	call	0x4cc0	; 0x4cc0 <GPIO_writePin>
		GPIO_writePin(SEVENSEG_EN_PORT,SEVENSEG_EN2_PIN,LOGIC_HIGH);
    4b14:	41 e0       	ldi	r20, 0x01	; 1
    4b16:	67 e0       	ldi	r22, 0x07	; 7
    4b18:	82 e0       	ldi	r24, 0x02	; 2
    4b1a:	0e 94 60 26 	call	0x4cc0	; 0x4cc0 <GPIO_writePin>

		GPIO_writePort(SEVENSEG_SELECTION_P0,selectedDisplay);
    4b1e:	6d 2f       	mov	r22, r29
    4b20:	83 e0       	ldi	r24, 0x03	; 3
    4b22:	0e 94 21 2d 	call	0x5a42	; 0x5a42 <GPIO_writePort>
    4b26:	2f c0       	rjmp	.+94     	; 0x4b86 <SEVENSEG_displayNumber+0x92>
	}
	else if(selectedDisplay < 32){
    4b28:	60 32       	cpi	r22, 0x20	; 32
    4b2a:	b0 f4       	brcc	.+44     	; 0x4b58 <SEVENSEG_displayNumber+0x64>

		GPIO_writePin(SEVENSEG_EN_PORT,SEVENSEG_EN0_PIN,LOGIC_HIGH);
    4b2c:	41 e0       	ldi	r20, 0x01	; 1
    4b2e:	65 e0       	ldi	r22, 0x05	; 5
    4b30:	82 e0       	ldi	r24, 0x02	; 2
    4b32:	0e 94 60 26 	call	0x4cc0	; 0x4cc0 <GPIO_writePin>
		GPIO_writePin(SEVENSEG_EN_PORT,SEVENSEG_EN1_PIN,LOGIC_LOW);
    4b36:	40 e0       	ldi	r20, 0x00	; 0
    4b38:	66 e0       	ldi	r22, 0x06	; 6
    4b3a:	82 e0       	ldi	r24, 0x02	; 2
    4b3c:	0e 94 60 26 	call	0x4cc0	; 0x4cc0 <GPIO_writePin>
		GPIO_writePin(SEVENSEG_EN_PORT,SEVENSEG_EN2_PIN,LOGIC_HIGH);
    4b40:	41 e0       	ldi	r20, 0x01	; 1
    4b42:	67 e0       	ldi	r22, 0x07	; 7
    4b44:	82 e0       	ldi	r24, 0x02	; 2
    4b46:	0e 94 60 26 	call	0x4cc0	; 0x4cc0 <GPIO_writePin>

		GPIO_writePort(SEVENSEG_SELECTION_P0,((selectedDisplay-16)<<4));
    4b4a:	6d 2f       	mov	r22, r29
    4b4c:	62 95       	swap	r22
    4b4e:	60 7f       	andi	r22, 0xF0	; 240
    4b50:	83 e0       	ldi	r24, 0x03	; 3
    4b52:	0e 94 21 2d 	call	0x5a42	; 0x5a42 <GPIO_writePort>
    4b56:	17 c0       	rjmp	.+46     	; 0x4b86 <SEVENSEG_displayNumber+0x92>
	}
	else if(selectedDisplay < 48){
    4b58:	60 33       	cpi	r22, 0x30	; 48
    4b5a:	a8 f4       	brcc	.+42     	; 0x4b86 <SEVENSEG_displayNumber+0x92>
		GPIO_writePin(SEVENSEG_EN_PORT,SEVENSEG_EN0_PIN,LOGIC_HIGH);
    4b5c:	41 e0       	ldi	r20, 0x01	; 1
    4b5e:	65 e0       	ldi	r22, 0x05	; 5
    4b60:	82 e0       	ldi	r24, 0x02	; 2
    4b62:	0e 94 60 26 	call	0x4cc0	; 0x4cc0 <GPIO_writePin>
		GPIO_writePin(SEVENSEG_EN_PORT,SEVENSEG_EN1_PIN,LOGIC_HIGH);
    4b66:	41 e0       	ldi	r20, 0x01	; 1
    4b68:	66 e0       	ldi	r22, 0x06	; 6
    4b6a:	82 e0       	ldi	r24, 0x02	; 2
    4b6c:	0e 94 60 26 	call	0x4cc0	; 0x4cc0 <GPIO_writePin>
		GPIO_writePin(SEVENSEG_EN_PORT,SEVENSEG_EN2_PIN,LOGIC_LOW);
    4b70:	40 e0       	ldi	r20, 0x00	; 0
    4b72:	67 e0       	ldi	r22, 0x07	; 7
    4b74:	82 e0       	ldi	r24, 0x02	; 2
    4b76:	0e 94 60 26 	call	0x4cc0	; 0x4cc0 <GPIO_writePin>

		GPIO_writePort(SEVENSEG_SELECTION_P1,((selectedDisplay-32)<<4));
    4b7a:	6d 2f       	mov	r22, r29
    4b7c:	62 95       	swap	r22
    4b7e:	60 7f       	andi	r22, 0xF0	; 240
    4b80:	81 e0       	ldi	r24, 0x01	; 1
    4b82:	0e 94 21 2d 	call	0x5a42	; 0x5a42 <GPIO_writePort>
	}
	GPIO_writePin(SEVENSEG_PORT, PIN0_ID, GET_BIT(displayNum,0));
    4b86:	4c 2f       	mov	r20, r28
    4b88:	41 70       	andi	r20, 0x01	; 1
    4b8a:	60 e0       	ldi	r22, 0x00	; 0
    4b8c:	81 e0       	ldi	r24, 0x01	; 1
    4b8e:	0e 94 60 26 	call	0x4cc0	; 0x4cc0 <GPIO_writePin>
	GPIO_writePin(SEVENSEG_PORT, PIN1_ID, GET_BIT(displayNum,1));
    4b92:	4c 2f       	mov	r20, r28
    4b94:	42 70       	andi	r20, 0x02	; 2
    4b96:	50 e0       	ldi	r21, 0x00	; 0
    4b98:	55 95       	asr	r21
    4b9a:	47 95       	ror	r20
    4b9c:	61 e0       	ldi	r22, 0x01	; 1
    4b9e:	81 e0       	ldi	r24, 0x01	; 1
    4ba0:	0e 94 60 26 	call	0x4cc0	; 0x4cc0 <GPIO_writePin>
	GPIO_writePin(SEVENSEG_PORT, PIN2_ID, GET_BIT(displayNum,2));
    4ba4:	4c 2f       	mov	r20, r28
    4ba6:	44 70       	andi	r20, 0x04	; 4
    4ba8:	50 e0       	ldi	r21, 0x00	; 0
    4baa:	55 95       	asr	r21
    4bac:	47 95       	ror	r20
    4bae:	55 95       	asr	r21
    4bb0:	47 95       	ror	r20
    4bb2:	62 e0       	ldi	r22, 0x02	; 2
    4bb4:	81 e0       	ldi	r24, 0x01	; 1
    4bb6:	0e 94 60 26 	call	0x4cc0	; 0x4cc0 <GPIO_writePin>
	GPIO_writePin(SEVENSEG_PORT, PIN3_ID, GET_BIT(displayNum,3));
    4bba:	c8 70       	andi	r28, 0x08	; 8
    4bbc:	4c 2f       	mov	r20, r28
    4bbe:	50 e0       	ldi	r21, 0x00	; 0
    4bc0:	55 95       	asr	r21
    4bc2:	47 95       	ror	r20
    4bc4:	55 95       	asr	r21
    4bc6:	47 95       	ror	r20
    4bc8:	55 95       	asr	r21
    4bca:	47 95       	ror	r20
    4bcc:	63 e0       	ldi	r22, 0x03	; 3
    4bce:	81 e0       	ldi	r24, 0x01	; 1
    4bd0:	0e 94 60 26 	call	0x4cc0	; 0x4cc0 <GPIO_writePin>

}
    4bd4:	df 91       	pop	r29
    4bd6:	cf 91       	pop	r28
    4bd8:	08 95       	ret

Disassembly of section .text.displaySettingsOn7Segment:

00002276 <displaySettingsOn7Segment>:

/*
* Description :
-> Display settings on 7-segment display
*/
void displaySettingsOn7Segment(uint8 selectedDigit, uint8 day, uint8 month, uint16 year, uint8 hour, uint8 minute, uint8 cityCode) {
    2276:	cf 92       	push	r12
    2278:	df 92       	push	r13
    227a:	ef 92       	push	r14
    227c:	ff 92       	push	r15
    227e:	0f 93       	push	r16
    2280:	1f 93       	push	r17
    2282:	cf 93       	push	r28
    2284:	df 93       	push	r29
    2286:	c8 2f       	mov	r28, r24
    2288:	f6 2e       	mov	r15, r22
    228a:	14 2f       	mov	r17, r20
    228c:	69 01       	movw	r12, r18
	SEVENSEG_displayNumber(day/10,24);
    228e:	8d ec       	ldi	r24, 0xCD	; 205
    2290:	68 9f       	mul	r22, r24
    2292:	81 2d       	mov	r24, r1
    2294:	11 24       	eor	r1, r1
    2296:	68 e1       	ldi	r22, 0x18	; 24
    2298:	86 95       	lsr	r24
    229a:	86 95       	lsr	r24
    229c:	86 95       	lsr	r24
    229e:	0e 94 7a 25 	call	0x4af4	; 0x4af4 <SEVENSEG_displayNumber>
	GPIO_writePin(PORTA_ID, PIN7_ID, LOGIC_LOW);
    22a2:	40 e0       	ldi	r20, 0x00	; 0
    22a4:	67 e0       	ldi	r22, 0x07	; 7
    22a6:	80 e0       	ldi	r24, 0x00	; 0
    22a8:	0e 94 60 26 	call	0x4cc0	; 0x4cc0 <GPIO_writePin>
	if(selectedDigit == 5){GPIO_writePin(PORTA_ID, PIN7_ID, LOGIC_HIGH);}
    22ac:	c5 30       	cpi	r28, 0x05	; 5
    22ae:	29 f4       	brne	.+10     	; 0x22ba <displaySettingsOn7Segment+0x44>
    22b0:	41 e0       	ldi	r20, 0x01	; 1
    22b2:	67 e0       	ldi	r22, 0x07	; 7
    22b4:	80 e0       	ldi	r24, 0x00	; 0
    22b6:	0e 94 60 26 	call	0x4cc0	; 0x4cc0 <GPIO_writePin>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    22ba:	8c ec       	ldi	r24, 0xCC	; 204
    22bc:	9a e0       	ldi	r25, 0x0A	; 10
    22be:	01 97       	sbiw	r24, 0x01	; 1
    22c0:	f1 f7       	brne	.-4      	; 0x22be <displaySettingsOn7Segment+0x48>
    22c2:	00 c0       	rjmp	.+0      	; 0x22c4 <displaySettingsOn7Segment+0x4e>
    22c4:	00 00       	nop
	_delay_ms(DELAY_TIME);
	SEVENSEG_displayNumber(day%10,25);
    22c6:	dd ec       	ldi	r29, 0xCD	; 205
    22c8:	fd 9e       	mul	r15, r29
    22ca:	91 2d       	mov	r25, r1
    22cc:	11 24       	eor	r1, r1
    22ce:	96 95       	lsr	r25
    22d0:	96 95       	lsr	r25
    22d2:	96 95       	lsr	r25
    22d4:	99 0f       	add	r25, r25
    22d6:	89 2f       	mov	r24, r25
    22d8:	88 0f       	add	r24, r24
    22da:	88 0f       	add	r24, r24
    22dc:	98 0f       	add	r25, r24
    22de:	69 e1       	ldi	r22, 0x19	; 25
    22e0:	8f 2d       	mov	r24, r15
    22e2:	89 1b       	sub	r24, r25
    22e4:	0e 94 7a 25 	call	0x4af4	; 0x4af4 <SEVENSEG_displayNumber>
    22e8:	8c ec       	ldi	r24, 0xCC	; 204
    22ea:	9a e0       	ldi	r25, 0x0A	; 10
    22ec:	01 97       	sbiw	r24, 0x01	; 1
    22ee:	f1 f7       	brne	.-4      	; 0x22ec <displaySettingsOn7Segment+0x76>
    22f0:	00 c0       	rjmp	.+0      	; 0x22f2 <displaySettingsOn7Segment+0x7c>
    22f2:	00 00       	nop
	_delay_ms(DELAY_TIME);
	
	SEVENSEG_displayNumber(month/10,26);
    22f4:	1d 9f       	mul	r17, r29
    22f6:	81 2d       	mov	r24, r1
    22f8:	11 24       	eor	r1, r1
    22fa:	6a e1       	ldi	r22, 0x1A	; 26
    22fc:	86 95       	lsr	r24
    22fe:	86 95       	lsr	r24
    2300:	86 95       	lsr	r24
    2302:	0e 94 7a 25 	call	0x4af4	; 0x4af4 <SEVENSEG_displayNumber>
	GPIO_writePin(PORTA_ID, PIN7_ID, LOGIC_LOW);
    2306:	40 e0       	ldi	r20, 0x00	; 0
    2308:	67 e0       	ldi	r22, 0x07	; 7
    230a:	80 e0       	ldi	r24, 0x00	; 0
    230c:	0e 94 60 26 	call	0x4cc0	; 0x4cc0 <GPIO_writePin>
	if(selectedDigit == 4){GPIO_writePin(PORTA_ID, PIN7_ID, LOGIC_HIGH);}
    2310:	c4 30       	cpi	r28, 0x04	; 4
    2312:	29 f4       	brne	.+10     	; 0x231e <displaySettingsOn7Segment+0xa8>
    2314:	41 e0       	ldi	r20, 0x01	; 1
    2316:	67 e0       	ldi	r22, 0x07	; 7
    2318:	80 e0       	ldi	r24, 0x00	; 0
    231a:	0e 94 60 26 	call	0x4cc0	; 0x4cc0 <GPIO_writePin>
    231e:	8c ec       	ldi	r24, 0xCC	; 204
    2320:	9a e0       	ldi	r25, 0x0A	; 10
    2322:	01 97       	sbiw	r24, 0x01	; 1
    2324:	f1 f7       	brne	.-4      	; 0x2322 <displaySettingsOn7Segment+0xac>
    2326:	00 c0       	rjmp	.+0      	; 0x2328 <displaySettingsOn7Segment+0xb2>
    2328:	00 00       	nop
	_delay_ms(DELAY_TIME);
	SEVENSEG_displayNumber(month%10,27);
    232a:	9d ec       	ldi	r25, 0xCD	; 205
    232c:	19 9f       	mul	r17, r25
    232e:	91 2d       	mov	r25, r1
    2330:	11 24       	eor	r1, r1
    2332:	96 95       	lsr	r25
    2334:	96 95       	lsr	r25
    2336:	96 95       	lsr	r25
    2338:	99 0f       	add	r25, r25
    233a:	89 2f       	mov	r24, r25
    233c:	88 0f       	add	r24, r24
    233e:	88 0f       	add	r24, r24
    2340:	98 0f       	add	r25, r24
    2342:	6b e1       	ldi	r22, 0x1B	; 27
    2344:	81 2f       	mov	r24, r17
    2346:	89 1b       	sub	r24, r25
    2348:	0e 94 7a 25 	call	0x4af4	; 0x4af4 <SEVENSEG_displayNumber>
    234c:	8c ec       	ldi	r24, 0xCC	; 204
    234e:	9a e0       	ldi	r25, 0x0A	; 10
    2350:	01 97       	sbiw	r24, 0x01	; 1
    2352:	f1 f7       	brne	.-4      	; 0x2350 <displaySettingsOn7Segment+0xda>
    2354:	00 c0       	rjmp	.+0      	; 0x2356 <displaySettingsOn7Segment+0xe0>
    2356:	00 00       	nop
	_delay_ms(DELAY_TIME);
	
	SEVENSEG_displayNumber(((year/1000) % 10),28);
    2358:	96 01       	movw	r18, r12
    235a:	36 95       	lsr	r19
    235c:	27 95       	ror	r18
    235e:	36 95       	lsr	r19
    2360:	27 95       	ror	r18
    2362:	36 95       	lsr	r19
    2364:	27 95       	ror	r18
    2366:	a5 ec       	ldi	r26, 0xC5	; 197
    2368:	b0 e2       	ldi	r27, 0x20	; 32
    236a:	0e 94 88 2d 	call	0x5b10	; 0x5b10 <__umulhisi3>
    236e:	ac 01       	movw	r20, r24
    2370:	52 95       	swap	r21
    2372:	42 95       	swap	r20
    2374:	4f 70       	andi	r20, 0x0F	; 15
    2376:	45 27       	eor	r20, r21
    2378:	5f 70       	andi	r21, 0x0F	; 15
    237a:	45 27       	eor	r20, r21
    237c:	9a 01       	movw	r18, r20
    237e:	ad ec       	ldi	r26, 0xCD	; 205
    2380:	bc ec       	ldi	r27, 0xCC	; 204
    2382:	0e 94 88 2d 	call	0x5b10	; 0x5b10 <__umulhisi3>
    2386:	96 95       	lsr	r25
    2388:	87 95       	ror	r24
    238a:	96 95       	lsr	r25
    238c:	87 95       	ror	r24
    238e:	96 95       	lsr	r25
    2390:	87 95       	ror	r24
    2392:	9c 01       	movw	r18, r24
    2394:	22 0f       	add	r18, r18
    2396:	33 1f       	adc	r19, r19
    2398:	88 0f       	add	r24, r24
    239a:	99 1f       	adc	r25, r25
    239c:	88 0f       	add	r24, r24
    239e:	99 1f       	adc	r25, r25
    23a0:	88 0f       	add	r24, r24
    23a2:	99 1f       	adc	r25, r25
    23a4:	82 0f       	add	r24, r18
    23a6:	93 1f       	adc	r25, r19
    23a8:	6c e1       	ldi	r22, 0x1C	; 28
    23aa:	24 2f       	mov	r18, r20
    23ac:	28 1b       	sub	r18, r24
    23ae:	82 2f       	mov	r24, r18
    23b0:	0e 94 7a 25 	call	0x4af4	; 0x4af4 <SEVENSEG_displayNumber>
	GPIO_writePin(PORTA_ID, PIN7_ID, LOGIC_LOW);
    23b4:	40 e0       	ldi	r20, 0x00	; 0
    23b6:	67 e0       	ldi	r22, 0x07	; 7
    23b8:	80 e0       	ldi	r24, 0x00	; 0
    23ba:	0e 94 60 26 	call	0x4cc0	; 0x4cc0 <GPIO_writePin>
	if(selectedDigit == 3){GPIO_writePin(PORTA_ID, PIN7_ID, LOGIC_HIGH);}
    23be:	c3 30       	cpi	r28, 0x03	; 3
    23c0:	29 f4       	brne	.+10     	; 0x23cc <displaySettingsOn7Segment+0x156>
    23c2:	41 e0       	ldi	r20, 0x01	; 1
    23c4:	67 e0       	ldi	r22, 0x07	; 7
    23c6:	80 e0       	ldi	r24, 0x00	; 0
    23c8:	0e 94 60 26 	call	0x4cc0	; 0x4cc0 <GPIO_writePin>
    23cc:	8c ec       	ldi	r24, 0xCC	; 204
    23ce:	9a e0       	ldi	r25, 0x0A	; 10
    23d0:	01 97       	sbiw	r24, 0x01	; 1
    23d2:	f1 f7       	brne	.-4      	; 0x23d0 <displaySettingsOn7Segment+0x15a>
    23d4:	00 c0       	rjmp	.+0      	; 0x23d6 <displaySettingsOn7Segment+0x160>
    23d6:	00 00       	nop
	_delay_ms(DELAY_TIME);
	SEVENSEG_displayNumber(((year/100) % 10),29);
    23d8:	96 01       	movw	r18, r12
    23da:	36 95       	lsr	r19
    23dc:	27 95       	ror	r18
    23de:	36 95       	lsr	r19
    23e0:	27 95       	ror	r18
    23e2:	ab e7       	ldi	r26, 0x7B	; 123
    23e4:	b4 e1       	ldi	r27, 0x14	; 20
    23e6:	0e 94 88 2d 	call	0x5b10	; 0x5b10 <__umulhisi3>
    23ea:	ac 01       	movw	r20, r24
    23ec:	56 95       	lsr	r21
    23ee:	47 95       	ror	r20
    23f0:	9a 01       	movw	r18, r20
    23f2:	ad ec       	ldi	r26, 0xCD	; 205
    23f4:	bc ec       	ldi	r27, 0xCC	; 204
    23f6:	0e 94 88 2d 	call	0x5b10	; 0x5b10 <__umulhisi3>
    23fa:	96 95       	lsr	r25
    23fc:	87 95       	ror	r24
    23fe:	96 95       	lsr	r25
    2400:	87 95       	ror	r24
    2402:	96 95       	lsr	r25
    2404:	87 95       	ror	r24
    2406:	9c 01       	movw	r18, r24
    2408:	22 0f       	add	r18, r18
    240a:	33 1f       	adc	r19, r19
    240c:	88 0f       	add	r24, r24
    240e:	99 1f       	adc	r25, r25
    2410:	88 0f       	add	r24, r24
    2412:	99 1f       	adc	r25, r25
    2414:	88 0f       	add	r24, r24
    2416:	99 1f       	adc	r25, r25
    2418:	82 0f       	add	r24, r18
    241a:	93 1f       	adc	r25, r19
    241c:	6d e1       	ldi	r22, 0x1D	; 29
    241e:	24 2f       	mov	r18, r20
    2420:	28 1b       	sub	r18, r24
    2422:	82 2f       	mov	r24, r18
    2424:	0e 94 7a 25 	call	0x4af4	; 0x4af4 <SEVENSEG_displayNumber>
	GPIO_writePin(PORTA_ID, PIN7_ID, LOGIC_LOW);
    2428:	40 e0       	ldi	r20, 0x00	; 0
    242a:	67 e0       	ldi	r22, 0x07	; 7
    242c:	80 e0       	ldi	r24, 0x00	; 0
    242e:	0e 94 60 26 	call	0x4cc0	; 0x4cc0 <GPIO_writePin>
	if(selectedDigit == 2){GPIO_writePin(PORTA_ID, PIN7_ID, LOGIC_HIGH);}
    2432:	c2 30       	cpi	r28, 0x02	; 2
    2434:	29 f4       	brne	.+10     	; 0x2440 <displaySettingsOn7Segment+0x1ca>
    2436:	41 e0       	ldi	r20, 0x01	; 1
    2438:	67 e0       	ldi	r22, 0x07	; 7
    243a:	80 e0       	ldi	r24, 0x00	; 0
    243c:	0e 94 60 26 	call	0x4cc0	; 0x4cc0 <GPIO_writePin>
    2440:	8c ec       	ldi	r24, 0xCC	; 204
    2442:	9a e0       	ldi	r25, 0x0A	; 10
    2444:	01 97       	sbiw	r24, 0x01	; 1
    2446:	f1 f7       	brne	.-4      	; 0x2444 <displaySettingsOn7Segment+0x1ce>
    2448:	00 c0       	rjmp	.+0      	; 0x244a <displaySettingsOn7Segment+0x1d4>
    244a:	00 00       	nop
	_delay_ms(DELAY_TIME);
	SEVENSEG_displayNumber(((year/10) % 10),30);
    244c:	96 01       	movw	r18, r12
    244e:	ad ec       	ldi	r26, 0xCD	; 205
    2450:	bc ec       	ldi	r27, 0xCC	; 204
    2452:	0e 94 88 2d 	call	0x5b10	; 0x5b10 <__umulhisi3>
    2456:	ac 01       	movw	r20, r24
    2458:	56 95       	lsr	r21
    245a:	47 95       	ror	r20
    245c:	56 95       	lsr	r21
    245e:	47 95       	ror	r20
    2460:	56 95       	lsr	r21
    2462:	47 95       	ror	r20
    2464:	9a 01       	movw	r18, r20
    2466:	0e 94 88 2d 	call	0x5b10	; 0x5b10 <__umulhisi3>
    246a:	96 95       	lsr	r25
    246c:	87 95       	ror	r24
    246e:	96 95       	lsr	r25
    2470:	87 95       	ror	r24
    2472:	96 95       	lsr	r25
    2474:	87 95       	ror	r24
    2476:	9c 01       	movw	r18, r24
    2478:	22 0f       	add	r18, r18
    247a:	33 1f       	adc	r19, r19
    247c:	88 0f       	add	r24, r24
    247e:	99 1f       	adc	r25, r25
    2480:	88 0f       	add	r24, r24
    2482:	99 1f       	adc	r25, r25
    2484:	88 0f       	add	r24, r24
    2486:	99 1f       	adc	r25, r25
    2488:	82 0f       	add	r24, r18
    248a:	93 1f       	adc	r25, r19
    248c:	6e e1       	ldi	r22, 0x1E	; 30
    248e:	24 2f       	mov	r18, r20
    2490:	28 1b       	sub	r18, r24
    2492:	82 2f       	mov	r24, r18
    2494:	0e 94 7a 25 	call	0x4af4	; 0x4af4 <SEVENSEG_displayNumber>
	GPIO_writePin(PORTA_ID, PIN7_ID, LOGIC_LOW);
    2498:	40 e0       	ldi	r20, 0x00	; 0
    249a:	67 e0       	ldi	r22, 0x07	; 7
    249c:	80 e0       	ldi	r24, 0x00	; 0
    249e:	0e 94 60 26 	call	0x4cc0	; 0x4cc0 <GPIO_writePin>
	if(selectedDigit == 1){GPIO_writePin(PORTA_ID, PIN7_ID, LOGIC_HIGH);}
    24a2:	c1 30       	cpi	r28, 0x01	; 1
    24a4:	29 f4       	brne	.+10     	; 0x24b0 <displaySettingsOn7Segment+0x23a>
    24a6:	41 e0       	ldi	r20, 0x01	; 1
    24a8:	67 e0       	ldi	r22, 0x07	; 7
    24aa:	80 e0       	ldi	r24, 0x00	; 0
    24ac:	0e 94 60 26 	call	0x4cc0	; 0x4cc0 <GPIO_writePin>
    24b0:	8c ec       	ldi	r24, 0xCC	; 204
    24b2:	9a e0       	ldi	r25, 0x0A	; 10
    24b4:	01 97       	sbiw	r24, 0x01	; 1
    24b6:	f1 f7       	brne	.-4      	; 0x24b4 <displaySettingsOn7Segment+0x23e>
    24b8:	00 c0       	rjmp	.+0      	; 0x24ba <displaySettingsOn7Segment+0x244>
    24ba:	00 00       	nop
	_delay_ms(DELAY_TIME);
	SEVENSEG_displayNumber(year%10,31);
    24bc:	96 01       	movw	r18, r12
    24be:	ad ec       	ldi	r26, 0xCD	; 205
    24c0:	bc ec       	ldi	r27, 0xCC	; 204
    24c2:	0e 94 88 2d 	call	0x5b10	; 0x5b10 <__umulhisi3>
    24c6:	96 95       	lsr	r25
    24c8:	87 95       	ror	r24
    24ca:	96 95       	lsr	r25
    24cc:	87 95       	ror	r24
    24ce:	96 95       	lsr	r25
    24d0:	87 95       	ror	r24
    24d2:	9c 01       	movw	r18, r24
    24d4:	22 0f       	add	r18, r18
    24d6:	33 1f       	adc	r19, r19
    24d8:	88 0f       	add	r24, r24
    24da:	99 1f       	adc	r25, r25
    24dc:	88 0f       	add	r24, r24
    24de:	99 1f       	adc	r25, r25
    24e0:	88 0f       	add	r24, r24
    24e2:	99 1f       	adc	r25, r25
    24e4:	82 0f       	add	r24, r18
    24e6:	93 1f       	adc	r25, r19
    24e8:	6f e1       	ldi	r22, 0x1F	; 31
    24ea:	2c 2d       	mov	r18, r12
    24ec:	28 1b       	sub	r18, r24
    24ee:	82 2f       	mov	r24, r18
    24f0:	0e 94 7a 25 	call	0x4af4	; 0x4af4 <SEVENSEG_displayNumber>
	GPIO_writePin(PORTA_ID, PIN7_ID, LOGIC_LOW);
    24f4:	40 e0       	ldi	r20, 0x00	; 0
    24f6:	67 e0       	ldi	r22, 0x07	; 7
    24f8:	80 e0       	ldi	r24, 0x00	; 0
    24fa:	0e 94 60 26 	call	0x4cc0	; 0x4cc0 <GPIO_writePin>
	if(selectedDigit == 0){GPIO_writePin(PORTA_ID, PIN7_ID, LOGIC_HIGH);}
    24fe:	c1 11       	cpse	r28, r1
    2500:	05 c0       	rjmp	.+10     	; 0x250c <displaySettingsOn7Segment+0x296>
    2502:	41 e0       	ldi	r20, 0x01	; 1
    2504:	67 e0       	ldi	r22, 0x07	; 7
    2506:	80 e0       	ldi	r24, 0x00	; 0
    2508:	0e 94 60 26 	call	0x4cc0	; 0x4cc0 <GPIO_writePin>
    250c:	8c ec       	ldi	r24, 0xCC	; 204
    250e:	9a e0       	ldi	r25, 0x0A	; 10
    2510:	01 97       	sbiw	r24, 0x01	; 1
    2512:	f1 f7       	brne	.-4      	; 0x2510 <displaySettingsOn7Segment+0x29a>
    2514:	00 c0       	rjmp	.+0      	; 0x2516 <displaySettingsOn7Segment+0x2a0>
    2516:	00 00       	nop
	_delay_ms(DELAY_TIME);

	SEVENSEG_displayNumber(hour/10,32);
    2518:	8d ec       	ldi	r24, 0xCD	; 205
    251a:	08 9f       	mul	r16, r24
    251c:	81 2d       	mov	r24, r1
    251e:	11 24       	eor	r1, r1
    2520:	60 e2       	ldi	r22, 0x20	; 32
    2522:	86 95       	lsr	r24
    2524:	86 95       	lsr	r24
    2526:	86 95       	lsr	r24
    2528:	0e 94 7a 25 	call	0x4af4	; 0x4af4 <SEVENSEG_displayNumber>
	GPIO_writePin(PORTA_ID, PIN7_ID, LOGIC_LOW);
    252c:	40 e0       	ldi	r20, 0x00	; 0
    252e:	67 e0       	ldi	r22, 0x07	; 7
    2530:	80 e0       	ldi	r24, 0x00	; 0
    2532:	0e 94 60 26 	call	0x4cc0	; 0x4cc0 <GPIO_writePin>
	if(selectedDigit == 7){GPIO_writePin(PORTA_ID, PIN7_ID, LOGIC_HIGH);}
    2536:	c7 30       	cpi	r28, 0x07	; 7
    2538:	29 f4       	brne	.+10     	; 0x2544 <displaySettingsOn7Segment+0x2ce>
    253a:	41 e0       	ldi	r20, 0x01	; 1
    253c:	67 e0       	ldi	r22, 0x07	; 7
    253e:	80 e0       	ldi	r24, 0x00	; 0
    2540:	0e 94 60 26 	call	0x4cc0	; 0x4cc0 <GPIO_writePin>
    2544:	8c ec       	ldi	r24, 0xCC	; 204
    2546:	9a e0       	ldi	r25, 0x0A	; 10
    2548:	01 97       	sbiw	r24, 0x01	; 1
    254a:	f1 f7       	brne	.-4      	; 0x2548 <displaySettingsOn7Segment+0x2d2>
    254c:	00 c0       	rjmp	.+0      	; 0x254e <displaySettingsOn7Segment+0x2d8>
    254e:	00 00       	nop
	_delay_ms(DELAY_TIME);
	SEVENSEG_displayNumber(hour%10,33);
    2550:	cd ec       	ldi	r28, 0xCD	; 205
    2552:	0c 9f       	mul	r16, r28
    2554:	91 2d       	mov	r25, r1
    2556:	11 24       	eor	r1, r1
    2558:	96 95       	lsr	r25
    255a:	96 95       	lsr	r25
    255c:	96 95       	lsr	r25
    255e:	99 0f       	add	r25, r25
    2560:	89 2f       	mov	r24, r25
    2562:	88 0f       	add	r24, r24
    2564:	88 0f       	add	r24, r24
    2566:	98 0f       	add	r25, r24
    2568:	61 e2       	ldi	r22, 0x21	; 33
    256a:	80 2f       	mov	r24, r16
    256c:	89 1b       	sub	r24, r25
    256e:	0e 94 7a 25 	call	0x4af4	; 0x4af4 <SEVENSEG_displayNumber>
    2572:	8c ec       	ldi	r24, 0xCC	; 204
    2574:	9a e0       	ldi	r25, 0x0A	; 10
    2576:	01 97       	sbiw	r24, 0x01	; 1
    2578:	f1 f7       	brne	.-4      	; 0x2576 <displaySettingsOn7Segment+0x300>
    257a:	00 c0       	rjmp	.+0      	; 0x257c <displaySettingsOn7Segment+0x306>
    257c:	00 00       	nop
	_delay_ms(DELAY_TIME);

	SEVENSEG_displayNumber(minute/10,34);
    257e:	ec 9e       	mul	r14, r28
    2580:	81 2d       	mov	r24, r1
    2582:	11 24       	eor	r1, r1
    2584:	62 e2       	ldi	r22, 0x22	; 34
    2586:	86 95       	lsr	r24
    2588:	86 95       	lsr	r24
    258a:	86 95       	lsr	r24
    258c:	0e 94 7a 25 	call	0x4af4	; 0x4af4 <SEVENSEG_displayNumber>
	GPIO_writePin(PORTA_ID, PIN7_ID, LOGIC_LOW);
    2590:	40 e0       	ldi	r20, 0x00	; 0
    2592:	67 e0       	ldi	r22, 0x07	; 7
    2594:	80 e0       	ldi	r24, 0x00	; 0
    2596:	0e 94 60 26 	call	0x4cc0	; 0x4cc0 <GPIO_writePin>
}
    259a:	df 91       	pop	r29
    259c:	cf 91       	pop	r28
    259e:	1f 91       	pop	r17
    25a0:	0f 91       	pop	r16
    25a2:	ff 90       	pop	r15
    25a4:	ef 90       	pop	r14
    25a6:	df 90       	pop	r13
    25a8:	cf 90       	pop	r12
    25aa:	08 95       	ret

Disassembly of section .text.displayPrayerTimesOn7Segment:

00001bb4 <displayPrayerTimesOn7Segment>:

/*
* Description :
-> Display prayer times on 7-segment display
*/
void displayPrayerTimesOn7Segment(uint8 fajrFlag, uint8 sunriseFlag, uint8 dhuhrFlag, uint8 asrFlag, uint8 maghribFlag, uint8 ishaFlag, uint8 fajr_hour, uint8 fajr_min, uint8 sunrise_hour, uint8 sunrise_min, uint8 dhuhr_hour, uint8 dhuhr_min, uint8 asr_hour, uint8 asr_min, uint8 maghrib_hour, uint8 maghrib_min, uint8 isha_hour, uint8 isha_min) {
    1bb4:	8f 92       	push	r8
    1bb6:	9f 92       	push	r9
    1bb8:	af 92       	push	r10
    1bba:	bf 92       	push	r11
    1bbc:	cf 92       	push	r12
    1bbe:	df 92       	push	r13
    1bc0:	ef 92       	push	r14
    1bc2:	ff 92       	push	r15
    1bc4:	0f 93       	push	r16
    1bc6:	1f 93       	push	r17
    1bc8:	cf 93       	push	r28
    1bca:	df 93       	push	r29
    1bcc:	cd b7       	in	r28, 0x3d	; 61
    1bce:	de b7       	in	r29, 0x3e	; 62
    1bd0:	96 2e       	mov	r9, r22
    1bd2:	d4 2e       	mov	r13, r20
    1bd4:	f2 2e       	mov	r15, r18
	if(fajrFlag){
    1bd6:	88 23       	and	r24, r24
    1bd8:	09 f4       	brne	.+2      	; 0x1bdc <displayPrayerTimesOn7Segment+0x28>
    1bda:	41 c0       	rjmp	.+130    	; 0x1c5e <displayPrayerTimesOn7Segment+0xaa>
		SEVENSEG_displayNumber(fajr_hour/10,0);
    1bdc:	1d ec       	ldi	r17, 0xCD	; 205
    1bde:	c1 9e       	mul	r12, r17
    1be0:	b1 2c       	mov	r11, r1
    1be2:	11 24       	eor	r1, r1
    1be4:	b6 94       	lsr	r11
    1be6:	b6 94       	lsr	r11
    1be8:	b6 94       	lsr	r11
    1bea:	60 e0       	ldi	r22, 0x00	; 0
    1bec:	8b 2d       	mov	r24, r11
    1bee:	0e 94 7a 25 	call	0x4af4	; 0x4af4 <SEVENSEG_displayNumber>
    1bf2:	8c ec       	ldi	r24, 0xCC	; 204
    1bf4:	9a e0       	ldi	r25, 0x0A	; 10
    1bf6:	01 97       	sbiw	r24, 0x01	; 1
    1bf8:	f1 f7       	brne	.-4      	; 0x1bf6 <displayPrayerTimesOn7Segment+0x42>
    1bfa:	00 c0       	rjmp	.+0      	; 0x1bfc <displayPrayerTimesOn7Segment+0x48>
    1bfc:	00 00       	nop
		_delay_ms(DELAY_TIME);
		SEVENSEG_displayNumber(fajr_hour%10,1);
    1bfe:	bb 0c       	add	r11, r11
    1c00:	8b 2d       	mov	r24, r11
    1c02:	88 0f       	add	r24, r24
    1c04:	88 0f       	add	r24, r24
    1c06:	b8 0e       	add	r11, r24
    1c08:	61 e0       	ldi	r22, 0x01	; 1
    1c0a:	8c 2d       	mov	r24, r12
    1c0c:	8b 19       	sub	r24, r11
    1c0e:	0e 94 7a 25 	call	0x4af4	; 0x4af4 <SEVENSEG_displayNumber>
    1c12:	8c ec       	ldi	r24, 0xCC	; 204
    1c14:	9a e0       	ldi	r25, 0x0A	; 10
    1c16:	01 97       	sbiw	r24, 0x01	; 1
    1c18:	f1 f7       	brne	.-4      	; 0x1c16 <displayPrayerTimesOn7Segment+0x62>
    1c1a:	00 c0       	rjmp	.+0      	; 0x1c1c <displayPrayerTimesOn7Segment+0x68>
    1c1c:	00 00       	nop
		_delay_ms(DELAY_TIME);
		
		SEVENSEG_displayNumber(fajr_min/10,2);
    1c1e:	a1 9e       	mul	r10, r17
    1c20:	11 2d       	mov	r17, r1
    1c22:	11 24       	eor	r1, r1
    1c24:	16 95       	lsr	r17
    1c26:	16 95       	lsr	r17
    1c28:	16 95       	lsr	r17
    1c2a:	62 e0       	ldi	r22, 0x02	; 2
    1c2c:	81 2f       	mov	r24, r17
    1c2e:	0e 94 7a 25 	call	0x4af4	; 0x4af4 <SEVENSEG_displayNumber>
    1c32:	8c ec       	ldi	r24, 0xCC	; 204
    1c34:	9a e0       	ldi	r25, 0x0A	; 10
    1c36:	01 97       	sbiw	r24, 0x01	; 1
    1c38:	f1 f7       	brne	.-4      	; 0x1c36 <displayPrayerTimesOn7Segment+0x82>
    1c3a:	00 c0       	rjmp	.+0      	; 0x1c3c <displayPrayerTimesOn7Segment+0x88>
    1c3c:	00 00       	nop
		_delay_ms(DELAY_TIME);
		SEVENSEG_displayNumber(fajr_min%10,3);
    1c3e:	11 0f       	add	r17, r17
    1c40:	81 2f       	mov	r24, r17
    1c42:	88 0f       	add	r24, r24
    1c44:	88 0f       	add	r24, r24
    1c46:	18 0f       	add	r17, r24
    1c48:	63 e0       	ldi	r22, 0x03	; 3
    1c4a:	8a 2d       	mov	r24, r10
    1c4c:	81 1b       	sub	r24, r17
    1c4e:	0e 94 7a 25 	call	0x4af4	; 0x4af4 <SEVENSEG_displayNumber>
    1c52:	8c ec       	ldi	r24, 0xCC	; 204
    1c54:	9a e0       	ldi	r25, 0x0A	; 10
    1c56:	01 97       	sbiw	r24, 0x01	; 1
    1c58:	f1 f7       	brne	.-4      	; 0x1c56 <displayPrayerTimesOn7Segment+0xa2>
    1c5a:	00 c0       	rjmp	.+0      	; 0x1c5c <displayPrayerTimesOn7Segment+0xa8>
    1c5c:	00 00       	nop
		_delay_ms(DELAY_TIME);
	}
	
	if(sunriseFlag){
    1c5e:	99 20       	and	r9, r9
    1c60:	09 f4       	brne	.+2      	; 0x1c64 <displayPrayerTimesOn7Segment+0xb0>
    1c62:	45 c0       	rjmp	.+138    	; 0x1cee <displayPrayerTimesOn7Segment+0x13a>
		SEVENSEG_displayNumber(sunrise_hour/10,4);
    1c64:	1d ec       	ldi	r17, 0xCD	; 205
    1c66:	81 9e       	mul	r8, r17
    1c68:	81 2d       	mov	r24, r1
    1c6a:	11 24       	eor	r1, r1
    1c6c:	64 e0       	ldi	r22, 0x04	; 4
    1c6e:	86 95       	lsr	r24
    1c70:	86 95       	lsr	r24
    1c72:	86 95       	lsr	r24
    1c74:	0e 94 7a 25 	call	0x4af4	; 0x4af4 <SEVENSEG_displayNumber>
    1c78:	8c ec       	ldi	r24, 0xCC	; 204
    1c7a:	9a e0       	ldi	r25, 0x0A	; 10
    1c7c:	01 97       	sbiw	r24, 0x01	; 1
    1c7e:	f1 f7       	brne	.-4      	; 0x1c7c <displayPrayerTimesOn7Segment+0xc8>
    1c80:	00 c0       	rjmp	.+0      	; 0x1c82 <displayPrayerTimesOn7Segment+0xce>
    1c82:	00 00       	nop
		_delay_ms(DELAY_TIME);
		SEVENSEG_displayNumber(sunrise_hour%100,5);
    1c84:	89 e2       	ldi	r24, 0x29	; 41
    1c86:	88 9e       	mul	r8, r24
    1c88:	81 2d       	mov	r24, r1
    1c8a:	11 24       	eor	r1, r1
    1c8c:	82 95       	swap	r24
    1c8e:	8f 70       	andi	r24, 0x0F	; 15
    1c90:	65 e0       	ldi	r22, 0x05	; 5
    1c92:	94 e6       	ldi	r25, 0x64	; 100
    1c94:	89 9f       	mul	r24, r25
    1c96:	80 18       	sub	r8, r0
    1c98:	11 24       	eor	r1, r1
    1c9a:	88 2d       	mov	r24, r8
    1c9c:	0e 94 7a 25 	call	0x4af4	; 0x4af4 <SEVENSEG_displayNumber>
    1ca0:	8c ec       	ldi	r24, 0xCC	; 204
    1ca2:	9a e0       	ldi	r25, 0x0A	; 10
    1ca4:	01 97       	sbiw	r24, 0x01	; 1
    1ca6:	f1 f7       	brne	.-4      	; 0x1ca4 <displayPrayerTimesOn7Segment+0xf0>
    1ca8:	00 c0       	rjmp	.+0      	; 0x1caa <displayPrayerTimesOn7Segment+0xf6>
    1caa:	00 00       	nop
		_delay_ms(DELAY_TIME);
		
		SEVENSEG_displayNumber(sunrise_min/10,6);
    1cac:	9f 85       	ldd	r25, Y+15	; 0x0f
    1cae:	91 9f       	mul	r25, r17
    1cb0:	11 2d       	mov	r17, r1
    1cb2:	11 24       	eor	r1, r1
    1cb4:	16 95       	lsr	r17
    1cb6:	16 95       	lsr	r17
    1cb8:	16 95       	lsr	r17
    1cba:	66 e0       	ldi	r22, 0x06	; 6
    1cbc:	81 2f       	mov	r24, r17
    1cbe:	0e 94 7a 25 	call	0x4af4	; 0x4af4 <SEVENSEG_displayNumber>
    1cc2:	8c ec       	ldi	r24, 0xCC	; 204
    1cc4:	9a e0       	ldi	r25, 0x0A	; 10
    1cc6:	01 97       	sbiw	r24, 0x01	; 1
    1cc8:	f1 f7       	brne	.-4      	; 0x1cc6 <displayPrayerTimesOn7Segment+0x112>
    1cca:	00 c0       	rjmp	.+0      	; 0x1ccc <displayPrayerTimesOn7Segment+0x118>
    1ccc:	00 00       	nop
		_delay_ms(DELAY_TIME);
		SEVENSEG_displayNumber(sunrise_min%10,7);
    1cce:	11 0f       	add	r17, r17
    1cd0:	81 2f       	mov	r24, r17
    1cd2:	88 0f       	add	r24, r24
    1cd4:	88 0f       	add	r24, r24
    1cd6:	18 0f       	add	r17, r24
    1cd8:	67 e0       	ldi	r22, 0x07	; 7
    1cda:	8f 85       	ldd	r24, Y+15	; 0x0f
    1cdc:	81 1b       	sub	r24, r17
    1cde:	0e 94 7a 25 	call	0x4af4	; 0x4af4 <SEVENSEG_displayNumber>
    1ce2:	8c ec       	ldi	r24, 0xCC	; 204
    1ce4:	9a e0       	ldi	r25, 0x0A	; 10
    1ce6:	01 97       	sbiw	r24, 0x01	; 1
    1ce8:	f1 f7       	brne	.-4      	; 0x1ce6 <displayPrayerTimesOn7Segment+0x132>
    1cea:	00 c0       	rjmp	.+0      	; 0x1cec <displayPrayerTimesOn7Segment+0x138>
    1cec:	00 00       	nop
		_delay_ms(DELAY_TIME);
	}
	
	if(dhuhrFlag){
    1cee:	dd 20       	and	r13, r13
    1cf0:	09 f4       	brne	.+2      	; 0x1cf4 <displayPrayerTimesOn7Segment+0x140>
    1cf2:	43 c0       	rjmp	.+134    	; 0x1d7a <displayPrayerTimesOn7Segment+0x1c6>
		SEVENSEG_displayNumber(dhuhr_hour/10,8);
    1cf4:	1d ec       	ldi	r17, 0xCD	; 205
    1cf6:	98 89       	ldd	r25, Y+16	; 0x10
    1cf8:	91 9f       	mul	r25, r17
    1cfa:	d1 2c       	mov	r13, r1
    1cfc:	11 24       	eor	r1, r1
    1cfe:	d6 94       	lsr	r13
    1d00:	d6 94       	lsr	r13
    1d02:	d6 94       	lsr	r13
    1d04:	68 e0       	ldi	r22, 0x08	; 8
    1d06:	8d 2d       	mov	r24, r13
    1d08:	0e 94 7a 25 	call	0x4af4	; 0x4af4 <SEVENSEG_displayNumber>
    1d0c:	8c ec       	ldi	r24, 0xCC	; 204
    1d0e:	9a e0       	ldi	r25, 0x0A	; 10
    1d10:	01 97       	sbiw	r24, 0x01	; 1
    1d12:	f1 f7       	brne	.-4      	; 0x1d10 <displayPrayerTimesOn7Segment+0x15c>
    1d14:	00 c0       	rjmp	.+0      	; 0x1d16 <displayPrayerTimesOn7Segment+0x162>
    1d16:	00 00       	nop
		_delay_ms(DELAY_TIME);
		SEVENSEG_displayNumber(dhuhr_hour%10,9);
    1d18:	dd 0c       	add	r13, r13
    1d1a:	8d 2d       	mov	r24, r13
    1d1c:	88 0f       	add	r24, r24
    1d1e:	88 0f       	add	r24, r24
    1d20:	d8 0e       	add	r13, r24
    1d22:	69 e0       	ldi	r22, 0x09	; 9
    1d24:	88 89       	ldd	r24, Y+16	; 0x10
    1d26:	8d 19       	sub	r24, r13
    1d28:	0e 94 7a 25 	call	0x4af4	; 0x4af4 <SEVENSEG_displayNumber>
    1d2c:	8c ec       	ldi	r24, 0xCC	; 204
    1d2e:	9a e0       	ldi	r25, 0x0A	; 10
    1d30:	01 97       	sbiw	r24, 0x01	; 1
    1d32:	f1 f7       	brne	.-4      	; 0x1d30 <displayPrayerTimesOn7Segment+0x17c>
    1d34:	00 c0       	rjmp	.+0      	; 0x1d36 <displayPrayerTimesOn7Segment+0x182>
    1d36:	00 00       	nop
		_delay_ms(DELAY_TIME);
		
		SEVENSEG_displayNumber(dhuhr_min/10,10);
    1d38:	99 89       	ldd	r25, Y+17	; 0x11
    1d3a:	91 9f       	mul	r25, r17
    1d3c:	11 2d       	mov	r17, r1
    1d3e:	11 24       	eor	r1, r1
    1d40:	16 95       	lsr	r17
    1d42:	16 95       	lsr	r17
    1d44:	16 95       	lsr	r17
    1d46:	6a e0       	ldi	r22, 0x0A	; 10
    1d48:	81 2f       	mov	r24, r17
    1d4a:	0e 94 7a 25 	call	0x4af4	; 0x4af4 <SEVENSEG_displayNumber>
    1d4e:	8c ec       	ldi	r24, 0xCC	; 204
    1d50:	9a e0       	ldi	r25, 0x0A	; 10
    1d52:	01 97       	sbiw	r24, 0x01	; 1
    1d54:	f1 f7       	brne	.-4      	; 0x1d52 <displayPrayerTimesOn7Segment+0x19e>
    1d56:	00 c0       	rjmp	.+0      	; 0x1d58 <displayPrayerTimesOn7Segment+0x1a4>
    1d58:	00 00       	nop
		_delay_ms(DELAY_TIME);
		SEVENSEG_displayNumber(dhuhr_min%10,11);
    1d5a:	11 0f       	add	r17, r17
    1d5c:	81 2f       	mov	r24, r17
    1d5e:	88 0f       	add	r24, r24
    1d60:	88 0f       	add	r24, r24
    1d62:	18 0f       	add	r17, r24
    1d64:	6b e0       	ldi	r22, 0x0B	; 11
    1d66:	89 89       	ldd	r24, Y+17	; 0x11
    1d68:	81 1b       	sub	r24, r17
    1d6a:	0e 94 7a 25 	call	0x4af4	; 0x4af4 <SEVENSEG_displayNumber>
    1d6e:	8c ec       	ldi	r24, 0xCC	; 204
    1d70:	9a e0       	ldi	r25, 0x0A	; 10
    1d72:	01 97       	sbiw	r24, 0x01	; 1
    1d74:	f1 f7       	brne	.-4      	; 0x1d72 <displayPrayerTimesOn7Segment+0x1be>
    1d76:	00 c0       	rjmp	.+0      	; 0x1d78 <displayPrayerTimesOn7Segment+0x1c4>
    1d78:	00 00       	nop
		_delay_ms(DELAY_TIME);
	}
	
	if(asrFlag){
    1d7a:	ff 20       	and	r15, r15
    1d7c:	09 f4       	brne	.+2      	; 0x1d80 <displayPrayerTimesOn7Segment+0x1cc>
    1d7e:	43 c0       	rjmp	.+134    	; 0x1e06 <displayPrayerTimesOn7Segment+0x252>
		SEVENSEG_displayNumber(asr_hour/10,12);
    1d80:	1d ec       	ldi	r17, 0xCD	; 205
    1d82:	9a 89       	ldd	r25, Y+18	; 0x12
    1d84:	91 9f       	mul	r25, r17
    1d86:	f1 2c       	mov	r15, r1
    1d88:	11 24       	eor	r1, r1
    1d8a:	f6 94       	lsr	r15
    1d8c:	f6 94       	lsr	r15
    1d8e:	f6 94       	lsr	r15
    1d90:	6c e0       	ldi	r22, 0x0C	; 12
    1d92:	8f 2d       	mov	r24, r15
    1d94:	0e 94 7a 25 	call	0x4af4	; 0x4af4 <SEVENSEG_displayNumber>
    1d98:	8c ec       	ldi	r24, 0xCC	; 204
    1d9a:	9a e0       	ldi	r25, 0x0A	; 10
    1d9c:	01 97       	sbiw	r24, 0x01	; 1
    1d9e:	f1 f7       	brne	.-4      	; 0x1d9c <displayPrayerTimesOn7Segment+0x1e8>
    1da0:	00 c0       	rjmp	.+0      	; 0x1da2 <displayPrayerTimesOn7Segment+0x1ee>
    1da2:	00 00       	nop
		_delay_ms(DELAY_TIME);
		SEVENSEG_displayNumber(asr_hour%10,13);
    1da4:	ff 0c       	add	r15, r15
    1da6:	8f 2d       	mov	r24, r15
    1da8:	88 0f       	add	r24, r24
    1daa:	88 0f       	add	r24, r24
    1dac:	f8 0e       	add	r15, r24
    1dae:	6d e0       	ldi	r22, 0x0D	; 13
    1db0:	8a 89       	ldd	r24, Y+18	; 0x12
    1db2:	8f 19       	sub	r24, r15
    1db4:	0e 94 7a 25 	call	0x4af4	; 0x4af4 <SEVENSEG_displayNumber>
    1db8:	8c ec       	ldi	r24, 0xCC	; 204
    1dba:	9a e0       	ldi	r25, 0x0A	; 10
    1dbc:	01 97       	sbiw	r24, 0x01	; 1
    1dbe:	f1 f7       	brne	.-4      	; 0x1dbc <displayPrayerTimesOn7Segment+0x208>
    1dc0:	00 c0       	rjmp	.+0      	; 0x1dc2 <displayPrayerTimesOn7Segment+0x20e>
    1dc2:	00 00       	nop
		_delay_ms(DELAY_TIME);
		
		SEVENSEG_displayNumber(asr_min/10,14);
    1dc4:	9b 89       	ldd	r25, Y+19	; 0x13
    1dc6:	91 9f       	mul	r25, r17
    1dc8:	11 2d       	mov	r17, r1
    1dca:	11 24       	eor	r1, r1
    1dcc:	16 95       	lsr	r17
    1dce:	16 95       	lsr	r17
    1dd0:	16 95       	lsr	r17
    1dd2:	6e e0       	ldi	r22, 0x0E	; 14
    1dd4:	81 2f       	mov	r24, r17
    1dd6:	0e 94 7a 25 	call	0x4af4	; 0x4af4 <SEVENSEG_displayNumber>
    1dda:	8c ec       	ldi	r24, 0xCC	; 204
    1ddc:	9a e0       	ldi	r25, 0x0A	; 10
    1dde:	01 97       	sbiw	r24, 0x01	; 1
    1de0:	f1 f7       	brne	.-4      	; 0x1dde <displayPrayerTimesOn7Segment+0x22a>
    1de2:	00 c0       	rjmp	.+0      	; 0x1de4 <displayPrayerTimesOn7Segment+0x230>
    1de4:	00 00       	nop
		_delay_ms(DELAY_TIME);
		SEVENSEG_displayNumber(asr_min%10,15);
    1de6:	11 0f       	add	r17, r17
    1de8:	81 2f       	mov	r24, r17
    1dea:	88 0f       	add	r24, r24
    1dec:	88 0f       	add	r24, r24
    1dee:	18 0f       	add	r17, r24
    1df0:	6f e0       	ldi	r22, 0x0F	; 15
    1df2:	8b 89       	ldd	r24, Y+19	; 0x13
    1df4:	81 1b       	sub	r24, r17
    1df6:	0e 94 7a 25 	call	0x4af4	; 0x4af4 <SEVENSEG_displayNumber>
    1dfa:	8c ec       	ldi	r24, 0xCC	; 204
    1dfc:	9a e0       	ldi	r25, 0x0A	; 10
    1dfe:	01 97       	sbiw	r24, 0x01	; 1
    1e00:	f1 f7       	brne	.-4      	; 0x1dfe <displayPrayerTimesOn7Segment+0x24a>
    1e02:	00 c0       	rjmp	.+0      	; 0x1e04 <displayPrayerTimesOn7Segment+0x250>
    1e04:	00 00       	nop
		_delay_ms(DELAY_TIME);
	}
	
	if(maghribFlag){
    1e06:	00 23       	and	r16, r16
    1e08:	09 f4       	brne	.+2      	; 0x1e0c <displayPrayerTimesOn7Segment+0x258>
    1e0a:	43 c0       	rjmp	.+134    	; 0x1e92 <displayPrayerTimesOn7Segment+0x2de>
		SEVENSEG_displayNumber(maghrib_hour/10,16);
    1e0c:	1d ec       	ldi	r17, 0xCD	; 205
    1e0e:	9c 89       	ldd	r25, Y+20	; 0x14
    1e10:	91 9f       	mul	r25, r17
    1e12:	01 2d       	mov	r16, r1
    1e14:	11 24       	eor	r1, r1
    1e16:	06 95       	lsr	r16
    1e18:	06 95       	lsr	r16
    1e1a:	06 95       	lsr	r16
    1e1c:	60 e1       	ldi	r22, 0x10	; 16
    1e1e:	80 2f       	mov	r24, r16
    1e20:	0e 94 7a 25 	call	0x4af4	; 0x4af4 <SEVENSEG_displayNumber>
    1e24:	8c ec       	ldi	r24, 0xCC	; 204
    1e26:	9a e0       	ldi	r25, 0x0A	; 10
    1e28:	01 97       	sbiw	r24, 0x01	; 1
    1e2a:	f1 f7       	brne	.-4      	; 0x1e28 <displayPrayerTimesOn7Segment+0x274>
    1e2c:	00 c0       	rjmp	.+0      	; 0x1e2e <displayPrayerTimesOn7Segment+0x27a>
    1e2e:	00 00       	nop
		_delay_ms(DELAY_TIME);
		SEVENSEG_displayNumber(maghrib_hour%10,17);
    1e30:	00 0f       	add	r16, r16
    1e32:	80 2f       	mov	r24, r16
    1e34:	88 0f       	add	r24, r24
    1e36:	88 0f       	add	r24, r24
    1e38:	08 0f       	add	r16, r24
    1e3a:	61 e1       	ldi	r22, 0x11	; 17
    1e3c:	8c 89       	ldd	r24, Y+20	; 0x14
    1e3e:	80 1b       	sub	r24, r16
    1e40:	0e 94 7a 25 	call	0x4af4	; 0x4af4 <SEVENSEG_displayNumber>
    1e44:	8c ec       	ldi	r24, 0xCC	; 204
    1e46:	9a e0       	ldi	r25, 0x0A	; 10
    1e48:	01 97       	sbiw	r24, 0x01	; 1
    1e4a:	f1 f7       	brne	.-4      	; 0x1e48 <displayPrayerTimesOn7Segment+0x294>
    1e4c:	00 c0       	rjmp	.+0      	; 0x1e4e <displayPrayerTimesOn7Segment+0x29a>
    1e4e:	00 00       	nop
		_delay_ms(DELAY_TIME);
		
		SEVENSEG_displayNumber(maghrib_min/10,18);
    1e50:	9d 89       	ldd	r25, Y+21	; 0x15
    1e52:	91 9f       	mul	r25, r17
    1e54:	11 2d       	mov	r17, r1
    1e56:	11 24       	eor	r1, r1
    1e58:	16 95       	lsr	r17
    1e5a:	16 95       	lsr	r17
    1e5c:	16 95       	lsr	r17
    1e5e:	62 e1       	ldi	r22, 0x12	; 18
    1e60:	81 2f       	mov	r24, r17
    1e62:	0e 94 7a 25 	call	0x4af4	; 0x4af4 <SEVENSEG_displayNumber>
    1e66:	8c ec       	ldi	r24, 0xCC	; 204
    1e68:	9a e0       	ldi	r25, 0x0A	; 10
    1e6a:	01 97       	sbiw	r24, 0x01	; 1
    1e6c:	f1 f7       	brne	.-4      	; 0x1e6a <displayPrayerTimesOn7Segment+0x2b6>
    1e6e:	00 c0       	rjmp	.+0      	; 0x1e70 <displayPrayerTimesOn7Segment+0x2bc>
    1e70:	00 00       	nop
		_delay_ms(DELAY_TIME);
		SEVENSEG_displayNumber(maghrib_min%10,19);
    1e72:	11 0f       	add	r17, r17
    1e74:	81 2f       	mov	r24, r17
    1e76:	88 0f       	add	r24, r24
    1e78:	88 0f       	add	r24, r24
    1e7a:	18 0f       	add	r17, r24
    1e7c:	63 e1       	ldi	r22, 0x13	; 19
    1e7e:	8d 89       	ldd	r24, Y+21	; 0x15
    1e80:	81 1b       	sub	r24, r17
    1e82:	0e 94 7a 25 	call	0x4af4	; 0x4af4 <SEVENSEG_displayNumber>
    1e86:	8c ec       	ldi	r24, 0xCC	; 204
    1e88:	9a e0       	ldi	r25, 0x0A	; 10
    1e8a:	01 97       	sbiw	r24, 0x01	; 1
    1e8c:	f1 f7       	brne	.-4      	; 0x1e8a <displayPrayerTimesOn7Segment+0x2d6>
    1e8e:	00 c0       	rjmp	.+0      	; 0x1e90 <displayPrayerTimesOn7Segment+0x2dc>
    1e90:	00 00       	nop
		_delay_ms(DELAY_TIME);
	}
	
	if(ishaFlag){
    1e92:	ee 20       	and	r14, r14
    1e94:	09 f4       	brne	.+2      	; 0x1e98 <displayPrayerTimesOn7Segment+0x2e4>
    1e96:	43 c0       	rjmp	.+134    	; 0x1f1e <displayPrayerTimesOn7Segment+0x36a>
		SEVENSEG_displayNumber(isha_hour/10,20);
    1e98:	1d ec       	ldi	r17, 0xCD	; 205
    1e9a:	9e 89       	ldd	r25, Y+22	; 0x16
    1e9c:	91 9f       	mul	r25, r17
    1e9e:	01 2d       	mov	r16, r1
    1ea0:	11 24       	eor	r1, r1
    1ea2:	06 95       	lsr	r16
    1ea4:	06 95       	lsr	r16
    1ea6:	06 95       	lsr	r16
    1ea8:	64 e1       	ldi	r22, 0x14	; 20
    1eaa:	80 2f       	mov	r24, r16
    1eac:	0e 94 7a 25 	call	0x4af4	; 0x4af4 <SEVENSEG_displayNumber>
    1eb0:	8c ec       	ldi	r24, 0xCC	; 204
    1eb2:	9a e0       	ldi	r25, 0x0A	; 10
    1eb4:	01 97       	sbiw	r24, 0x01	; 1
    1eb6:	f1 f7       	brne	.-4      	; 0x1eb4 <displayPrayerTimesOn7Segment+0x300>
    1eb8:	00 c0       	rjmp	.+0      	; 0x1eba <displayPrayerTimesOn7Segment+0x306>
    1eba:	00 00       	nop
		_delay_ms(DELAY_TIME);
		SEVENSEG_displayNumber(isha_hour%10,21);
    1ebc:	00 0f       	add	r16, r16
    1ebe:	80 2f       	mov	r24, r16
    1ec0:	88 0f       	add	r24, r24
    1ec2:	88 0f       	add	r24, r24
    1ec4:	08 0f       	add	r16, r24
    1ec6:	65 e1       	ldi	r22, 0x15	; 21
    1ec8:	8e 89       	ldd	r24, Y+22	; 0x16
    1eca:	80 1b       	sub	r24, r16
    1ecc:	0e 94 7a 25 	call	0x4af4	; 0x4af4 <SEVENSEG_displayNumber>
    1ed0:	8c ec       	ldi	r24, 0xCC	; 204
    1ed2:	9a e0       	ldi	r25, 0x0A	; 10
    1ed4:	01 97       	sbiw	r24, 0x01	; 1
    1ed6:	f1 f7       	brne	.-4      	; 0x1ed4 <displayPrayerTimesOn7Segment+0x320>
    1ed8:	00 c0       	rjmp	.+0      	; 0x1eda <displayPrayerTimesOn7Segment+0x326>
    1eda:	00 00       	nop
		_delay_ms(DELAY_TIME);
		
		SEVENSEG_displayNumber(isha_min/10,22);
    1edc:	9f 89       	ldd	r25, Y+23	; 0x17
    1ede:	91 9f       	mul	r25, r17
    1ee0:	11 2d       	mov	r17, r1
    1ee2:	11 24       	eor	r1, r1
    1ee4:	16 95       	lsr	r17
    1ee6:	16 95       	lsr	r17
    1ee8:	16 95       	lsr	r17
    1eea:	66 e1       	ldi	r22, 0x16	; 22
    1eec:	81 2f       	mov	r24, r17
    1eee:	0e 94 7a 25 	call	0x4af4	; 0x4af4 <SEVENSEG_displayNumber>
    1ef2:	8c ec       	ldi	r24, 0xCC	; 204
    1ef4:	9a e0       	ldi	r25, 0x0A	; 10
    1ef6:	01 97       	sbiw	r24, 0x01	; 1
    1ef8:	f1 f7       	brne	.-4      	; 0x1ef6 <displayPrayerTimesOn7Segment+0x342>
    1efa:	00 c0       	rjmp	.+0      	; 0x1efc <displayPrayerTimesOn7Segment+0x348>
    1efc:	00 00       	nop
		_delay_ms(DELAY_TIME);
		SEVENSEG_displayNumber(isha_min%10,23);
    1efe:	11 0f       	add	r17, r17
    1f00:	81 2f       	mov	r24, r17
    1f02:	88 0f       	add	r24, r24
    1f04:	88 0f       	add	r24, r24
    1f06:	18 0f       	add	r17, r24
    1f08:	67 e1       	ldi	r22, 0x17	; 23
    1f0a:	8f 89       	ldd	r24, Y+23	; 0x17
    1f0c:	81 1b       	sub	r24, r17
    1f0e:	0e 94 7a 25 	call	0x4af4	; 0x4af4 <SEVENSEG_displayNumber>
    1f12:	8c ec       	ldi	r24, 0xCC	; 204
    1f14:	9a e0       	ldi	r25, 0x0A	; 10
    1f16:	01 97       	sbiw	r24, 0x01	; 1
    1f18:	f1 f7       	brne	.-4      	; 0x1f16 <displayPrayerTimesOn7Segment+0x362>
    1f1a:	00 c0       	rjmp	.+0      	; 0x1f1c <displayPrayerTimesOn7Segment+0x368>
    1f1c:	00 00       	nop
		_delay_ms(DELAY_TIME);
	}
}
    1f1e:	df 91       	pop	r29
    1f20:	cf 91       	pop	r28
    1f22:	1f 91       	pop	r17
    1f24:	0f 91       	pop	r16
    1f26:	ff 90       	pop	r15
    1f28:	ef 90       	pop	r14
    1f2a:	df 90       	pop	r13
    1f2c:	cf 90       	pop	r12
    1f2e:	bf 90       	pop	r11
    1f30:	af 90       	pop	r10
    1f32:	9f 90       	pop	r9
    1f34:	8f 90       	pop	r8
    1f36:	08 95       	ret

Disassembly of section .text.displayDateOn7Segment:

000033a0 <displayDateOn7Segment>:

/*
* Description :
-> Display date on 7-segment display
*/
void displayDateOn7Segment(uint8 day, uint8 month, uint16 year) {
    33a0:	ef 92       	push	r14
    33a2:	ff 92       	push	r15
    33a4:	0f 93       	push	r16
    33a6:	1f 93       	push	r17
    33a8:	cf 93       	push	r28
    33aa:	df 93       	push	r29
    33ac:	e8 2e       	mov	r14, r24
    33ae:	f6 2e       	mov	r15, r22
    33b0:	8a 01       	movw	r16, r20
	SEVENSEG_displayNumber(day/10,24);
    33b2:	cd ec       	ldi	r28, 0xCD	; 205
    33b4:	8c 9f       	mul	r24, r28
    33b6:	d1 2d       	mov	r29, r1
    33b8:	11 24       	eor	r1, r1
    33ba:	d6 95       	lsr	r29
    33bc:	d6 95       	lsr	r29
    33be:	d6 95       	lsr	r29
    33c0:	68 e1       	ldi	r22, 0x18	; 24
    33c2:	8d 2f       	mov	r24, r29
    33c4:	0e 94 7a 25 	call	0x4af4	; 0x4af4 <SEVENSEG_displayNumber>
    33c8:	8c ec       	ldi	r24, 0xCC	; 204
    33ca:	9a e0       	ldi	r25, 0x0A	; 10
    33cc:	01 97       	sbiw	r24, 0x01	; 1
    33ce:	f1 f7       	brne	.-4      	; 0x33cc <displayDateOn7Segment+0x2c>
    33d0:	00 c0       	rjmp	.+0      	; 0x33d2 <displayDateOn7Segment+0x32>
    33d2:	00 00       	nop
	_delay_ms(DELAY_TIME);
	SEVENSEG_displayNumber(day%10,25);
    33d4:	dd 0f       	add	r29, r29
    33d6:	8d 2f       	mov	r24, r29
    33d8:	88 0f       	add	r24, r24
    33da:	88 0f       	add	r24, r24
    33dc:	d8 0f       	add	r29, r24
    33de:	69 e1       	ldi	r22, 0x19	; 25
    33e0:	8e 2d       	mov	r24, r14
    33e2:	8d 1b       	sub	r24, r29
    33e4:	0e 94 7a 25 	call	0x4af4	; 0x4af4 <SEVENSEG_displayNumber>
    33e8:	8c ec       	ldi	r24, 0xCC	; 204
    33ea:	9a e0       	ldi	r25, 0x0A	; 10
    33ec:	01 97       	sbiw	r24, 0x01	; 1
    33ee:	f1 f7       	brne	.-4      	; 0x33ec <displayDateOn7Segment+0x4c>
    33f0:	00 c0       	rjmp	.+0      	; 0x33f2 <displayDateOn7Segment+0x52>
    33f2:	00 00       	nop
	_delay_ms(DELAY_TIME);

	SEVENSEG_displayNumber(month/10,26);
    33f4:	fc 9e       	mul	r15, r28
    33f6:	c1 2d       	mov	r28, r1
    33f8:	11 24       	eor	r1, r1
    33fa:	c6 95       	lsr	r28
    33fc:	c6 95       	lsr	r28
    33fe:	c6 95       	lsr	r28
    3400:	6a e1       	ldi	r22, 0x1A	; 26
    3402:	8c 2f       	mov	r24, r28
    3404:	0e 94 7a 25 	call	0x4af4	; 0x4af4 <SEVENSEG_displayNumber>
    3408:	8c ec       	ldi	r24, 0xCC	; 204
    340a:	9a e0       	ldi	r25, 0x0A	; 10
    340c:	01 97       	sbiw	r24, 0x01	; 1
    340e:	f1 f7       	brne	.-4      	; 0x340c <displayDateOn7Segment+0x6c>
    3410:	00 c0       	rjmp	.+0      	; 0x3412 <displayDateOn7Segment+0x72>
    3412:	00 00       	nop
	_delay_ms(DELAY_TIME);
	SEVENSEG_displayNumber(month%10,27);
    3414:	cc 0f       	add	r28, r28
    3416:	8c 2f       	mov	r24, r28
    3418:	88 0f       	add	r24, r24
    341a:	88 0f       	add	r24, r24
    341c:	c8 0f       	add	r28, r24
    341e:	6b e1       	ldi	r22, 0x1B	; 27
    3420:	8f 2d       	mov	r24, r15
    3422:	8c 1b       	sub	r24, r28
    3424:	0e 94 7a 25 	call	0x4af4	; 0x4af4 <SEVENSEG_displayNumber>
    3428:	8c ec       	ldi	r24, 0xCC	; 204
    342a:	9a e0       	ldi	r25, 0x0A	; 10
    342c:	01 97       	sbiw	r24, 0x01	; 1
    342e:	f1 f7       	brne	.-4      	; 0x342c <displayDateOn7Segment+0x8c>
    3430:	00 c0       	rjmp	.+0      	; 0x3432 <displayDateOn7Segment+0x92>
    3432:	00 00       	nop
	_delay_ms(DELAY_TIME);

	SEVENSEG_displayNumber(((year/1000) % 10),28);
    3434:	98 01       	movw	r18, r16
    3436:	36 95       	lsr	r19
    3438:	27 95       	ror	r18
    343a:	36 95       	lsr	r19
    343c:	27 95       	ror	r18
    343e:	36 95       	lsr	r19
    3440:	27 95       	ror	r18
    3442:	a5 ec       	ldi	r26, 0xC5	; 197
    3444:	b0 e2       	ldi	r27, 0x20	; 32
    3446:	0e 94 88 2d 	call	0x5b10	; 0x5b10 <__umulhisi3>
    344a:	ac 01       	movw	r20, r24
    344c:	52 95       	swap	r21
    344e:	42 95       	swap	r20
    3450:	4f 70       	andi	r20, 0x0F	; 15
    3452:	45 27       	eor	r20, r21
    3454:	5f 70       	andi	r21, 0x0F	; 15
    3456:	45 27       	eor	r20, r21
    3458:	9a 01       	movw	r18, r20
    345a:	ad ec       	ldi	r26, 0xCD	; 205
    345c:	bc ec       	ldi	r27, 0xCC	; 204
    345e:	0e 94 88 2d 	call	0x5b10	; 0x5b10 <__umulhisi3>
    3462:	96 95       	lsr	r25
    3464:	87 95       	ror	r24
    3466:	96 95       	lsr	r25
    3468:	87 95       	ror	r24
    346a:	96 95       	lsr	r25
    346c:	87 95       	ror	r24
    346e:	9c 01       	movw	r18, r24
    3470:	22 0f       	add	r18, r18
    3472:	33 1f       	adc	r19, r19
    3474:	88 0f       	add	r24, r24
    3476:	99 1f       	adc	r25, r25
    3478:	88 0f       	add	r24, r24
    347a:	99 1f       	adc	r25, r25
    347c:	88 0f       	add	r24, r24
    347e:	99 1f       	adc	r25, r25
    3480:	82 0f       	add	r24, r18
    3482:	93 1f       	adc	r25, r19
    3484:	6c e1       	ldi	r22, 0x1C	; 28
    3486:	24 2f       	mov	r18, r20
    3488:	28 1b       	sub	r18, r24
    348a:	82 2f       	mov	r24, r18
    348c:	0e 94 7a 25 	call	0x4af4	; 0x4af4 <SEVENSEG_displayNumber>
    3490:	8c ec       	ldi	r24, 0xCC	; 204
    3492:	9a e0       	ldi	r25, 0x0A	; 10
    3494:	01 97       	sbiw	r24, 0x01	; 1
    3496:	f1 f7       	brne	.-4      	; 0x3494 <displayDateOn7Segment+0xf4>
    3498:	00 c0       	rjmp	.+0      	; 0x349a <displayDateOn7Segment+0xfa>
    349a:	00 00       	nop
	_delay_ms(DELAY_TIME);
	SEVENSEG_displayNumber(((year/100) % 10),29);
    349c:	98 01       	movw	r18, r16
    349e:	36 95       	lsr	r19
    34a0:	27 95       	ror	r18
    34a2:	36 95       	lsr	r19
    34a4:	27 95       	ror	r18
    34a6:	ab e7       	ldi	r26, 0x7B	; 123
    34a8:	b4 e1       	ldi	r27, 0x14	; 20
    34aa:	0e 94 88 2d 	call	0x5b10	; 0x5b10 <__umulhisi3>
    34ae:	ac 01       	movw	r20, r24
    34b0:	56 95       	lsr	r21
    34b2:	47 95       	ror	r20
    34b4:	9a 01       	movw	r18, r20
    34b6:	ad ec       	ldi	r26, 0xCD	; 205
    34b8:	bc ec       	ldi	r27, 0xCC	; 204
    34ba:	0e 94 88 2d 	call	0x5b10	; 0x5b10 <__umulhisi3>
    34be:	96 95       	lsr	r25
    34c0:	87 95       	ror	r24
    34c2:	96 95       	lsr	r25
    34c4:	87 95       	ror	r24
    34c6:	96 95       	lsr	r25
    34c8:	87 95       	ror	r24
    34ca:	9c 01       	movw	r18, r24
    34cc:	22 0f       	add	r18, r18
    34ce:	33 1f       	adc	r19, r19
    34d0:	88 0f       	add	r24, r24
    34d2:	99 1f       	adc	r25, r25
    34d4:	88 0f       	add	r24, r24
    34d6:	99 1f       	adc	r25, r25
    34d8:	88 0f       	add	r24, r24
    34da:	99 1f       	adc	r25, r25
    34dc:	82 0f       	add	r24, r18
    34de:	93 1f       	adc	r25, r19
    34e0:	6d e1       	ldi	r22, 0x1D	; 29
    34e2:	24 2f       	mov	r18, r20
    34e4:	28 1b       	sub	r18, r24
    34e6:	82 2f       	mov	r24, r18
    34e8:	0e 94 7a 25 	call	0x4af4	; 0x4af4 <SEVENSEG_displayNumber>
    34ec:	8c ec       	ldi	r24, 0xCC	; 204
    34ee:	9a e0       	ldi	r25, 0x0A	; 10
    34f0:	01 97       	sbiw	r24, 0x01	; 1
    34f2:	f1 f7       	brne	.-4      	; 0x34f0 <displayDateOn7Segment+0x150>
    34f4:	00 c0       	rjmp	.+0      	; 0x34f6 <displayDateOn7Segment+0x156>
    34f6:	00 00       	nop
	_delay_ms(DELAY_TIME);
	SEVENSEG_displayNumber(((year/10) % 10),30);
    34f8:	98 01       	movw	r18, r16
    34fa:	ad ec       	ldi	r26, 0xCD	; 205
    34fc:	bc ec       	ldi	r27, 0xCC	; 204
    34fe:	0e 94 88 2d 	call	0x5b10	; 0x5b10 <__umulhisi3>
    3502:	ec 01       	movw	r28, r24
    3504:	d6 95       	lsr	r29
    3506:	c7 95       	ror	r28
    3508:	d6 95       	lsr	r29
    350a:	c7 95       	ror	r28
    350c:	d6 95       	lsr	r29
    350e:	c7 95       	ror	r28
    3510:	9e 01       	movw	r18, r28
    3512:	0e 94 88 2d 	call	0x5b10	; 0x5b10 <__umulhisi3>
    3516:	96 95       	lsr	r25
    3518:	87 95       	ror	r24
    351a:	96 95       	lsr	r25
    351c:	87 95       	ror	r24
    351e:	96 95       	lsr	r25
    3520:	87 95       	ror	r24
    3522:	9c 01       	movw	r18, r24
    3524:	22 0f       	add	r18, r18
    3526:	33 1f       	adc	r19, r19
    3528:	88 0f       	add	r24, r24
    352a:	99 1f       	adc	r25, r25
    352c:	88 0f       	add	r24, r24
    352e:	99 1f       	adc	r25, r25
    3530:	88 0f       	add	r24, r24
    3532:	99 1f       	adc	r25, r25
    3534:	82 0f       	add	r24, r18
    3536:	93 1f       	adc	r25, r19
    3538:	6e e1       	ldi	r22, 0x1E	; 30
    353a:	2c 2f       	mov	r18, r28
    353c:	28 1b       	sub	r18, r24
    353e:	82 2f       	mov	r24, r18
    3540:	0e 94 7a 25 	call	0x4af4	; 0x4af4 <SEVENSEG_displayNumber>
    3544:	8c ec       	ldi	r24, 0xCC	; 204
    3546:	9a e0       	ldi	r25, 0x0A	; 10
    3548:	01 97       	sbiw	r24, 0x01	; 1
    354a:	f1 f7       	brne	.-4      	; 0x3548 <displayDateOn7Segment+0x1a8>
    354c:	00 c0       	rjmp	.+0      	; 0x354e <displayDateOn7Segment+0x1ae>
    354e:	00 00       	nop
	_delay_ms(DELAY_TIME);
	SEVENSEG_displayNumber(year%10,31);
    3550:	ce 01       	movw	r24, r28
    3552:	88 0f       	add	r24, r24
    3554:	99 1f       	adc	r25, r25
    3556:	cc 0f       	add	r28, r28
    3558:	dd 1f       	adc	r29, r29
    355a:	cc 0f       	add	r28, r28
    355c:	dd 1f       	adc	r29, r29
    355e:	cc 0f       	add	r28, r28
    3560:	dd 1f       	adc	r29, r29
    3562:	c8 0f       	add	r28, r24
    3564:	d9 1f       	adc	r29, r25
    3566:	6f e1       	ldi	r22, 0x1F	; 31
    3568:	80 2f       	mov	r24, r16
    356a:	8c 1b       	sub	r24, r28
    356c:	0e 94 7a 25 	call	0x4af4	; 0x4af4 <SEVENSEG_displayNumber>
    3570:	8c ec       	ldi	r24, 0xCC	; 204
    3572:	9a e0       	ldi	r25, 0x0A	; 10
    3574:	01 97       	sbiw	r24, 0x01	; 1
    3576:	f1 f7       	brne	.-4      	; 0x3574 <displayDateOn7Segment+0x1d4>
    3578:	00 c0       	rjmp	.+0      	; 0x357a <displayDateOn7Segment+0x1da>
    357a:	00 00       	nop
	_delay_ms(DELAY_TIME);
}
    357c:	df 91       	pop	r29
    357e:	cf 91       	pop	r28
    3580:	1f 91       	pop	r17
    3582:	0f 91       	pop	r16
    3584:	ff 90       	pop	r15
    3586:	ef 90       	pop	r14
    3588:	08 95       	ret

Disassembly of section .text.displayTimeOn7Segment:

000050d8 <displayTimeOn7Segment>:

/*
* Description :
-> Display time on 7-segment display
*/
void displayTimeOn7Segment(uint8 hour, uint8 minute) {
    50d8:	0f 93       	push	r16
    50da:	1f 93       	push	r17
    50dc:	cf 93       	push	r28
    50de:	df 93       	push	r29
    50e0:	08 2f       	mov	r16, r24
    50e2:	16 2f       	mov	r17, r22
	SEVENSEG_displayNumber(hour/10,32);
    50e4:	cd ec       	ldi	r28, 0xCD	; 205
    50e6:	8c 9f       	mul	r24, r28
    50e8:	d1 2d       	mov	r29, r1
    50ea:	11 24       	eor	r1, r1
    50ec:	d6 95       	lsr	r29
    50ee:	d6 95       	lsr	r29
    50f0:	d6 95       	lsr	r29
    50f2:	60 e2       	ldi	r22, 0x20	; 32
    50f4:	8d 2f       	mov	r24, r29
    50f6:	0e 94 7a 25 	call	0x4af4	; 0x4af4 <SEVENSEG_displayNumber>
    50fa:	8c ec       	ldi	r24, 0xCC	; 204
    50fc:	9a e0       	ldi	r25, 0x0A	; 10
    50fe:	01 97       	sbiw	r24, 0x01	; 1
    5100:	f1 f7       	brne	.-4      	; 0x50fe <displayTimeOn7Segment+0x26>
    5102:	00 c0       	rjmp	.+0      	; 0x5104 <displayTimeOn7Segment+0x2c>
    5104:	00 00       	nop
	_delay_ms(DELAY_TIME);
	SEVENSEG_displayNumber(hour%10,33);
    5106:	dd 0f       	add	r29, r29
    5108:	8d 2f       	mov	r24, r29
    510a:	88 0f       	add	r24, r24
    510c:	88 0f       	add	r24, r24
    510e:	d8 0f       	add	r29, r24
    5110:	61 e2       	ldi	r22, 0x21	; 33
    5112:	80 2f       	mov	r24, r16
    5114:	8d 1b       	sub	r24, r29
    5116:	0e 94 7a 25 	call	0x4af4	; 0x4af4 <SEVENSEG_displayNumber>
    511a:	8c ec       	ldi	r24, 0xCC	; 204
    511c:	9a e0       	ldi	r25, 0x0A	; 10
    511e:	01 97       	sbiw	r24, 0x01	; 1
    5120:	f1 f7       	brne	.-4      	; 0x511e <displayTimeOn7Segment+0x46>
    5122:	00 c0       	rjmp	.+0      	; 0x5124 <displayTimeOn7Segment+0x4c>
    5124:	00 00       	nop
	_delay_ms(DELAY_TIME);

	SEVENSEG_displayNumber(minute/10,34);
    5126:	1c 9f       	mul	r17, r28
    5128:	c1 2d       	mov	r28, r1
    512a:	11 24       	eor	r1, r1
    512c:	c6 95       	lsr	r28
    512e:	c6 95       	lsr	r28
    5130:	c6 95       	lsr	r28
    5132:	62 e2       	ldi	r22, 0x22	; 34
    5134:	8c 2f       	mov	r24, r28
    5136:	0e 94 7a 25 	call	0x4af4	; 0x4af4 <SEVENSEG_displayNumber>
    513a:	8c ec       	ldi	r24, 0xCC	; 204
    513c:	9a e0       	ldi	r25, 0x0A	; 10
    513e:	01 97       	sbiw	r24, 0x01	; 1
    5140:	f1 f7       	brne	.-4      	; 0x513e <displayTimeOn7Segment+0x66>
    5142:	00 c0       	rjmp	.+0      	; 0x5144 <displayTimeOn7Segment+0x6c>
    5144:	00 00       	nop
	_delay_ms(DELAY_TIME);
	SEVENSEG_displayNumber(minute%10,35);
    5146:	cc 0f       	add	r28, r28
    5148:	8c 2f       	mov	r24, r28
    514a:	88 0f       	add	r24, r24
    514c:	88 0f       	add	r24, r24
    514e:	c8 0f       	add	r28, r24
    5150:	63 e2       	ldi	r22, 0x23	; 35
    5152:	81 2f       	mov	r24, r17
    5154:	8c 1b       	sub	r24, r28
    5156:	0e 94 7a 25 	call	0x4af4	; 0x4af4 <SEVENSEG_displayNumber>
    515a:	8c ec       	ldi	r24, 0xCC	; 204
    515c:	9a e0       	ldi	r25, 0x0A	; 10
    515e:	01 97       	sbiw	r24, 0x01	; 1
    5160:	f1 f7       	brne	.-4      	; 0x515e <displayTimeOn7Segment+0x86>
    5162:	00 c0       	rjmp	.+0      	; 0x5164 <displayTimeOn7Segment+0x8c>
    5164:	00 00       	nop
	_delay_ms(DELAY_TIME);
}
    5166:	df 91       	pop	r29
    5168:	cf 91       	pop	r28
    516a:	1f 91       	pop	r17
    516c:	0f 91       	pop	r16
    516e:	08 95       	ret

Disassembly of section .text.displayCountryCodeOn7Segment:

00005658 <displayCountryCodeOn7Segment>:

/*
* Description :
-> Display country code on 7-segment display
*/
void displayCountryCodeOn7Segment(uint8 cityCode) {
    5658:	cf 93       	push	r28
    565a:	df 93       	push	r29
    565c:	d8 2f       	mov	r29, r24
	SEVENSEG_displayNumber(cityCode/10,36);
    565e:	cd ec       	ldi	r28, 0xCD	; 205
    5660:	8c 9f       	mul	r24, r28
    5662:	c1 2d       	mov	r28, r1
    5664:	11 24       	eor	r1, r1
    5666:	c6 95       	lsr	r28
    5668:	c6 95       	lsr	r28
    566a:	c6 95       	lsr	r28
    566c:	64 e2       	ldi	r22, 0x24	; 36
    566e:	8c 2f       	mov	r24, r28
    5670:	0e 94 7a 25 	call	0x4af4	; 0x4af4 <SEVENSEG_displayNumber>
    5674:	8c ec       	ldi	r24, 0xCC	; 204
    5676:	9a e0       	ldi	r25, 0x0A	; 10
    5678:	01 97       	sbiw	r24, 0x01	; 1
    567a:	f1 f7       	brne	.-4      	; 0x5678 <displayCountryCodeOn7Segment+0x20>
    567c:	00 c0       	rjmp	.+0      	; 0x567e <displayCountryCodeOn7Segment+0x26>
    567e:	00 00       	nop
	_delay_ms(DELAY_TIME);
	SEVENSEG_displayNumber(cityCode%10,37);
    5680:	cc 0f       	add	r28, r28
    5682:	8c 2f       	mov	r24, r28
    5684:	88 0f       	add	r24, r24
    5686:	88 0f       	add	r24, r24
    5688:	c8 0f       	add	r28, r24
    568a:	65 e2       	ldi	r22, 0x25	; 37
    568c:	8d 2f       	mov	r24, r29
    568e:	8c 1b       	sub	r24, r28
    5690:	0e 94 7a 25 	call	0x4af4	; 0x4af4 <SEVENSEG_displayNumber>
    5694:	8c ec       	ldi	r24, 0xCC	; 204
    5696:	9a e0       	ldi	r25, 0x0A	; 10
    5698:	01 97       	sbiw	r24, 0x01	; 1
    569a:	f1 f7       	brne	.-4      	; 0x5698 <displayCountryCodeOn7Segment+0x40>
    569c:	00 c0       	rjmp	.+0      	; 0x569e <displayCountryCodeOn7Segment+0x46>
    569e:	00 00       	nop
	_delay_ms(DELAY_TIME);
}
    56a0:	df 91       	pop	r29
    56a2:	cf 91       	pop	r28
    56a4:	08 95       	ret

Disassembly of section .text.displayTemperatureOn7Segment:

000056a6 <displayTemperatureOn7Segment>:

/*
* Description :
-> Display temperature on 7-segment display
*/
void displayTemperatureOn7Segment(uint8 temperature) {
    56a6:	cf 93       	push	r28
    56a8:	df 93       	push	r29
    56aa:	d8 2f       	mov	r29, r24
	SEVENSEG_displayNumber(temperature/10,38);
    56ac:	cd ec       	ldi	r28, 0xCD	; 205
    56ae:	8c 9f       	mul	r24, r28
    56b0:	c1 2d       	mov	r28, r1
    56b2:	11 24       	eor	r1, r1
    56b4:	c6 95       	lsr	r28
    56b6:	c6 95       	lsr	r28
    56b8:	c6 95       	lsr	r28
    56ba:	66 e2       	ldi	r22, 0x26	; 38
    56bc:	8c 2f       	mov	r24, r28
    56be:	0e 94 7a 25 	call	0x4af4	; 0x4af4 <SEVENSEG_displayNumber>
    56c2:	8c ec       	ldi	r24, 0xCC	; 204
    56c4:	9a e0       	ldi	r25, 0x0A	; 10
    56c6:	01 97       	sbiw	r24, 0x01	; 1
    56c8:	f1 f7       	brne	.-4      	; 0x56c6 <displayTemperatureOn7Segment+0x20>
    56ca:	00 c0       	rjmp	.+0      	; 0x56cc <displayTemperatureOn7Segment+0x26>
    56cc:	00 00       	nop
	_delay_ms(DELAY_TIME);
	SEVENSEG_displayNumber(temperature%10,39);
    56ce:	cc 0f       	add	r28, r28
    56d0:	8c 2f       	mov	r24, r28
    56d2:	88 0f       	add	r24, r24
    56d4:	88 0f       	add	r24, r24
    56d6:	c8 0f       	add	r28, r24
    56d8:	67 e2       	ldi	r22, 0x27	; 39
    56da:	8d 2f       	mov	r24, r29
    56dc:	8c 1b       	sub	r24, r28
    56de:	0e 94 7a 25 	call	0x4af4	; 0x4af4 <SEVENSEG_displayNumber>
    56e2:	8c ec       	ldi	r24, 0xCC	; 204
    56e4:	9a e0       	ldi	r25, 0x0A	; 10
    56e6:	01 97       	sbiw	r24, 0x01	; 1
    56e8:	f1 f7       	brne	.-4      	; 0x56e6 <displayTemperatureOn7Segment+0x40>
    56ea:	00 c0       	rjmp	.+0      	; 0x56ec <displayTemperatureOn7Segment+0x46>
    56ec:	00 00       	nop
	_delay_ms(DELAY_TIME);
    56ee:	df 91       	pop	r29
    56f0:	cf 91       	pop	r28
    56f2:	08 95       	ret

Disassembly of section .text.BUZZER_init:

00005b60 <BUZZER_init>:
 * Description :
 -> Function to disable the Buzzer.
 */
void BUZZER_off(){

	GPIO_writePin(BUZZER_PORT_ID , BUZZER_PIN_ID , LOGIC_LOW);
    5b60:	41 e0       	ldi	r20, 0x01	; 1
    5b62:	61 e0       	ldi	r22, 0x01	; 1
    5b64:	80 e0       	ldi	r24, 0x00	; 0
    5b66:	0e 94 ed 25 	call	0x4bda	; 0x4bda <GPIO_setupPinDirection>
    5b6a:	40 e0       	ldi	r20, 0x00	; 0
    5b6c:	61 e0       	ldi	r22, 0x01	; 1
    5b6e:	80 e0       	ldi	r24, 0x00	; 0
    5b70:	0e 94 60 26 	call	0x4cc0	; 0x4cc0 <GPIO_writePin>
    5b74:	08 95       	ret

Disassembly of section .text.BUZZER_toggle:

00005c56 <BUZZER_toggle>:
/*
 * Description :
 -> Function to toggle the Buzzer.
 */
void BUZZER_toggle(){
	GPIO_togglePin(BUZZER_PORT_ID , BUZZER_PIN_ID);
    5c56:	61 e0       	ldi	r22, 0x01	; 1
    5c58:	80 e0       	ldi	r24, 0x00	; 0
    5c5a:	0e 94 2c 2a 	call	0x5458	; 0x5458 <GPIO_togglePin>
    5c5e:	08 95       	ret

Disassembly of section .text.LM35_getTemperature:

0000573c <LM35_getTemperature>:
	uint8 temp_value = 0;

	uint16 adc_value = 0;

	/* Read ADC channel where the temperature sensor is connected */
	adc_value = ADC_readChannel(SENSOR_CHANNEL_ID);
    573c:	80 e0       	ldi	r24, 0x00	; 0
    573e:	0e 94 78 2d 	call	0x5af0	; 0x5af0 <ADC_readChannel>

	/* Calculate the temperature from the ADC value*/
	temp_value = (uint8)(((float32)adc_value*SENSOR_MAX_TEMPERATURE*ADC_RefVoltValue)/(ADC_MAXIMUM_VALUE*SENSOR_MAX_VOLT_VALUE));
    5742:	bc 01       	movw	r22, r24
    5744:	80 e0       	ldi	r24, 0x00	; 0
    5746:	90 e0       	ldi	r25, 0x00	; 0
    5748:	0e 94 7a 29 	call	0x52f4	; 0x52f4 <__floatunsisf>
    574c:	20 e0       	ldi	r18, 0x00	; 0
    574e:	30 e0       	ldi	r19, 0x00	; 0
    5750:	46 e1       	ldi	r20, 0x16	; 22
    5752:	53 e4       	ldi	r21, 0x43	; 67
    5754:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    5758:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
    575c:	30 91 61 00 	lds	r19, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
    5760:	40 91 62 00 	lds	r20, 0x0062	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
    5764:	50 91 63 00 	lds	r21, 0x0063	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
    5768:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    576c:	20 e0       	ldi	r18, 0x00	; 0
    576e:	30 ed       	ldi	r19, 0xD0	; 208
    5770:	4f eb       	ldi	r20, 0xBF	; 191
    5772:	54 e4       	ldi	r21, 0x44	; 68
    5774:	0e 94 3a 2e 	call	0x5c74	; 0x5c74 <__divsf3>
    5778:	0e 94 fd 2a 	call	0x55fa	; 0x55fa <__fixunssfsi>
    577c:	86 2f       	mov	r24, r22

	return temp_value;
}
    577e:	08 95       	ret

Disassembly of section .text.RTC_init:

00005980 <RTC_init>:

/*
 * Description :
 -> Initialize the RTC.
 */
void RTC_init(){
    5980:	cf 93       	push	r28
    5982:	df 93       	push	r29
    5984:	00 d0       	rcall	.+0      	; 0x5986 <RTC_init+0x6>
    5986:	cd b7       	in	r28, 0x3d	; 61
    5988:	de b7       	in	r29, 0x3e	; 62
	I2C_ConfigType RTC_Config = {0x01, BAUDRATE_400KHZ};
    598a:	81 e0       	ldi	r24, 0x01	; 1
    598c:	89 83       	std	Y+1, r24	; 0x01
    598e:	82 e0       	ldi	r24, 0x02	; 2
    5990:	8a 83       	std	Y+2, r24	; 0x02
	I2C_init(&RTC_Config);
    5992:	be 01       	movw	r22, r28
    5994:	6f 5f       	subi	r22, 0xFF	; 255
    5996:	7f 4f       	sbci	r23, 0xFF	; 255
    5998:	80 e8       	ldi	r24, 0x80	; 128
    599a:	0e 94 aa 2c 	call	0x5954	; 0x5954 <I2C_init>
}
    599e:	0f 90       	pop	r0
    59a0:	0f 90       	pop	r0
    59a2:	df 91       	pop	r29
    59a4:	cf 91       	pop	r28
    59a6:	08 95       	ret

Disassembly of section .text.BCD_toDicmal:

00005b2e <BCD_toDicmal>:
 * Description :
 -> Convert a BCD (Binary-Coded Decimal) number to a decimal number.
 */
uint8 BCD_toDicmal(uint8 copy_u8number)
{
	uint8 Dicmal=(copy_u8number&0x0f);
    5b2e:	38 2f       	mov	r19, r24
    5b30:	3f 70       	andi	r19, 0x0F	; 15
	Dicmal+=(copy_u8number>>4)*10;
    5b32:	98 2f       	mov	r25, r24
    5b34:	92 95       	swap	r25
    5b36:	9f 70       	andi	r25, 0x0F	; 15
    5b38:	99 0f       	add	r25, r25
    5b3a:	29 2f       	mov	r18, r25
    5b3c:	22 0f       	add	r18, r18
    5b3e:	22 0f       	add	r18, r18
    5b40:	89 2f       	mov	r24, r25
    5b42:	82 0f       	add	r24, r18
	return Dicmal;

}
    5b44:	83 0f       	add	r24, r19
    5b46:	08 95       	ret

Disassembly of section .text.RTC_Read_Clock:

0000559c <RTC_Read_Clock>:
/*
 * Description :
 -> Read the current time from the RTC.
 */
void RTC_Read_Clock(uint8 read_clock_address, uint8 *second, uint8 *minute, uint8 *hour)
{
    559c:	df 92       	push	r13
    559e:	ef 92       	push	r14
    55a0:	ff 92       	push	r15
    55a2:	0f 93       	push	r16
    55a4:	1f 93       	push	r17
    55a6:	cf 93       	push	r28
    55a8:	df 93       	push	r29
    55aa:	d8 2e       	mov	r13, r24
    55ac:	7b 01       	movw	r14, r22
    55ae:	8a 01       	movw	r16, r20
    55b0:	e9 01       	movw	r28, r18
	I2C_start(Device_Write_address);/* Start I2C communication with RTC */
    55b2:	80 ed       	ldi	r24, 0xD0	; 208
    55b4:	0e 94 03 2c 	call	0x5806	; 0x5806 <I2C_start>
	I2C_writeByte(read_clock_address);	/* Write address to read */
    55b8:	8d 2d       	mov	r24, r13
    55ba:	0e 94 33 2d 	call	0x5a66	; 0x5a66 <I2C_writeByte>
	I2C_repeatedStart(Device_Read_address);/* Repeated start with device read address */
    55be:	81 ed       	ldi	r24, 0xD1	; 209
    55c0:	0e 94 20 2c 	call	0x5840	; 0x5840 <I2C_repeatedStart>

	*second = BCD_toDicmal(I2C_readByteWithACK());	/* Read second */
    55c4:	0e 94 e1 2d 	call	0x5bc2	; 0x5bc2 <I2C_readByteWithACK>
    55c8:	0e 94 97 2d 	call	0x5b2e	; 0x5b2e <BCD_toDicmal>
    55cc:	f7 01       	movw	r30, r14
    55ce:	80 83       	st	Z, r24
	*minute = BCD_toDicmal(I2C_readByteWithACK());	/* Read minute */
    55d0:	0e 94 e1 2d 	call	0x5bc2	; 0x5bc2 <I2C_readByteWithACK>
    55d4:	0e 94 97 2d 	call	0x5b2e	; 0x5b2e <BCD_toDicmal>
    55d8:	f8 01       	movw	r30, r16
    55da:	80 83       	st	Z, r24
	*hour = BCD_toDicmal(I2C_readByteWithNACK());		/* Read hour with Nack */
    55dc:	0e 94 e8 2d 	call	0x5bd0	; 0x5bd0 <I2C_readByteWithNACK>
    55e0:	0e 94 97 2d 	call	0x5b2e	; 0x5b2e <BCD_toDicmal>
    55e4:	88 83       	st	Y, r24
	I2C_stop();			/* Stop i2C communication */
    55e6:	0e 94 19 2e 	call	0x5c32	; 0x5c32 <I2C_stop>
}
    55ea:	df 91       	pop	r29
    55ec:	cf 91       	pop	r28
    55ee:	1f 91       	pop	r17
    55f0:	0f 91       	pop	r16
    55f2:	ff 90       	pop	r15
    55f4:	ef 90       	pop	r14
    55f6:	df 90       	pop	r13
    55f8:	08 95       	ret

Disassembly of section .text.RTC_Read_Calendar:

0000527a <RTC_Read_Calendar>:
/*
 * Description :
 -> Read the current date from the RTC.
 */
void RTC_Read_Calendar(uint8 read_calendar_address, uint8 *day, uint8 *date, uint8 *month, uint16 *year)
{
    527a:	bf 92       	push	r11
    527c:	cf 92       	push	r12
    527e:	df 92       	push	r13
    5280:	ef 92       	push	r14
    5282:	ff 92       	push	r15
    5284:	0f 93       	push	r16
    5286:	1f 93       	push	r17
    5288:	cf 93       	push	r28
    528a:	df 93       	push	r29
    528c:	b8 2e       	mov	r11, r24
    528e:	6b 01       	movw	r12, r22
    5290:	7a 01       	movw	r14, r20
    5292:	e9 01       	movw	r28, r18
	I2C_start(Device_Write_address);
    5294:	80 ed       	ldi	r24, 0xD0	; 208
    5296:	0e 94 03 2c 	call	0x5806	; 0x5806 <I2C_start>
	I2C_writeByte(read_calendar_address);
    529a:	8b 2d       	mov	r24, r11
    529c:	0e 94 33 2d 	call	0x5a66	; 0x5a66 <I2C_writeByte>
	I2C_repeatedStart(Device_Read_address);
    52a0:	81 ed       	ldi	r24, 0xD1	; 209
    52a2:	0e 94 20 2c 	call	0x5840	; 0x5840 <I2C_repeatedStart>

	*day = BCD_toDicmal(I2C_readByteWithACK());					/* Read day */
    52a6:	0e 94 e1 2d 	call	0x5bc2	; 0x5bc2 <I2C_readByteWithACK>
    52aa:	0e 94 97 2d 	call	0x5b2e	; 0x5b2e <BCD_toDicmal>
    52ae:	f6 01       	movw	r30, r12
    52b0:	80 83       	st	Z, r24
	*date = BCD_toDicmal(I2C_readByteWithACK());				/* Read date */
    52b2:	0e 94 e1 2d 	call	0x5bc2	; 0x5bc2 <I2C_readByteWithACK>
    52b6:	0e 94 97 2d 	call	0x5b2e	; 0x5b2e <BCD_toDicmal>
    52ba:	f7 01       	movw	r30, r14
    52bc:	80 83       	st	Z, r24
	*month = BCD_toDicmal(I2C_readByteWithACK());				/* Read month */
    52be:	0e 94 e1 2d 	call	0x5bc2	; 0x5bc2 <I2C_readByteWithACK>
    52c2:	0e 94 97 2d 	call	0x5b2e	; 0x5b2e <BCD_toDicmal>
    52c6:	88 83       	st	Y, r24
	*year = BCD_toDicmal(I2C_readByteWithNACK()) + 2000;		/* Read the year with Nack */
    52c8:	0e 94 e8 2d 	call	0x5bd0	; 0x5bd0 <I2C_readByteWithNACK>
    52cc:	0e 94 97 2d 	call	0x5b2e	; 0x5b2e <BCD_toDicmal>
    52d0:	90 e0       	ldi	r25, 0x00	; 0
    52d2:	80 53       	subi	r24, 0x30	; 48
    52d4:	98 4f       	sbci	r25, 0xF8	; 248
    52d6:	f8 01       	movw	r30, r16
    52d8:	91 83       	std	Z+1, r25	; 0x01
    52da:	80 83       	st	Z, r24
	I2C_stop();			/* Stop i2C communication */
    52dc:	0e 94 19 2e 	call	0x5c32	; 0x5c32 <I2C_stop>
}
    52e0:	df 91       	pop	r29
    52e2:	cf 91       	pop	r28
    52e4:	1f 91       	pop	r17
    52e6:	0f 91       	pop	r16
    52e8:	ff 90       	pop	r15
    52ea:	ef 90       	pop	r14
    52ec:	df 90       	pop	r13
    52ee:	cf 90       	pop	r12
    52f0:	bf 90       	pop	r11
    52f2:	08 95       	ret

Disassembly of section .text.Dicmal_toBCD:

000059f8 <Dicmal_toBCD>:
 * Description :
 -> Convert a decimal number to a BCD (Binary-Coded Decimal) number.
 */
uint8 Dicmal_toBCD(uint8 copy_u8number)
{
	return (copy_u8number / 10 * 16) + (copy_u8number % 10);
    59f8:	9d ec       	ldi	r25, 0xCD	; 205
    59fa:	89 9f       	mul	r24, r25
    59fc:	91 2d       	mov	r25, r1
    59fe:	11 24       	eor	r1, r1
    5a00:	96 95       	lsr	r25
    5a02:	96 95       	lsr	r25
    5a04:	96 95       	lsr	r25
    5a06:	39 2f       	mov	r19, r25
    5a08:	33 0f       	add	r19, r19
    5a0a:	23 2f       	mov	r18, r19
    5a0c:	22 0f       	add	r18, r18
    5a0e:	22 0f       	add	r18, r18
    5a10:	23 0f       	add	r18, r19
    5a12:	82 1b       	sub	r24, r18
}
    5a14:	20 e1       	ldi	r18, 0x10	; 16
    5a16:	92 9f       	mul	r25, r18
    5a18:	80 0d       	add	r24, r0
    5a1a:	11 24       	eor	r1, r1
    5a1c:	08 95       	ret

Disassembly of section .text.RTC_Clock_Write:

000057c4 <RTC_Clock_Write>:
/*
 * Description :
 -> Write time to the RTC.
 */
void RTC_Clock_Write(uint8 _hour, uint8 _minute, uint8 _second)
{
    57c4:	1f 93       	push	r17
    57c6:	cf 93       	push	r28
    57c8:	df 93       	push	r29
    57ca:	c8 2f       	mov	r28, r24
    57cc:	d6 2f       	mov	r29, r22
    57ce:	14 2f       	mov	r17, r20
	I2C_start(Device_Write_address);/* Start I2C communication with RTC */
    57d0:	80 ed       	ldi	r24, 0xD0	; 208
    57d2:	0e 94 03 2c 	call	0x5806	; 0x5806 <I2C_start>
	I2C_writeByte(0);			/* Write 0 address for second */
    57d6:	80 e0       	ldi	r24, 0x00	; 0
    57d8:	0e 94 33 2d 	call	0x5a66	; 0x5a66 <I2C_writeByte>
	I2C_writeByte(Dicmal_toBCD(_second));		/* Write second on 00 location */
    57dc:	81 2f       	mov	r24, r17
    57de:	0e 94 fc 2c 	call	0x59f8	; 0x59f8 <Dicmal_toBCD>
    57e2:	0e 94 33 2d 	call	0x5a66	; 0x5a66 <I2C_writeByte>
	I2C_writeByte(Dicmal_toBCD(_minute));		/* Write minute on 01(auto increment) location */
    57e6:	8d 2f       	mov	r24, r29
    57e8:	0e 94 fc 2c 	call	0x59f8	; 0x59f8 <Dicmal_toBCD>
    57ec:	0e 94 33 2d 	call	0x5a66	; 0x5a66 <I2C_writeByte>
	I2C_writeByte(Dicmal_toBCD(_hour));		/* Write hour on 02 location */
    57f0:	8c 2f       	mov	r24, r28
    57f2:	0e 94 fc 2c 	call	0x59f8	; 0x59f8 <Dicmal_toBCD>
    57f6:	0e 94 33 2d 	call	0x5a66	; 0x5a66 <I2C_writeByte>
	I2C_stop();			/* Stop I2C communication */
    57fa:	0e 94 19 2e 	call	0x5c32	; 0x5c32 <I2C_stop>
}
    57fe:	df 91       	pop	r29
    5800:	cf 91       	pop	r28
    5802:	1f 91       	pop	r17
    5804:	08 95       	ret

Disassembly of section .text.RTC_Calendar_Write:

000051fc <RTC_Calendar_Write>:
/*
 * Description :
 -> Write date to the RTC.
 */
void RTC_Calendar_Write(uint8 _day, uint8 _date, uint8 _month, uint16 _year)
{
    51fc:	ff 92       	push	r15
    51fe:	0f 93       	push	r16
    5200:	1f 93       	push	r17
    5202:	cf 93       	push	r28
    5204:	df 93       	push	r29
    5206:	f8 2e       	mov	r15, r24
    5208:	06 2f       	mov	r16, r22
    520a:	14 2f       	mov	r17, r20
    520c:	a9 01       	movw	r20, r18
	uint8 lastTwoDigitsOfYear = _year % 100;  // Extract last two digits of the year
    520e:	36 95       	lsr	r19
    5210:	27 95       	ror	r18
    5212:	36 95       	lsr	r19
    5214:	27 95       	ror	r18
    5216:	ab e7       	ldi	r26, 0x7B	; 123
    5218:	b4 e1       	ldi	r27, 0x14	; 20
    521a:	0e 94 88 2d 	call	0x5b10	; 0x5b10 <__umulhisi3>
    521e:	ec 01       	movw	r28, r24
    5220:	d6 95       	lsr	r29
    5222:	c7 95       	ror	r28
    5224:	24 e6       	ldi	r18, 0x64	; 100
    5226:	2c 9f       	mul	r18, r28
    5228:	c0 01       	movw	r24, r0
    522a:	2d 9f       	mul	r18, r29
    522c:	90 0d       	add	r25, r0
    522e:	11 24       	eor	r1, r1
    5230:	ea 01       	movw	r28, r20
    5232:	c8 1b       	sub	r28, r24
    5234:	d9 0b       	sbc	r29, r25
	
	I2C_start(Device_Write_address);/* Start I2C communication with RTC */
    5236:	80 ed       	ldi	r24, 0xD0	; 208
    5238:	0e 94 03 2c 	call	0x5806	; 0x5806 <I2C_start>
	I2C_writeByte(3);			/* Write 3 address for day */
    523c:	83 e0       	ldi	r24, 0x03	; 3
    523e:	0e 94 33 2d 	call	0x5a66	; 0x5a66 <I2C_writeByte>
	I2C_writeByte(Dicmal_toBCD(_day));		/* Write day on 03 location */
    5242:	8f 2d       	mov	r24, r15
    5244:	0e 94 fc 2c 	call	0x59f8	; 0x59f8 <Dicmal_toBCD>
    5248:	0e 94 33 2d 	call	0x5a66	; 0x5a66 <I2C_writeByte>
	I2C_writeByte(Dicmal_toBCD(_date));		/* Write date on 04 location */
    524c:	80 2f       	mov	r24, r16
    524e:	0e 94 fc 2c 	call	0x59f8	; 0x59f8 <Dicmal_toBCD>
    5252:	0e 94 33 2d 	call	0x5a66	; 0x5a66 <I2C_writeByte>
	I2C_writeByte(Dicmal_toBCD(_month));		/* Write month on 05 location */
    5256:	81 2f       	mov	r24, r17
    5258:	0e 94 fc 2c 	call	0x59f8	; 0x59f8 <Dicmal_toBCD>
    525c:	0e 94 33 2d 	call	0x5a66	; 0x5a66 <I2C_writeByte>
	I2C_writeByte(Dicmal_toBCD(lastTwoDigitsOfYear));		/* Write year on 06 location */
    5260:	8c 2f       	mov	r24, r28
    5262:	0e 94 fc 2c 	call	0x59f8	; 0x59f8 <Dicmal_toBCD>
    5266:	0e 94 33 2d 	call	0x5a66	; 0x5a66 <I2C_writeByte>
	I2C_stop();			/* Stop I2C communication */
    526a:	0e 94 19 2e 	call	0x5c32	; 0x5c32 <I2C_stop>
}
    526e:	df 91       	pop	r29
    5270:	cf 91       	pop	r28
    5272:	1f 91       	pop	r17
    5274:	0f 91       	pop	r16
    5276:	ff 90       	pop	r15
    5278:	08 95       	ret

Disassembly of section .text.settingsButtons_init:

00005920 <settingsButtons_init>:
 * Description :
 -> Initialize the settings buttons.
 */
void settingsButtons_init(void){
	/* Set up the direction of the settings buttons pins as input */
	GPIO_setupPinDirection(SET_BUTTON_PORT_ID,SET_BUTTON_PIN_ID,PIN_INPUT);
    5920:	40 e0       	ldi	r20, 0x00	; 0
    5922:	62 e0       	ldi	r22, 0x02	; 2
    5924:	80 e0       	ldi	r24, 0x00	; 0
    5926:	0e 94 ed 25 	call	0x4bda	; 0x4bda <GPIO_setupPinDirection>
	GPIO_setupPinDirection(LEFT_BUTTON_PORT_ID,LEFT_BUTTON_PIN_ID,PIN_INPUT);
    592a:	40 e0       	ldi	r20, 0x00	; 0
    592c:	63 e0       	ldi	r22, 0x03	; 3
    592e:	80 e0       	ldi	r24, 0x00	; 0
    5930:	0e 94 ed 25 	call	0x4bda	; 0x4bda <GPIO_setupPinDirection>
	GPIO_setupPinDirection(RIGHT_BUTTON_PORT_ID,RIGHT_BUTTON_PIN_ID,PIN_INPUT);
    5934:	40 e0       	ldi	r20, 0x00	; 0
    5936:	64 e0       	ldi	r22, 0x04	; 4
    5938:	80 e0       	ldi	r24, 0x00	; 0
    593a:	0e 94 ed 25 	call	0x4bda	; 0x4bda <GPIO_setupPinDirection>
	GPIO_setupPinDirection(UP_BUTTON_PORT_ID,UP_BUTTON_PIN_ID,PIN_INPUT);
    593e:	40 e0       	ldi	r20, 0x00	; 0
    5940:	65 e0       	ldi	r22, 0x05	; 5
    5942:	80 e0       	ldi	r24, 0x00	; 0
    5944:	0e 94 ed 25 	call	0x4bda	; 0x4bda <GPIO_setupPinDirection>
	GPIO_setupPinDirection(DOWN_BUTTON_PORT_ID,DOWN_BUTTON_PIN_ID,PIN_INPUT);
    5948:	40 e0       	ldi	r20, 0x00	; 0
    594a:	66 e0       	ldi	r22, 0x06	; 6
    594c:	80 e0       	ldi	r24, 0x00	; 0
    594e:	0e 94 ed 25 	call	0x4bda	; 0x4bda <GPIO_setupPinDirection>
    5952:	08 95       	ret

Disassembly of section .text.settingsButtons_getState:

00005536 <settingsButtons_getState>:

/*
 * Description :
 -> Get the current state of the settings buttons.
 */
uint8 settingsButtons_getState(void){
    5536:	cf 93       	push	r28

	uint8 buttonsState = 0;
	
	/* Read the state of each button and set the corresponding bit in buttonsState */
	buttonsState |= ((GPIO_readPin(SET_BUTTON_PORT_ID, SET_BUTTON_PIN_ID) == LOGIC_LOW) << 0);
    5538:	62 e0       	ldi	r22, 0x02	; 2
    553a:	80 e0       	ldi	r24, 0x00	; 0
    553c:	0e 94 b8 28 	call	0x5170	; 0x5170 <GPIO_readPin>
    5540:	91 e0       	ldi	r25, 0x01	; 1
    5542:	81 11       	cpse	r24, r1
    5544:	90 e0       	ldi	r25, 0x00	; 0
    5546:	c9 2f       	mov	r28, r25
	buttonsState |= ((GPIO_readPin(LEFT_BUTTON_PORT_ID, LEFT_BUTTON_PIN_ID) == LOGIC_LOW) << 1);
    5548:	63 e0       	ldi	r22, 0x03	; 3
    554a:	80 e0       	ldi	r24, 0x00	; 0
    554c:	0e 94 b8 28 	call	0x5170	; 0x5170 <GPIO_readPin>
    5550:	81 11       	cpse	r24, r1
    5552:	02 c0       	rjmp	.+4      	; 0x5558 <settingsButtons_getState+0x22>
    5554:	92 e0       	ldi	r25, 0x02	; 2
    5556:	01 c0       	rjmp	.+2      	; 0x555a <settingsButtons_getState+0x24>
    5558:	90 e0       	ldi	r25, 0x00	; 0
    555a:	c9 2b       	or	r28, r25
	buttonsState |= ((GPIO_readPin(RIGHT_BUTTON_PORT_ID, RIGHT_BUTTON_PIN_ID) == LOGIC_LOW) << 2);
    555c:	64 e0       	ldi	r22, 0x04	; 4
    555e:	80 e0       	ldi	r24, 0x00	; 0
    5560:	0e 94 b8 28 	call	0x5170	; 0x5170 <GPIO_readPin>
    5564:	81 11       	cpse	r24, r1
    5566:	02 c0       	rjmp	.+4      	; 0x556c <settingsButtons_getState+0x36>
    5568:	94 e0       	ldi	r25, 0x04	; 4
    556a:	01 c0       	rjmp	.+2      	; 0x556e <settingsButtons_getState+0x38>
    556c:	90 e0       	ldi	r25, 0x00	; 0
    556e:	c9 2b       	or	r28, r25
	buttonsState |= ((GPIO_readPin(UP_BUTTON_PORT_ID, UP_BUTTON_PIN_ID) == LOGIC_LOW) << 3);
    5570:	65 e0       	ldi	r22, 0x05	; 5
    5572:	80 e0       	ldi	r24, 0x00	; 0
    5574:	0e 94 b8 28 	call	0x5170	; 0x5170 <GPIO_readPin>
    5578:	81 11       	cpse	r24, r1
    557a:	02 c0       	rjmp	.+4      	; 0x5580 <settingsButtons_getState+0x4a>
    557c:	88 e0       	ldi	r24, 0x08	; 8
    557e:	01 c0       	rjmp	.+2      	; 0x5582 <settingsButtons_getState+0x4c>
    5580:	80 e0       	ldi	r24, 0x00	; 0
    5582:	c8 2b       	or	r28, r24
	buttonsState |= ((GPIO_readPin(DOWN_BUTTON_PORT_ID, DOWN_BUTTON_PIN_ID) == LOGIC_LOW) << 4);
    5584:	66 e0       	ldi	r22, 0x06	; 6
    5586:	80 e0       	ldi	r24, 0x00	; 0
    5588:	0e 94 b8 28 	call	0x5170	; 0x5170 <GPIO_readPin>
    558c:	81 11       	cpse	r24, r1
    558e:	02 c0       	rjmp	.+4      	; 0x5594 <settingsButtons_getState+0x5e>
    5590:	80 e1       	ldi	r24, 0x10	; 16
    5592:	01 c0       	rjmp	.+2      	; 0x5596 <settingsButtons_getState+0x60>
    5594:	80 e0       	ldi	r24, 0x00	; 0
	
	return buttonsState;
}
    5596:	8c 2b       	or	r24, r28
    5598:	cf 91       	pop	r28
    559a:	08 95       	ret

Disassembly of section .text.incrementDigitValue:

00003772 <incrementDigitValue>:

/*
 * Description :
 -> Increment the value of the selected digit.
 */
void incrementDigitValue(uint8 selectedDigit, uint16 *year, uint8 *month, uint8 *day, uint8 *hour, uint8 *minute, uint8 *countryCode) {
    3772:	cf 92       	push	r12
    3774:	df 92       	push	r13
    3776:	ef 92       	push	r14
    3778:	ff 92       	push	r15
    377a:	0f 93       	push	r16
    377c:	1f 93       	push	r17
    377e:	cf 93       	push	r28
    3780:	df 93       	push	r29
    3782:	eb 01       	movw	r28, r22
	switch (selectedDigit) {
    3784:	90 e0       	ldi	r25, 0x00	; 0
    3786:	89 30       	cpi	r24, 0x09	; 9
    3788:	91 05       	cpc	r25, r1
    378a:	08 f0       	brcs	.+2      	; 0x378e <incrementDigitValue+0x1c>
    378c:	d7 c0       	rjmp	.+430    	; 0x393c <incrementDigitValue+0x1ca>
    378e:	fc 01       	movw	r30, r24
    3790:	e6 5d       	subi	r30, 0xD6	; 214
    3792:	ff 4f       	sbci	r31, 0xFF	; 255
    3794:	0c 94 25 2e 	jmp	0x5c4a	; 0x5c4a <__tablejump2__>
		case 0: if ((*year % 10) == 9) *year -= 9; else *year += 1; break;
    3798:	48 81       	ld	r20, Y
    379a:	59 81       	ldd	r21, Y+1	; 0x01
    379c:	9a 01       	movw	r18, r20
    379e:	ad ec       	ldi	r26, 0xCD	; 205
    37a0:	bc ec       	ldi	r27, 0xCC	; 204
    37a2:	0e 94 88 2d 	call	0x5b10	; 0x5b10 <__umulhisi3>
    37a6:	96 95       	lsr	r25
    37a8:	87 95       	ror	r24
    37aa:	96 95       	lsr	r25
    37ac:	87 95       	ror	r24
    37ae:	96 95       	lsr	r25
    37b0:	87 95       	ror	r24
    37b2:	9c 01       	movw	r18, r24
    37b4:	22 0f       	add	r18, r18
    37b6:	33 1f       	adc	r19, r19
    37b8:	88 0f       	add	r24, r24
    37ba:	99 1f       	adc	r25, r25
    37bc:	88 0f       	add	r24, r24
    37be:	99 1f       	adc	r25, r25
    37c0:	88 0f       	add	r24, r24
    37c2:	99 1f       	adc	r25, r25
    37c4:	82 0f       	add	r24, r18
    37c6:	93 1f       	adc	r25, r19
    37c8:	9a 01       	movw	r18, r20
    37ca:	28 1b       	sub	r18, r24
    37cc:	39 0b       	sbc	r19, r25
    37ce:	29 30       	cpi	r18, 0x09	; 9
    37d0:	31 05       	cpc	r19, r1
    37d2:	29 f4       	brne	.+10     	; 0x37de <incrementDigitValue+0x6c>
    37d4:	49 50       	subi	r20, 0x09	; 9
    37d6:	51 09       	sbc	r21, r1
    37d8:	59 83       	std	Y+1, r21	; 0x01
    37da:	48 83       	st	Y, r20
    37dc:	af c0       	rjmp	.+350    	; 0x393c <incrementDigitValue+0x1ca>
    37de:	4f 5f       	subi	r20, 0xFF	; 255
    37e0:	5f 4f       	sbci	r21, 0xFF	; 255
    37e2:	59 83       	std	Y+1, r21	; 0x01
    37e4:	48 83       	st	Y, r20
    37e6:	aa c0       	rjmp	.+340    	; 0x393c <incrementDigitValue+0x1ca>
		case 1: if (((*year / 10) % 10) == 9) *year -= 90; else *year += 10; break;
    37e8:	48 81       	ld	r20, Y
    37ea:	59 81       	ldd	r21, Y+1	; 0x01
    37ec:	9a 01       	movw	r18, r20
    37ee:	ad ec       	ldi	r26, 0xCD	; 205
    37f0:	bc ec       	ldi	r27, 0xCC	; 204
    37f2:	0e 94 88 2d 	call	0x5b10	; 0x5b10 <__umulhisi3>
    37f6:	fc 01       	movw	r30, r24
    37f8:	f6 95       	lsr	r31
    37fa:	e7 95       	ror	r30
    37fc:	f6 95       	lsr	r31
    37fe:	e7 95       	ror	r30
    3800:	f6 95       	lsr	r31
    3802:	e7 95       	ror	r30
    3804:	9f 01       	movw	r18, r30
    3806:	0e 94 88 2d 	call	0x5b10	; 0x5b10 <__umulhisi3>
    380a:	96 95       	lsr	r25
    380c:	87 95       	ror	r24
    380e:	96 95       	lsr	r25
    3810:	87 95       	ror	r24
    3812:	96 95       	lsr	r25
    3814:	87 95       	ror	r24
    3816:	9c 01       	movw	r18, r24
    3818:	22 0f       	add	r18, r18
    381a:	33 1f       	adc	r19, r19
    381c:	88 0f       	add	r24, r24
    381e:	99 1f       	adc	r25, r25
    3820:	88 0f       	add	r24, r24
    3822:	99 1f       	adc	r25, r25
    3824:	88 0f       	add	r24, r24
    3826:	99 1f       	adc	r25, r25
    3828:	82 0f       	add	r24, r18
    382a:	93 1f       	adc	r25, r19
    382c:	9f 01       	movw	r18, r30
    382e:	28 1b       	sub	r18, r24
    3830:	39 0b       	sbc	r19, r25
    3832:	29 30       	cpi	r18, 0x09	; 9
    3834:	31 05       	cpc	r19, r1
    3836:	29 f4       	brne	.+10     	; 0x3842 <incrementDigitValue+0xd0>
    3838:	4a 55       	subi	r20, 0x5A	; 90
    383a:	51 09       	sbc	r21, r1
    383c:	59 83       	std	Y+1, r21	; 0x01
    383e:	48 83       	st	Y, r20
    3840:	7d c0       	rjmp	.+250    	; 0x393c <incrementDigitValue+0x1ca>
    3842:	46 5f       	subi	r20, 0xF6	; 246
    3844:	5f 4f       	sbci	r21, 0xFF	; 255
    3846:	59 83       	std	Y+1, r21	; 0x01
    3848:	48 83       	st	Y, r20
    384a:	78 c0       	rjmp	.+240    	; 0x393c <incrementDigitValue+0x1ca>
		case 2: if (((*year / 100) % 10) == 9) *year -= 900; else *year += 100; break;
    384c:	48 81       	ld	r20, Y
    384e:	59 81       	ldd	r21, Y+1	; 0x01
    3850:	9a 01       	movw	r18, r20
    3852:	36 95       	lsr	r19
    3854:	27 95       	ror	r18
    3856:	36 95       	lsr	r19
    3858:	27 95       	ror	r18
    385a:	ab e7       	ldi	r26, 0x7B	; 123
    385c:	b4 e1       	ldi	r27, 0x14	; 20
    385e:	0e 94 88 2d 	call	0x5b10	; 0x5b10 <__umulhisi3>
    3862:	fc 01       	movw	r30, r24
    3864:	f6 95       	lsr	r31
    3866:	e7 95       	ror	r30
    3868:	9f 01       	movw	r18, r30
    386a:	ad ec       	ldi	r26, 0xCD	; 205
    386c:	bc ec       	ldi	r27, 0xCC	; 204
    386e:	0e 94 88 2d 	call	0x5b10	; 0x5b10 <__umulhisi3>
    3872:	96 95       	lsr	r25
    3874:	87 95       	ror	r24
    3876:	96 95       	lsr	r25
    3878:	87 95       	ror	r24
    387a:	96 95       	lsr	r25
    387c:	87 95       	ror	r24
    387e:	9c 01       	movw	r18, r24
    3880:	22 0f       	add	r18, r18
    3882:	33 1f       	adc	r19, r19
    3884:	88 0f       	add	r24, r24
    3886:	99 1f       	adc	r25, r25
    3888:	88 0f       	add	r24, r24
    388a:	99 1f       	adc	r25, r25
    388c:	88 0f       	add	r24, r24
    388e:	99 1f       	adc	r25, r25
    3890:	82 0f       	add	r24, r18
    3892:	93 1f       	adc	r25, r19
    3894:	9f 01       	movw	r18, r30
    3896:	28 1b       	sub	r18, r24
    3898:	39 0b       	sbc	r19, r25
    389a:	29 30       	cpi	r18, 0x09	; 9
    389c:	31 05       	cpc	r19, r1
    389e:	29 f4       	brne	.+10     	; 0x38aa <incrementDigitValue+0x138>
    38a0:	44 58       	subi	r20, 0x84	; 132
    38a2:	53 40       	sbci	r21, 0x03	; 3
    38a4:	59 83       	std	Y+1, r21	; 0x01
    38a6:	48 83       	st	Y, r20
    38a8:	49 c0       	rjmp	.+146    	; 0x393c <incrementDigitValue+0x1ca>
    38aa:	4c 59       	subi	r20, 0x9C	; 156
    38ac:	5f 4f       	sbci	r21, 0xFF	; 255
    38ae:	59 83       	std	Y+1, r21	; 0x01
    38b0:	48 83       	st	Y, r20
    38b2:	44 c0       	rjmp	.+136    	; 0x393c <incrementDigitValue+0x1ca>
		case 3: if ((*year / 1000) == 9) *year -= 9000; else *year += 1000; break;
    38b4:	88 81       	ld	r24, Y
    38b6:	99 81       	ldd	r25, Y+1	; 0x01
    38b8:	9c 01       	movw	r18, r24
    38ba:	28 52       	subi	r18, 0x28	; 40
    38bc:	33 42       	sbci	r19, 0x23	; 35
    38be:	28 3e       	cpi	r18, 0xE8	; 232
    38c0:	43 e0       	ldi	r20, 0x03	; 3
    38c2:	34 07       	cpc	r19, r20
    38c4:	18 f4       	brcc	.+6      	; 0x38cc <incrementDigitValue+0x15a>
    38c6:	39 83       	std	Y+1, r19	; 0x01
    38c8:	28 83       	st	Y, r18
    38ca:	38 c0       	rjmp	.+112    	; 0x393c <incrementDigitValue+0x1ca>
    38cc:	88 51       	subi	r24, 0x18	; 24
    38ce:	9c 4f       	sbci	r25, 0xFC	; 252
    38d0:	99 83       	std	Y+1, r25	; 0x01
    38d2:	88 83       	st	Y, r24
    38d4:	33 c0       	rjmp	.+102    	; 0x393c <incrementDigitValue+0x1ca>
		case 4: if (*month == 12) *month = 1; else *month += 1; break;
    38d6:	fa 01       	movw	r30, r20
    38d8:	80 81       	ld	r24, Z
    38da:	8c 30       	cpi	r24, 0x0C	; 12
    38dc:	19 f4       	brne	.+6      	; 0x38e4 <incrementDigitValue+0x172>
    38de:	81 e0       	ldi	r24, 0x01	; 1
    38e0:	80 83       	st	Z, r24
    38e2:	2c c0       	rjmp	.+88     	; 0x393c <incrementDigitValue+0x1ca>
    38e4:	8f 5f       	subi	r24, 0xFF	; 255
    38e6:	fa 01       	movw	r30, r20
    38e8:	80 83       	st	Z, r24
    38ea:	28 c0       	rjmp	.+80     	; 0x393c <incrementDigitValue+0x1ca>
		case 5: if (*day == 31) *day = 1; else *day += 1; break;
    38ec:	f9 01       	movw	r30, r18
    38ee:	80 81       	ld	r24, Z
    38f0:	8f 31       	cpi	r24, 0x1F	; 31
    38f2:	19 f4       	brne	.+6      	; 0x38fa <incrementDigitValue+0x188>
    38f4:	81 e0       	ldi	r24, 0x01	; 1
    38f6:	80 83       	st	Z, r24
    38f8:	21 c0       	rjmp	.+66     	; 0x393c <incrementDigitValue+0x1ca>
    38fa:	8f 5f       	subi	r24, 0xFF	; 255
    38fc:	f9 01       	movw	r30, r18
    38fe:	80 83       	st	Z, r24
    3900:	1d c0       	rjmp	.+58     	; 0x393c <incrementDigitValue+0x1ca>
		case 6: if (*minute == 23) *minute = 0; else *minute += 1; break;
    3902:	f7 01       	movw	r30, r14
    3904:	80 81       	ld	r24, Z
    3906:	87 31       	cpi	r24, 0x17	; 23
    3908:	11 f4       	brne	.+4      	; 0x390e <incrementDigitValue+0x19c>
    390a:	10 82       	st	Z, r1
    390c:	17 c0       	rjmp	.+46     	; 0x393c <incrementDigitValue+0x1ca>
    390e:	8f 5f       	subi	r24, 0xFF	; 255
    3910:	f7 01       	movw	r30, r14
    3912:	80 83       	st	Z, r24
    3914:	13 c0       	rjmp	.+38     	; 0x393c <incrementDigitValue+0x1ca>
		case 7: if (*hour == 59) *hour = 0; else *hour += 1; break;
    3916:	f8 01       	movw	r30, r16
    3918:	80 81       	ld	r24, Z
    391a:	8b 33       	cpi	r24, 0x3B	; 59
    391c:	11 f4       	brne	.+4      	; 0x3922 <incrementDigitValue+0x1b0>
    391e:	10 82       	st	Z, r1
    3920:	0d c0       	rjmp	.+26     	; 0x393c <incrementDigitValue+0x1ca>
    3922:	8f 5f       	subi	r24, 0xFF	; 255
    3924:	f8 01       	movw	r30, r16
    3926:	80 83       	st	Z, r24
    3928:	09 c0       	rjmp	.+18     	; 0x393c <incrementDigitValue+0x1ca>
		case 8: if (*countryCode == 11) *countryCode = 0; else *countryCode += 1; break;
    392a:	f6 01       	movw	r30, r12
    392c:	80 81       	ld	r24, Z
    392e:	8b 30       	cpi	r24, 0x0B	; 11
    3930:	11 f4       	brne	.+4      	; 0x3936 <incrementDigitValue+0x1c4>
    3932:	10 82       	st	Z, r1
    3934:	03 c0       	rjmp	.+6      	; 0x393c <incrementDigitValue+0x1ca>
    3936:	8f 5f       	subi	r24, 0xFF	; 255
    3938:	f6 01       	movw	r30, r12
    393a:	80 83       	st	Z, r24
	}
}
    393c:	df 91       	pop	r29
    393e:	cf 91       	pop	r28
    3940:	1f 91       	pop	r17
    3942:	0f 91       	pop	r16
    3944:	ff 90       	pop	r15
    3946:	ef 90       	pop	r14
    3948:	df 90       	pop	r13
    394a:	cf 90       	pop	r12
    394c:	08 95       	ret

Disassembly of section .text.decrementDigitValue:

0000394e <decrementDigitValue>:

/*
 * Description :
 -> Decrement the value of the selected digit.
 */
void decrementDigitValue(uint8 selectedDigit, uint16 *year, uint8 *month, uint8 *day, uint8 *hour, uint8 *minute, uint8 *countryCode) {
    394e:	cf 92       	push	r12
    3950:	df 92       	push	r13
    3952:	ef 92       	push	r14
    3954:	ff 92       	push	r15
    3956:	0f 93       	push	r16
    3958:	1f 93       	push	r17
    395a:	cf 93       	push	r28
    395c:	df 93       	push	r29
    395e:	eb 01       	movw	r28, r22
	switch (selectedDigit) {
    3960:	90 e0       	ldi	r25, 0x00	; 0
    3962:	89 30       	cpi	r24, 0x09	; 9
    3964:	91 05       	cpc	r25, r1
    3966:	08 f0       	brcs	.+2      	; 0x396a <decrementDigitValue+0x1c>
    3968:	d0 c0       	rjmp	.+416    	; 0x3b0a <decrementDigitValue+0x1bc>
    396a:	fc 01       	movw	r30, r24
    396c:	ed 5c       	subi	r30, 0xCD	; 205
    396e:	ff 4f       	sbci	r31, 0xFF	; 255
    3970:	0c 94 25 2e 	jmp	0x5c4a	; 0x5c4a <__tablejump2__>
		case 0: if ((*year % 10) == 0) *year += 9; else *year -= 1; break;
    3974:	48 81       	ld	r20, Y
    3976:	59 81       	ldd	r21, Y+1	; 0x01
    3978:	9a 01       	movw	r18, r20
    397a:	ad ec       	ldi	r26, 0xCD	; 205
    397c:	bc ec       	ldi	r27, 0xCC	; 204
    397e:	0e 94 88 2d 	call	0x5b10	; 0x5b10 <__umulhisi3>
    3982:	96 95       	lsr	r25
    3984:	87 95       	ror	r24
    3986:	96 95       	lsr	r25
    3988:	87 95       	ror	r24
    398a:	96 95       	lsr	r25
    398c:	87 95       	ror	r24
    398e:	9c 01       	movw	r18, r24
    3990:	22 0f       	add	r18, r18
    3992:	33 1f       	adc	r19, r19
    3994:	88 0f       	add	r24, r24
    3996:	99 1f       	adc	r25, r25
    3998:	88 0f       	add	r24, r24
    399a:	99 1f       	adc	r25, r25
    399c:	88 0f       	add	r24, r24
    399e:	99 1f       	adc	r25, r25
    39a0:	82 0f       	add	r24, r18
    39a2:	93 1f       	adc	r25, r19
    39a4:	48 17       	cp	r20, r24
    39a6:	59 07       	cpc	r21, r25
    39a8:	29 f4       	brne	.+10     	; 0x39b4 <decrementDigitValue+0x66>
    39aa:	47 5f       	subi	r20, 0xF7	; 247
    39ac:	5f 4f       	sbci	r21, 0xFF	; 255
    39ae:	59 83       	std	Y+1, r21	; 0x01
    39b0:	48 83       	st	Y, r20
    39b2:	ab c0       	rjmp	.+342    	; 0x3b0a <decrementDigitValue+0x1bc>
    39b4:	41 50       	subi	r20, 0x01	; 1
    39b6:	51 09       	sbc	r21, r1
    39b8:	59 83       	std	Y+1, r21	; 0x01
    39ba:	48 83       	st	Y, r20
    39bc:	a6 c0       	rjmp	.+332    	; 0x3b0a <decrementDigitValue+0x1bc>
		case 1: if (((*year / 10) % 10) == 0) *year += 90; else *year -= 10; break;
    39be:	48 81       	ld	r20, Y
    39c0:	59 81       	ldd	r21, Y+1	; 0x01
    39c2:	9a 01       	movw	r18, r20
    39c4:	ad ec       	ldi	r26, 0xCD	; 205
    39c6:	bc ec       	ldi	r27, 0xCC	; 204
    39c8:	0e 94 88 2d 	call	0x5b10	; 0x5b10 <__umulhisi3>
    39cc:	fc 01       	movw	r30, r24
    39ce:	f6 95       	lsr	r31
    39d0:	e7 95       	ror	r30
    39d2:	f6 95       	lsr	r31
    39d4:	e7 95       	ror	r30
    39d6:	f6 95       	lsr	r31
    39d8:	e7 95       	ror	r30
    39da:	9f 01       	movw	r18, r30
    39dc:	0e 94 88 2d 	call	0x5b10	; 0x5b10 <__umulhisi3>
    39e0:	96 95       	lsr	r25
    39e2:	87 95       	ror	r24
    39e4:	96 95       	lsr	r25
    39e6:	87 95       	ror	r24
    39e8:	96 95       	lsr	r25
    39ea:	87 95       	ror	r24
    39ec:	9c 01       	movw	r18, r24
    39ee:	22 0f       	add	r18, r18
    39f0:	33 1f       	adc	r19, r19
    39f2:	88 0f       	add	r24, r24
    39f4:	99 1f       	adc	r25, r25
    39f6:	88 0f       	add	r24, r24
    39f8:	99 1f       	adc	r25, r25
    39fa:	88 0f       	add	r24, r24
    39fc:	99 1f       	adc	r25, r25
    39fe:	82 0f       	add	r24, r18
    3a00:	93 1f       	adc	r25, r19
    3a02:	e8 17       	cp	r30, r24
    3a04:	f9 07       	cpc	r31, r25
    3a06:	29 f4       	brne	.+10     	; 0x3a12 <decrementDigitValue+0xc4>
    3a08:	46 5a       	subi	r20, 0xA6	; 166
    3a0a:	5f 4f       	sbci	r21, 0xFF	; 255
    3a0c:	59 83       	std	Y+1, r21	; 0x01
    3a0e:	48 83       	st	Y, r20
    3a10:	7c c0       	rjmp	.+248    	; 0x3b0a <decrementDigitValue+0x1bc>
    3a12:	4a 50       	subi	r20, 0x0A	; 10
    3a14:	51 09       	sbc	r21, r1
    3a16:	59 83       	std	Y+1, r21	; 0x01
    3a18:	48 83       	st	Y, r20
    3a1a:	77 c0       	rjmp	.+238    	; 0x3b0a <decrementDigitValue+0x1bc>
		case 2: if (((*year / 100) % 10) == 0) *year += 900; else *year -= 100; break;
    3a1c:	48 81       	ld	r20, Y
    3a1e:	59 81       	ldd	r21, Y+1	; 0x01
    3a20:	9a 01       	movw	r18, r20
    3a22:	36 95       	lsr	r19
    3a24:	27 95       	ror	r18
    3a26:	36 95       	lsr	r19
    3a28:	27 95       	ror	r18
    3a2a:	ab e7       	ldi	r26, 0x7B	; 123
    3a2c:	b4 e1       	ldi	r27, 0x14	; 20
    3a2e:	0e 94 88 2d 	call	0x5b10	; 0x5b10 <__umulhisi3>
    3a32:	fc 01       	movw	r30, r24
    3a34:	f6 95       	lsr	r31
    3a36:	e7 95       	ror	r30
    3a38:	9f 01       	movw	r18, r30
    3a3a:	ad ec       	ldi	r26, 0xCD	; 205
    3a3c:	bc ec       	ldi	r27, 0xCC	; 204
    3a3e:	0e 94 88 2d 	call	0x5b10	; 0x5b10 <__umulhisi3>
    3a42:	96 95       	lsr	r25
    3a44:	87 95       	ror	r24
    3a46:	96 95       	lsr	r25
    3a48:	87 95       	ror	r24
    3a4a:	96 95       	lsr	r25
    3a4c:	87 95       	ror	r24
    3a4e:	9c 01       	movw	r18, r24
    3a50:	22 0f       	add	r18, r18
    3a52:	33 1f       	adc	r19, r19
    3a54:	88 0f       	add	r24, r24
    3a56:	99 1f       	adc	r25, r25
    3a58:	88 0f       	add	r24, r24
    3a5a:	99 1f       	adc	r25, r25
    3a5c:	88 0f       	add	r24, r24
    3a5e:	99 1f       	adc	r25, r25
    3a60:	82 0f       	add	r24, r18
    3a62:	93 1f       	adc	r25, r19
    3a64:	e8 17       	cp	r30, r24
    3a66:	f9 07       	cpc	r31, r25
    3a68:	29 f4       	brne	.+10     	; 0x3a74 <decrementDigitValue+0x126>
    3a6a:	4c 57       	subi	r20, 0x7C	; 124
    3a6c:	5c 4f       	sbci	r21, 0xFC	; 252
    3a6e:	59 83       	std	Y+1, r21	; 0x01
    3a70:	48 83       	st	Y, r20
    3a72:	4b c0       	rjmp	.+150    	; 0x3b0a <decrementDigitValue+0x1bc>
    3a74:	44 56       	subi	r20, 0x64	; 100
    3a76:	51 09       	sbc	r21, r1
    3a78:	59 83       	std	Y+1, r21	; 0x01
    3a7a:	48 83       	st	Y, r20
    3a7c:	46 c0       	rjmp	.+140    	; 0x3b0a <decrementDigitValue+0x1bc>
		case 3: if ((*year / 1000) == 0) *year += 9000; else *year -= 1000; break;
    3a7e:	88 81       	ld	r24, Y
    3a80:	99 81       	ldd	r25, Y+1	; 0x01
    3a82:	88 3e       	cpi	r24, 0xE8	; 232
    3a84:	23 e0       	ldi	r18, 0x03	; 3
    3a86:	92 07       	cpc	r25, r18
    3a88:	28 f4       	brcc	.+10     	; 0x3a94 <decrementDigitValue+0x146>
    3a8a:	88 5d       	subi	r24, 0xD8	; 216
    3a8c:	9c 4d       	sbci	r25, 0xDC	; 220
    3a8e:	99 83       	std	Y+1, r25	; 0x01
    3a90:	88 83       	st	Y, r24
    3a92:	3b c0       	rjmp	.+118    	; 0x3b0a <decrementDigitValue+0x1bc>
    3a94:	88 5e       	subi	r24, 0xE8	; 232
    3a96:	93 40       	sbci	r25, 0x03	; 3
    3a98:	99 83       	std	Y+1, r25	; 0x01
    3a9a:	88 83       	st	Y, r24
    3a9c:	36 c0       	rjmp	.+108    	; 0x3b0a <decrementDigitValue+0x1bc>
		case 4: if (*month == 1) *month = 12; else *month -= 1; break;
    3a9e:	fa 01       	movw	r30, r20
    3aa0:	80 81       	ld	r24, Z
    3aa2:	81 30       	cpi	r24, 0x01	; 1
    3aa4:	19 f4       	brne	.+6      	; 0x3aac <decrementDigitValue+0x15e>
    3aa6:	8c e0       	ldi	r24, 0x0C	; 12
    3aa8:	80 83       	st	Z, r24
    3aaa:	2f c0       	rjmp	.+94     	; 0x3b0a <decrementDigitValue+0x1bc>
    3aac:	81 50       	subi	r24, 0x01	; 1
    3aae:	fa 01       	movw	r30, r20
    3ab0:	80 83       	st	Z, r24
    3ab2:	2b c0       	rjmp	.+86     	; 0x3b0a <decrementDigitValue+0x1bc>
		case 5: if (*day == 1) *day = 31; else *day -= 1; break;
    3ab4:	f9 01       	movw	r30, r18
    3ab6:	80 81       	ld	r24, Z
    3ab8:	81 30       	cpi	r24, 0x01	; 1
    3aba:	19 f4       	brne	.+6      	; 0x3ac2 <decrementDigitValue+0x174>
    3abc:	8f e1       	ldi	r24, 0x1F	; 31
    3abe:	80 83       	st	Z, r24
    3ac0:	24 c0       	rjmp	.+72     	; 0x3b0a <decrementDigitValue+0x1bc>
    3ac2:	81 50       	subi	r24, 0x01	; 1
    3ac4:	f9 01       	movw	r30, r18
    3ac6:	80 83       	st	Z, r24
    3ac8:	20 c0       	rjmp	.+64     	; 0x3b0a <decrementDigitValue+0x1bc>
		case 6: if (*minute == 0) *minute = 23; else *minute -= 1; break;
    3aca:	f7 01       	movw	r30, r14
    3acc:	80 81       	ld	r24, Z
    3ace:	81 11       	cpse	r24, r1
    3ad0:	03 c0       	rjmp	.+6      	; 0x3ad8 <decrementDigitValue+0x18a>
    3ad2:	87 e1       	ldi	r24, 0x17	; 23
    3ad4:	80 83       	st	Z, r24
    3ad6:	19 c0       	rjmp	.+50     	; 0x3b0a <decrementDigitValue+0x1bc>
    3ad8:	81 50       	subi	r24, 0x01	; 1
    3ada:	f7 01       	movw	r30, r14
    3adc:	80 83       	st	Z, r24
    3ade:	15 c0       	rjmp	.+42     	; 0x3b0a <decrementDigitValue+0x1bc>
		case 7: if (*hour == 0) *hour = 59; else *hour -= 1; break;
    3ae0:	f8 01       	movw	r30, r16
    3ae2:	80 81       	ld	r24, Z
    3ae4:	81 11       	cpse	r24, r1
    3ae6:	03 c0       	rjmp	.+6      	; 0x3aee <decrementDigitValue+0x1a0>
    3ae8:	8b e3       	ldi	r24, 0x3B	; 59
    3aea:	80 83       	st	Z, r24
    3aec:	0e c0       	rjmp	.+28     	; 0x3b0a <decrementDigitValue+0x1bc>
    3aee:	81 50       	subi	r24, 0x01	; 1
    3af0:	f8 01       	movw	r30, r16
    3af2:	80 83       	st	Z, r24
    3af4:	0a c0       	rjmp	.+20     	; 0x3b0a <decrementDigitValue+0x1bc>
		case 8: if (*countryCode == 0) *countryCode = 11; else *countryCode -= 1; break;
    3af6:	f6 01       	movw	r30, r12
    3af8:	80 81       	ld	r24, Z
    3afa:	81 11       	cpse	r24, r1
    3afc:	03 c0       	rjmp	.+6      	; 0x3b04 <decrementDigitValue+0x1b6>
    3afe:	8b e0       	ldi	r24, 0x0B	; 11
    3b00:	80 83       	st	Z, r24
    3b02:	03 c0       	rjmp	.+6      	; 0x3b0a <decrementDigitValue+0x1bc>
    3b04:	81 50       	subi	r24, 0x01	; 1
    3b06:	f6 01       	movw	r30, r12
    3b08:	80 83       	st	Z, r24
	}
}
    3b0a:	df 91       	pop	r29
    3b0c:	cf 91       	pop	r28
    3b0e:	1f 91       	pop	r17
    3b10:	0f 91       	pop	r16
    3b12:	ff 90       	pop	r15
    3b14:	ef 90       	pop	r14
    3b16:	df 90       	pop	r13
    3b18:	cf 90       	pop	r12
    3b1a:	08 95       	ret

Disassembly of section .text.weekDayLed_init:

00005ad0 <weekDayLed_init>:
/*
 * Description :
 -> Initialize the weekday LEDs.
 */
void weekDayLed_init(void){
	GPIO_setupPinDirection(LEDS_PORT_ID, LEDS_LA_PIN_ID, PIN_OUTPUT);
    5ad0:	41 e0       	ldi	r20, 0x01	; 1
    5ad2:	62 e0       	ldi	r22, 0x02	; 2
    5ad4:	82 e0       	ldi	r24, 0x02	; 2
    5ad6:	0e 94 ed 25 	call	0x4bda	; 0x4bda <GPIO_setupPinDirection>
	GPIO_setupPinDirection(LEDS_PORT_ID, LEDS_LB_PIN_ID, PIN_OUTPUT);
    5ada:	41 e0       	ldi	r20, 0x01	; 1
    5adc:	63 e0       	ldi	r22, 0x03	; 3
    5ade:	82 e0       	ldi	r24, 0x02	; 2
    5ae0:	0e 94 ed 25 	call	0x4bda	; 0x4bda <GPIO_setupPinDirection>
	GPIO_setupPinDirection(LEDS_PORT_ID, LEDS_LC_PIN_ID, PIN_OUTPUT);
    5ae4:	41 e0       	ldi	r20, 0x01	; 1
    5ae6:	64 e0       	ldi	r22, 0x04	; 4
    5ae8:	82 e0       	ldi	r24, 0x02	; 2
    5aea:	0e 94 ed 25 	call	0x4bda	; 0x4bda <GPIO_setupPinDirection>
    5aee:	08 95       	ret

Disassembly of section .text.weekDayLed_lightup:

00004732 <weekDayLed_lightup>:
/*
 * Description :
 -> Light up the LED corresponding to the specified day index.
 */
void weekDayLed_lightup(uint8 dayIndex){
	switch (dayIndex)
    4732:	90 e0       	ldi	r25, 0x00	; 0
    4734:	87 30       	cpi	r24, 0x07	; 7
    4736:	91 05       	cpc	r25, r1
    4738:	08 f0       	brcs	.+2      	; 0x473c <weekDayLed_lightup+0xa>
    473a:	74 c0       	rjmp	.+232    	; 0x4824 <weekDayLed_lightup+0xf2>
    473c:	fc 01       	movw	r30, r24
    473e:	e4 5c       	subi	r30, 0xC4	; 196
    4740:	ff 4f       	sbci	r31, 0xFF	; 255
    4742:	0c 94 25 2e 	jmp	0x5c4a	; 0x5c4a <__tablejump2__>
	{
		case 0:
			GPIO_writePin(LEDS_PORT_ID, LEDS_LA_PIN_ID, LOGIC_LOW);
    4746:	40 e0       	ldi	r20, 0x00	; 0
    4748:	62 e0       	ldi	r22, 0x02	; 2
    474a:	82 e0       	ldi	r24, 0x02	; 2
    474c:	0e 94 60 26 	call	0x4cc0	; 0x4cc0 <GPIO_writePin>
			GPIO_writePin(LEDS_PORT_ID, LEDS_LB_PIN_ID, LOGIC_LOW);
    4750:	40 e0       	ldi	r20, 0x00	; 0
    4752:	63 e0       	ldi	r22, 0x03	; 3
    4754:	82 e0       	ldi	r24, 0x02	; 2
    4756:	0e 94 60 26 	call	0x4cc0	; 0x4cc0 <GPIO_writePin>
			GPIO_writePin(LEDS_PORT_ID, LEDS_LC_PIN_ID, LOGIC_LOW);
    475a:	40 e0       	ldi	r20, 0x00	; 0
    475c:	64 e0       	ldi	r22, 0x04	; 4
    475e:	82 e0       	ldi	r24, 0x02	; 2
    4760:	0e 94 60 26 	call	0x4cc0	; 0x4cc0 <GPIO_writePin>
			break;
    4764:	08 95       	ret
		case 1:
			GPIO_writePin(LEDS_PORT_ID, LEDS_LA_PIN_ID, LOGIC_HIGH);
    4766:	41 e0       	ldi	r20, 0x01	; 1
    4768:	62 e0       	ldi	r22, 0x02	; 2
    476a:	82 e0       	ldi	r24, 0x02	; 2
    476c:	0e 94 60 26 	call	0x4cc0	; 0x4cc0 <GPIO_writePin>
			GPIO_writePin(LEDS_PORT_ID, LEDS_LB_PIN_ID, LOGIC_LOW);
    4770:	40 e0       	ldi	r20, 0x00	; 0
    4772:	63 e0       	ldi	r22, 0x03	; 3
    4774:	82 e0       	ldi	r24, 0x02	; 2
    4776:	0e 94 60 26 	call	0x4cc0	; 0x4cc0 <GPIO_writePin>
			GPIO_writePin(LEDS_PORT_ID, LEDS_LC_PIN_ID, LOGIC_LOW);
    477a:	40 e0       	ldi	r20, 0x00	; 0
    477c:	64 e0       	ldi	r22, 0x04	; 4
    477e:	82 e0       	ldi	r24, 0x02	; 2
    4780:	0e 94 60 26 	call	0x4cc0	; 0x4cc0 <GPIO_writePin>
			break;
    4784:	08 95       	ret
		case 2:
			GPIO_writePin(LEDS_PORT_ID, LEDS_LA_PIN_ID, LOGIC_LOW);
    4786:	40 e0       	ldi	r20, 0x00	; 0
    4788:	62 e0       	ldi	r22, 0x02	; 2
    478a:	82 e0       	ldi	r24, 0x02	; 2
    478c:	0e 94 60 26 	call	0x4cc0	; 0x4cc0 <GPIO_writePin>
			GPIO_writePin(LEDS_PORT_ID, LEDS_LB_PIN_ID, LOGIC_HIGH);
    4790:	41 e0       	ldi	r20, 0x01	; 1
    4792:	63 e0       	ldi	r22, 0x03	; 3
    4794:	82 e0       	ldi	r24, 0x02	; 2
    4796:	0e 94 60 26 	call	0x4cc0	; 0x4cc0 <GPIO_writePin>
			GPIO_writePin(LEDS_PORT_ID, LEDS_LC_PIN_ID, LOGIC_LOW);
    479a:	40 e0       	ldi	r20, 0x00	; 0
    479c:	64 e0       	ldi	r22, 0x04	; 4
    479e:	82 e0       	ldi	r24, 0x02	; 2
    47a0:	0e 94 60 26 	call	0x4cc0	; 0x4cc0 <GPIO_writePin>
			break;
    47a4:	08 95       	ret
		case 3:
			GPIO_writePin(LEDS_PORT_ID, LEDS_LA_PIN_ID, LOGIC_HIGH);
    47a6:	41 e0       	ldi	r20, 0x01	; 1
    47a8:	62 e0       	ldi	r22, 0x02	; 2
    47aa:	82 e0       	ldi	r24, 0x02	; 2
    47ac:	0e 94 60 26 	call	0x4cc0	; 0x4cc0 <GPIO_writePin>
			GPIO_writePin(LEDS_PORT_ID, LEDS_LB_PIN_ID, LOGIC_HIGH);
    47b0:	41 e0       	ldi	r20, 0x01	; 1
    47b2:	63 e0       	ldi	r22, 0x03	; 3
    47b4:	82 e0       	ldi	r24, 0x02	; 2
    47b6:	0e 94 60 26 	call	0x4cc0	; 0x4cc0 <GPIO_writePin>
			GPIO_writePin(LEDS_PORT_ID, LEDS_LC_PIN_ID, LOGIC_LOW);
    47ba:	40 e0       	ldi	r20, 0x00	; 0
    47bc:	64 e0       	ldi	r22, 0x04	; 4
    47be:	82 e0       	ldi	r24, 0x02	; 2
    47c0:	0e 94 60 26 	call	0x4cc0	; 0x4cc0 <GPIO_writePin>
			break;
    47c4:	08 95       	ret
		case 4:
			GPIO_writePin(LEDS_PORT_ID, LEDS_LA_PIN_ID, LOGIC_LOW);
    47c6:	40 e0       	ldi	r20, 0x00	; 0
    47c8:	62 e0       	ldi	r22, 0x02	; 2
    47ca:	82 e0       	ldi	r24, 0x02	; 2
    47cc:	0e 94 60 26 	call	0x4cc0	; 0x4cc0 <GPIO_writePin>
			GPIO_writePin(LEDS_PORT_ID, LEDS_LB_PIN_ID, LOGIC_LOW);
    47d0:	40 e0       	ldi	r20, 0x00	; 0
    47d2:	63 e0       	ldi	r22, 0x03	; 3
    47d4:	82 e0       	ldi	r24, 0x02	; 2
    47d6:	0e 94 60 26 	call	0x4cc0	; 0x4cc0 <GPIO_writePin>
			GPIO_writePin(LEDS_PORT_ID, LEDS_LC_PIN_ID, LOGIC_HIGH);
    47da:	41 e0       	ldi	r20, 0x01	; 1
    47dc:	64 e0       	ldi	r22, 0x04	; 4
    47de:	82 e0       	ldi	r24, 0x02	; 2
    47e0:	0e 94 60 26 	call	0x4cc0	; 0x4cc0 <GPIO_writePin>
			break;
    47e4:	08 95       	ret
		case 5:
			GPIO_writePin(LEDS_PORT_ID, LEDS_LA_PIN_ID, LOGIC_HIGH);
    47e6:	41 e0       	ldi	r20, 0x01	; 1
    47e8:	62 e0       	ldi	r22, 0x02	; 2
    47ea:	82 e0       	ldi	r24, 0x02	; 2
    47ec:	0e 94 60 26 	call	0x4cc0	; 0x4cc0 <GPIO_writePin>
			GPIO_writePin(LEDS_PORT_ID, LEDS_LB_PIN_ID, LOGIC_LOW);
    47f0:	40 e0       	ldi	r20, 0x00	; 0
    47f2:	63 e0       	ldi	r22, 0x03	; 3
    47f4:	82 e0       	ldi	r24, 0x02	; 2
    47f6:	0e 94 60 26 	call	0x4cc0	; 0x4cc0 <GPIO_writePin>
			GPIO_writePin(LEDS_PORT_ID, LEDS_LC_PIN_ID, LOGIC_HIGH);
    47fa:	41 e0       	ldi	r20, 0x01	; 1
    47fc:	64 e0       	ldi	r22, 0x04	; 4
    47fe:	82 e0       	ldi	r24, 0x02	; 2
    4800:	0e 94 60 26 	call	0x4cc0	; 0x4cc0 <GPIO_writePin>
			break;
    4804:	08 95       	ret
		case 6:
			GPIO_writePin(LEDS_PORT_ID, LEDS_LA_PIN_ID, LOGIC_LOW);
    4806:	40 e0       	ldi	r20, 0x00	; 0
    4808:	62 e0       	ldi	r22, 0x02	; 2
    480a:	82 e0       	ldi	r24, 0x02	; 2
    480c:	0e 94 60 26 	call	0x4cc0	; 0x4cc0 <GPIO_writePin>
			GPIO_writePin(LEDS_PORT_ID, LEDS_LB_PIN_ID, LOGIC_HIGH);
    4810:	41 e0       	ldi	r20, 0x01	; 1
    4812:	63 e0       	ldi	r22, 0x03	; 3
    4814:	82 e0       	ldi	r24, 0x02	; 2
    4816:	0e 94 60 26 	call	0x4cc0	; 0x4cc0 <GPIO_writePin>
			GPIO_writePin(LEDS_PORT_ID, LEDS_LC_PIN_ID, LOGIC_HIGH);
    481a:	41 e0       	ldi	r20, 0x01	; 1
    481c:	64 e0       	ldi	r22, 0x04	; 4
    481e:	82 e0       	ldi	r24, 0x02	; 2
    4820:	0e 94 60 26 	call	0x4cc0	; 0x4cc0 <GPIO_writePin>
    4824:	08 95       	ret

Disassembly of section .text.calcJulianData:

00004918 <calcJulianData>:
uint8 prayer_time[7];
uint16 year_set;
uint8 month_set,day_set;

double calcJulianData(uint16 year, uint8 month, uint8 day)
{
    4918:	8f 92       	push	r8
    491a:	9f 92       	push	r9
    491c:	af 92       	push	r10
    491e:	bf 92       	push	r11
    4920:	cf 92       	push	r12
    4922:	df 92       	push	r13
    4924:	ef 92       	push	r14
    4926:	ff 92       	push	r15
    4928:	cf 93       	push	r28
    492a:	df 93       	push	r29
    492c:	fc 01       	movw	r30, r24
    492e:	d6 2f       	mov	r29, r22
    4930:	c4 2f       	mov	r28, r20
	//this function is to get the julian data of the data either you have entered or saved on the RTC
	uint32_t a,b;
	double JD;

	a=(uint32_t)year/100;
    4932:	9c 01       	movw	r18, r24
    4934:	36 95       	lsr	r19
    4936:	27 95       	ror	r18
    4938:	36 95       	lsr	r19
    493a:	27 95       	ror	r18
    493c:	ab e7       	ldi	r26, 0x7B	; 123
    493e:	b4 e1       	ldi	r27, 0x14	; 20
    4940:	0e 94 88 2d 	call	0x5b10	; 0x5b10 <__umulhisi3>
    4944:	96 95       	lsr	r25
    4946:	87 95       	ror	r24
    4948:	a0 e0       	ldi	r26, 0x00	; 0
    494a:	b0 e0       	ldi	r27, 0x00	; 0
	b=2-a+(uint32_t)(a/4);
    494c:	6c 01       	movw	r12, r24
    494e:	7d 01       	movw	r14, r26
    4950:	f6 94       	lsr	r15
    4952:	e7 94       	ror	r14
    4954:	d7 94       	ror	r13
    4956:	c7 94       	ror	r12
    4958:	f6 94       	lsr	r15
    495a:	e7 94       	ror	r14
    495c:	d7 94       	ror	r13
    495e:	c7 94       	ror	r12
    4960:	a7 01       	movw	r20, r14
    4962:	96 01       	movw	r18, r12
    4964:	28 1b       	sub	r18, r24
    4966:	39 0b       	sbc	r19, r25
    4968:	4a 0b       	sbc	r20, r26
    496a:	5b 0b       	sbc	r21, r27
    496c:	69 01       	movw	r12, r18
    496e:	7a 01       	movw	r14, r20
    4970:	32 e0       	ldi	r19, 0x02	; 2
    4972:	c3 0e       	add	r12, r19
    4974:	d1 1c       	adc	r13, r1
    4976:	e1 1c       	adc	r14, r1
    4978:	f1 1c       	adc	r15, r1
	JD=(uint32_t)(365.25*(year+4716))+(uint32_t)(30.6001*(month+1))+day+b-1524.5;
    497a:	bf 01       	movw	r22, r30
    497c:	64 59       	subi	r22, 0x94	; 148
    497e:	7d 4e       	sbci	r23, 0xED	; 237
    4980:	80 e0       	ldi	r24, 0x00	; 0
    4982:	90 e0       	ldi	r25, 0x00	; 0
    4984:	0e 94 7a 29 	call	0x52f4	; 0x52f4 <__floatunsisf>
    4988:	20 e0       	ldi	r18, 0x00	; 0
    498a:	30 ea       	ldi	r19, 0xA0	; 160
    498c:	46 eb       	ldi	r20, 0xB6	; 182
    498e:	53 e4       	ldi	r21, 0x43	; 67
    4990:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    4994:	0e 94 fd 2a 	call	0x55fa	; 0x55fa <__fixunssfsi>
    4998:	4b 01       	movw	r8, r22
    499a:	5c 01       	movw	r10, r24
    499c:	6d 2f       	mov	r22, r29
    499e:	70 e0       	ldi	r23, 0x00	; 0
    49a0:	6f 5f       	subi	r22, 0xFF	; 255
    49a2:	7f 4f       	sbci	r23, 0xFF	; 255
    49a4:	07 2e       	mov	r0, r23
    49a6:	00 0c       	add	r0, r0
    49a8:	88 0b       	sbc	r24, r24
    49aa:	99 0b       	sbc	r25, r25
    49ac:	0e 94 7c 29 	call	0x52f8	; 0x52f8 <__floatsisf>
    49b0:	21 e0       	ldi	r18, 0x01	; 1
    49b2:	3d ec       	ldi	r19, 0xCD	; 205
    49b4:	44 ef       	ldi	r20, 0xF4	; 244
    49b6:	51 e4       	ldi	r21, 0x41	; 65
    49b8:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    49bc:	0e 94 fd 2a 	call	0x55fa	; 0x55fa <__fixunssfsi>
    49c0:	dc 01       	movw	r26, r24
    49c2:	cb 01       	movw	r24, r22
    49c4:	88 0d       	add	r24, r8
    49c6:	99 1d       	adc	r25, r9
    49c8:	aa 1d       	adc	r26, r10
    49ca:	bb 1d       	adc	r27, r11
    49cc:	8c 0f       	add	r24, r28
    49ce:	91 1d       	adc	r25, r1
    49d0:	a1 1d       	adc	r26, r1
    49d2:	b1 1d       	adc	r27, r1
    49d4:	bc 01       	movw	r22, r24
    49d6:	cd 01       	movw	r24, r26
    49d8:	6c 0d       	add	r22, r12
    49da:	7d 1d       	adc	r23, r13
    49dc:	8e 1d       	adc	r24, r14
    49de:	9f 1d       	adc	r25, r15
    49e0:	0e 94 7a 29 	call	0x52f4	; 0x52f4 <__floatunsisf>
    49e4:	20 e0       	ldi	r18, 0x00	; 0
    49e6:	30 e9       	ldi	r19, 0x90	; 144
    49e8:	4e eb       	ldi	r20, 0xBE	; 190
    49ea:	54 e4       	ldi	r21, 0x44	; 68
    49ec:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__subsf3>


	return(JD);

}
    49f0:	df 91       	pop	r29
    49f2:	cf 91       	pop	r28
    49f4:	ff 90       	pop	r15
    49f6:	ef 90       	pop	r14
    49f8:	df 90       	pop	r13
    49fa:	cf 90       	pop	r12
    49fc:	bf 90       	pop	r11
    49fe:	af 90       	pop	r10
    4a00:	9f 90       	pop	r9
    4a02:	8f 90       	pop	r8
    4a04:	08 95       	ret

Disassembly of section .text.calcTimeDec:

00002b28 <calcTimeDec>:
void calcTimeDec(double JD,double* EqTmin,double* dec_ang)
{
    2b28:	4f 92       	push	r4
    2b2a:	5f 92       	push	r5
    2b2c:	6f 92       	push	r6
    2b2e:	7f 92       	push	r7
    2b30:	8f 92       	push	r8
    2b32:	9f 92       	push	r9
    2b34:	af 92       	push	r10
    2b36:	bf 92       	push	r11
    2b38:	cf 92       	push	r12
    2b3a:	df 92       	push	r13
    2b3c:	ef 92       	push	r14
    2b3e:	ff 92       	push	r15
    2b40:	0f 93       	push	r16
    2b42:	1f 93       	push	r17
    2b44:	cf 93       	push	r28
    2b46:	df 93       	push	r29
    2b48:	cd b7       	in	r28, 0x3d	; 61
    2b4a:	de b7       	in	r29, 0x3e	; 62
    2b4c:	2a 97       	sbiw	r28, 0x0a	; 10
    2b4e:	0f b6       	in	r0, 0x3f	; 63
    2b50:	f8 94       	cli
    2b52:	de bf       	out	0x3e, r29	; 62
    2b54:	0f be       	out	0x3f, r0	; 63
    2b56:	cd bf       	out	0x3d, r28	; 61
    2b58:	8a 01       	movw	r16, r20
    2b5a:	3a 87       	std	Y+10, r19	; 0x0a
    2b5c:	29 87       	std	Y+9, r18	; 0x09
	double val2=PI/180;
	double val,g,q,L,RA,EqT,d,e;
	uint32_t temp;
	val = 180.0/PI;
	// d=2457905.5-2451545.0;
	d = JD - 2451545.0;  // jd is the given Julian date
    2b5e:	24 e6       	ldi	r18, 0x64	; 100
    2b60:	31 ea       	ldi	r19, 0xA1	; 161
    2b62:	45 e1       	ldi	r20, 0x15	; 21
    2b64:	5a e4       	ldi	r21, 0x4A	; 74
    2b66:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__subsf3>
    2b6a:	6b 01       	movw	r12, r22
    2b6c:	7c 01       	movw	r14, r24

	g = 357.529 + 0.98560028* d;
    2b6e:	2d e4       	ldi	r18, 0x4D	; 77
    2b70:	30 e5       	ldi	r19, 0x50	; 80
    2b72:	4c e7       	ldi	r20, 0x7C	; 124
    2b74:	5f e3       	ldi	r21, 0x3F	; 63
    2b76:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    2b7a:	26 eb       	ldi	r18, 0xB6	; 182
    2b7c:	33 ec       	ldi	r19, 0xC3	; 195
    2b7e:	42 eb       	ldi	r20, 0xB2	; 178
    2b80:	53 e4       	ldi	r21, 0x43	; 67
    2b82:	0e 94 f0 2d 	call	0x5be0	; 0x5be0 <__addsf3>
    2b86:	4b 01       	movw	r8, r22
    2b88:	5c 01       	movw	r10, r24
	q = 280.459 + 0.98564736* d;
    2b8a:	23 e6       	ldi	r18, 0x63	; 99
    2b8c:	33 e5       	ldi	r19, 0x53	; 83
    2b8e:	4c e7       	ldi	r20, 0x7C	; 124
    2b90:	5f e3       	ldi	r21, 0x3F	; 63
    2b92:	c7 01       	movw	r24, r14
    2b94:	b6 01       	movw	r22, r12
    2b96:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    2b9a:	21 ec       	ldi	r18, 0xC1	; 193
    2b9c:	3a e3       	ldi	r19, 0x3A	; 58
    2b9e:	4c e8       	ldi	r20, 0x8C	; 140
    2ba0:	53 e4       	ldi	r21, 0x43	; 67
    2ba2:	0e 94 f0 2d 	call	0x5be0	; 0x5be0 <__addsf3>
    2ba6:	2b 01       	movw	r4, r22
    2ba8:	3c 01       	movw	r6, r24
	L = q + 1.915* sin(g*val2) + 0.020* sin(2*g*val2);
    2baa:	23 e3       	ldi	r18, 0x33	; 51
    2bac:	3a ef       	ldi	r19, 0xFA	; 250
    2bae:	4e e8       	ldi	r20, 0x8E	; 142
    2bb0:	5c e3       	ldi	r21, 0x3C	; 60
    2bb2:	c5 01       	movw	r24, r10
    2bb4:	b4 01       	movw	r22, r8
    2bb6:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    2bba:	0e 94 8e 1d 	call	0x3b1c	; 0x3b1c <sinf>
    2bbe:	28 eb       	ldi	r18, 0xB8	; 184
    2bc0:	3e e1       	ldi	r19, 0x1E	; 30
    2bc2:	45 ef       	ldi	r20, 0xF5	; 245
    2bc4:	5f e3       	ldi	r21, 0x3F	; 63
    2bc6:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    2bca:	9b 01       	movw	r18, r22
    2bcc:	ac 01       	movw	r20, r24
    2bce:	c3 01       	movw	r24, r6
    2bd0:	b2 01       	movw	r22, r4
    2bd2:	0e 94 f0 2d 	call	0x5be0	; 0x5be0 <__addsf3>
    2bd6:	69 83       	std	Y+1, r22	; 0x01
    2bd8:	7a 83       	std	Y+2, r23	; 0x02
    2bda:	8b 83       	std	Y+3, r24	; 0x03
    2bdc:	9c 83       	std	Y+4, r25	; 0x04
    2bde:	a5 01       	movw	r20, r10
    2be0:	94 01       	movw	r18, r8
    2be2:	c5 01       	movw	r24, r10
    2be4:	b4 01       	movw	r22, r8
    2be6:	0e 94 f0 2d 	call	0x5be0	; 0x5be0 <__addsf3>
    2bea:	23 e3       	ldi	r18, 0x33	; 51
    2bec:	3a ef       	ldi	r19, 0xFA	; 250
    2bee:	4e e8       	ldi	r20, 0x8E	; 142
    2bf0:	5c e3       	ldi	r21, 0x3C	; 60
    2bf2:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    2bf6:	0e 94 8e 1d 	call	0x3b1c	; 0x3b1c <sinf>
    2bfa:	2a e0       	ldi	r18, 0x0A	; 10
    2bfc:	37 ed       	ldi	r19, 0xD7	; 215
    2bfe:	43 ea       	ldi	r20, 0xA3	; 163
    2c00:	5c e3       	ldi	r21, 0x3C	; 60
    2c02:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    2c06:	9b 01       	movw	r18, r22
    2c08:	ac 01       	movw	r20, r24
    2c0a:	69 81       	ldd	r22, Y+1	; 0x01
    2c0c:	7a 81       	ldd	r23, Y+2	; 0x02
    2c0e:	8b 81       	ldd	r24, Y+3	; 0x03
    2c10:	9c 81       	ldd	r25, Y+4	; 0x04
    2c12:	0e 94 f0 2d 	call	0x5be0	; 0x5be0 <__addsf3>
    2c16:	4b 01       	movw	r8, r22
    2c18:	5c 01       	movw	r10, r24

	e = 23.439 - 0.00000036* d;
    2c1a:	26 e0       	ldi	r18, 0x06	; 6
    2c1c:	36 e4       	ldi	r19, 0x46	; 70
    2c1e:	41 ec       	ldi	r20, 0xC1	; 193
    2c20:	54 e3       	ldi	r21, 0x34	; 52
    2c22:	c7 01       	movw	r24, r14
    2c24:	b6 01       	movw	r22, r12
    2c26:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    2c2a:	9b 01       	movw	r18, r22
    2c2c:	ac 01       	movw	r20, r24
    2c2e:	62 e1       	ldi	r22, 0x12	; 18
    2c30:	73 e8       	ldi	r23, 0x83	; 131
    2c32:	8b eb       	ldi	r24, 0xBB	; 187
    2c34:	91 e4       	ldi	r25, 0x41	; 65
    2c36:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__subsf3>
    2c3a:	6b 01       	movw	r12, r22
    2c3c:	7c 01       	movw	r14, r24
	RA = (atan2(cos(e*val2)* sin(L*val2), cos(L*val2))*val)/ 15;
    2c3e:	23 e3       	ldi	r18, 0x33	; 51
    2c40:	3a ef       	ldi	r19, 0xFA	; 250
    2c42:	4e e8       	ldi	r20, 0x8E	; 142
    2c44:	5c e3       	ldi	r21, 0x3C	; 60
    2c46:	c5 01       	movw	r24, r10
    2c48:	b4 01       	movw	r22, r8
    2c4a:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    2c4e:	4b 01       	movw	r8, r22
    2c50:	5c 01       	movw	r10, r24
    2c52:	0e 94 9c 21 	call	0x4338	; 0x4338 <cosf>
    2c56:	69 83       	std	Y+1, r22	; 0x01
    2c58:	7a 83       	std	Y+2, r23	; 0x02
    2c5a:	8b 83       	std	Y+3, r24	; 0x03
    2c5c:	9c 83       	std	Y+4, r25	; 0x04
    2c5e:	23 e3       	ldi	r18, 0x33	; 51
    2c60:	3a ef       	ldi	r19, 0xFA	; 250
    2c62:	4e e8       	ldi	r20, 0x8E	; 142
    2c64:	5c e3       	ldi	r21, 0x3C	; 60
    2c66:	c7 01       	movw	r24, r14
    2c68:	b6 01       	movw	r22, r12
    2c6a:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    2c6e:	6b 01       	movw	r12, r22
    2c70:	7c 01       	movw	r14, r24
    2c72:	0e 94 9c 21 	call	0x4338	; 0x4338 <cosf>
    2c76:	6d 83       	std	Y+5, r22	; 0x05
    2c78:	7e 83       	std	Y+6, r23	; 0x06
    2c7a:	8f 83       	std	Y+7, r24	; 0x07
    2c7c:	98 87       	std	Y+8, r25	; 0x08
    2c7e:	c5 01       	movw	r24, r10
    2c80:	b4 01       	movw	r22, r8
    2c82:	0e 94 8e 1d 	call	0x3b1c	; 0x3b1c <sinf>
    2c86:	4b 01       	movw	r8, r22
    2c88:	5c 01       	movw	r10, r24
    2c8a:	9b 01       	movw	r18, r22
    2c8c:	ac 01       	movw	r20, r24
    2c8e:	6d 81       	ldd	r22, Y+5	; 0x05
    2c90:	7e 81       	ldd	r23, Y+6	; 0x06
    2c92:	8f 81       	ldd	r24, Y+7	; 0x07
    2c94:	98 85       	ldd	r25, Y+8	; 0x08
    2c96:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    2c9a:	29 81       	ldd	r18, Y+1	; 0x01
    2c9c:	3a 81       	ldd	r19, Y+2	; 0x02
    2c9e:	4b 81       	ldd	r20, Y+3	; 0x03
    2ca0:	5c 81       	ldd	r21, Y+4	; 0x04
    2ca2:	0e 94 4e 14 	call	0x289c	; 0x289c <atan2f>
    2ca6:	24 ee       	ldi	r18, 0xE4	; 228
    2ca8:	3e e2       	ldi	r19, 0x2E	; 46
    2caa:	45 e6       	ldi	r20, 0x65	; 101
    2cac:	52 e4       	ldi	r21, 0x42	; 66
    2cae:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    2cb2:	20 e0       	ldi	r18, 0x00	; 0
    2cb4:	30 e0       	ldi	r19, 0x00	; 0
    2cb6:	40 e7       	ldi	r20, 0x70	; 112
    2cb8:	51 e4       	ldi	r21, 0x41	; 65
    2cba:	0e 94 3a 2e 	call	0x5c74	; 0x5c74 <__divsf3>
    2cbe:	69 83       	std	Y+1, r22	; 0x01
    2cc0:	7a 83       	std	Y+2, r23	; 0x02
    2cc2:	8b 83       	std	Y+3, r24	; 0x03
    2cc4:	9c 83       	std	Y+4, r25	; 0x04

	*dec_ang = (asin((sin(e*val2))*(sin(L*val2)))*val);  // declination of the Sun
    2cc6:	c7 01       	movw	r24, r14
    2cc8:	b6 01       	movw	r22, r12
    2cca:	0e 94 8e 1d 	call	0x3b1c	; 0x3b1c <sinf>
    2cce:	9b 01       	movw	r18, r22
    2cd0:	ac 01       	movw	r20, r24
    2cd2:	c5 01       	movw	r24, r10
    2cd4:	b4 01       	movw	r22, r8
    2cd6:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    2cda:	0e 94 c6 17 	call	0x2f8c	; 0x2f8c <asinf>
    2cde:	24 ee       	ldi	r18, 0xE4	; 228
    2ce0:	3e e2       	ldi	r19, 0x2E	; 46
    2ce2:	45 e6       	ldi	r20, 0x65	; 101
    2ce4:	52 e4       	ldi	r21, 0x42	; 66
    2ce6:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    2cea:	e9 85       	ldd	r30, Y+9	; 0x09
    2cec:	fa 85       	ldd	r31, Y+10	; 0x0a
    2cee:	60 83       	st	Z, r22
    2cf0:	71 83       	std	Z+1, r23	; 0x01
    2cf2:	82 83       	std	Z+2, r24	; 0x02
    2cf4:	93 83       	std	Z+3, r25	; 0x03
	EqT = q/15 - RA;  // equation of time
    2cf6:	20 e0       	ldi	r18, 0x00	; 0
    2cf8:	30 e0       	ldi	r19, 0x00	; 0
    2cfa:	40 e7       	ldi	r20, 0x70	; 112
    2cfc:	51 e4       	ldi	r21, 0x41	; 65
    2cfe:	c3 01       	movw	r24, r6
    2d00:	b2 01       	movw	r22, r4
    2d02:	0e 94 3a 2e 	call	0x5c74	; 0x5c74 <__divsf3>
    2d06:	29 81       	ldd	r18, Y+1	; 0x01
    2d08:	3a 81       	ldd	r19, Y+2	; 0x02
    2d0a:	4b 81       	ldd	r20, Y+3	; 0x03
    2d0c:	5c 81       	ldd	r21, Y+4	; 0x04
    2d0e:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__subsf3>
    2d12:	6b 01       	movw	r12, r22
    2d14:	7c 01       	movw	r14, r24
	temp=(int32_t)EqT;
    2d16:	0e 94 f6 2d 	call	0x5bec	; 0x5bec <__fixsfsi>
	double fraction=EqT-temp;
    2d1a:	0e 94 7a 29 	call	0x52f4	; 0x52f4 <__floatunsisf>
    2d1e:	9b 01       	movw	r18, r22
    2d20:	ac 01       	movw	r20, r24
    2d22:	c7 01       	movw	r24, r14
    2d24:	b6 01       	movw	r22, r12
    2d26:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__subsf3>
	fraction=fraction*10000;
	*EqTmin=EqT-temp;
    2d2a:	f8 01       	movw	r30, r16
    2d2c:	60 83       	st	Z, r22
    2d2e:	71 83       	std	Z+1, r23	; 0x01
    2d30:	82 83       	std	Z+2, r24	; 0x02
    2d32:	93 83       	std	Z+3, r25	; 0x03

}
    2d34:	2a 96       	adiw	r28, 0x0a	; 10
    2d36:	0f b6       	in	r0, 0x3f	; 63
    2d38:	f8 94       	cli
    2d3a:	de bf       	out	0x3e, r29	; 62
    2d3c:	0f be       	out	0x3f, r0	; 63
    2d3e:	cd bf       	out	0x3d, r28	; 61
    2d40:	df 91       	pop	r29
    2d42:	cf 91       	pop	r28
    2d44:	1f 91       	pop	r17
    2d46:	0f 91       	pop	r16
    2d48:	ff 90       	pop	r15
    2d4a:	ef 90       	pop	r14
    2d4c:	df 90       	pop	r13
    2d4e:	cf 90       	pop	r12
    2d50:	bf 90       	pop	r11
    2d52:	af 90       	pop	r10
    2d54:	9f 90       	pop	r9
    2d56:	8f 90       	pop	r8
    2d58:	7f 90       	pop	r7
    2d5a:	6f 90       	pop	r6
    2d5c:	5f 90       	pop	r5
    2d5e:	4f 90       	pop	r4
    2d60:	08 95       	ret

Disassembly of section .text.calcDuhurTime:

000054c8 <calcDuhurTime>:

double calcDuhurTime(double EqTmin, sint8 timezone,double longit_pray)
{ //this function is to get the zohr time based on the time zone of your city (difference between your city and GMT) and longit number
    54c8:	8f 92       	push	r8
    54ca:	9f 92       	push	r9
    54cc:	af 92       	push	r10
    54ce:	bf 92       	push	r11
    54d0:	cf 92       	push	r12
    54d2:	df 92       	push	r13
    54d4:	ef 92       	push	r14
    54d6:	ff 92       	push	r15
    54d8:	0f 93       	push	r16
    54da:	1f 93       	push	r17
    54dc:	cf 93       	push	r28
    54de:	df 93       	push	r29
    54e0:	4b 01       	movw	r8, r22
    54e2:	5c 01       	movw	r10, r24
    54e4:	c9 01       	movw	r24, r18
    54e6:	b8 01       	movw	r22, r16
	double zohr;
	zohr=12+timezone-(longit_pray/15)-EqTmin;
    54e8:	c4 2f       	mov	r28, r20
    54ea:	44 0f       	add	r20, r20
    54ec:	dd 0b       	sbc	r29, r29
    54ee:	2c 96       	adiw	r28, 0x0c	; 12
    54f0:	20 e0       	ldi	r18, 0x00	; 0
    54f2:	30 e0       	ldi	r19, 0x00	; 0
    54f4:	40 e7       	ldi	r20, 0x70	; 112
    54f6:	51 e4       	ldi	r21, 0x41	; 65
    54f8:	0e 94 3a 2e 	call	0x5c74	; 0x5c74 <__divsf3>
    54fc:	6b 01       	movw	r12, r22
    54fe:	7c 01       	movw	r14, r24
    5500:	be 01       	movw	r22, r28
    5502:	dd 0f       	add	r29, r29
    5504:	88 0b       	sbc	r24, r24
    5506:	99 0b       	sbc	r25, r25
    5508:	0e 94 7c 29 	call	0x52f8	; 0x52f8 <__floatsisf>
    550c:	a7 01       	movw	r20, r14
    550e:	96 01       	movw	r18, r12
    5510:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__subsf3>
    5514:	a5 01       	movw	r20, r10
    5516:	94 01       	movw	r18, r8
    5518:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__subsf3>
	//convert_to_string(zohr);
	return zohr; //it's not preferable to return float number so for more precise number use it as global variable
}
    551c:	df 91       	pop	r29
    551e:	cf 91       	pop	r28
    5520:	1f 91       	pop	r17
    5522:	0f 91       	pop	r16
    5524:	ff 90       	pop	r15
    5526:	ef 90       	pop	r14
    5528:	df 90       	pop	r13
    552a:	cf 90       	pop	r12
    552c:	bf 90       	pop	r11
    552e:	af 90       	pop	r10
    5530:	9f 90       	pop	r9
    5532:	8f 90       	pop	r8
    5534:	08 95       	ret

Disassembly of section .text.calcAsrTime:

000041ba <calcAsrTime>:

double calcAsrTime(double zohr,double latit_pray,double dec_angle)
{
    41ba:	4f 92       	push	r4
    41bc:	5f 92       	push	r5
    41be:	6f 92       	push	r6
    41c0:	7f 92       	push	r7
    41c2:	8f 92       	push	r8
    41c4:	9f 92       	push	r9
    41c6:	af 92       	push	r10
    41c8:	bf 92       	push	r11
    41ca:	cf 92       	push	r12
    41cc:	df 92       	push	r13
    41ce:	ef 92       	push	r14
    41d0:	ff 92       	push	r15
    41d2:	0f 93       	push	r16
    41d4:	1f 93       	push	r17
    41d6:	cf 93       	push	r28
    41d8:	df 93       	push	r29
    41da:	cd b7       	in	r28, 0x3d	; 61
    41dc:	de b7       	in	r29, 0x3e	; 62
    41de:	2c 97       	sbiw	r28, 0x0c	; 12
    41e0:	0f b6       	in	r0, 0x3f	; 63
    41e2:	f8 94       	cli
    41e4:	de bf       	out	0x3e, r29	; 62
    41e6:	0f be       	out	0x3f, r0	; 63
    41e8:	cd bf       	out	0x3d, r28	; 61
    41ea:	69 87       	std	Y+9, r22	; 0x09
    41ec:	7a 87       	std	Y+10, r23	; 0x0a
    41ee:	8b 87       	std	Y+11, r24	; 0x0b
    41f0:	9c 87       	std	Y+12, r25	; 0x0c
    41f2:	29 01       	movw	r4, r18
    41f4:	3a 01       	movw	r6, r20
    41f6:	67 01       	movw	r12, r14
    41f8:	78 01       	movw	r14, r16
	//this function is to get  the asr time based on the Zohr time and the latit.
	double asr;
	double val2=PI/180, val=180.0/PI;
	double temp,alt;
	double phi=latit_pray-dec_angle;
    41fa:	a7 01       	movw	r20, r14
    41fc:	96 01       	movw	r18, r12
    41fe:	c3 01       	movw	r24, r6
    4200:	b2 01       	movw	r22, r4
    4202:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__subsf3>
	temp=1/(1+tan(phi*val2));
    4206:	23 e3       	ldi	r18, 0x33	; 51
    4208:	3a ef       	ldi	r19, 0xFA	; 250
    420a:	4e e8       	ldi	r20, 0x8E	; 142
    420c:	5c e3       	ldi	r21, 0x3C	; 60
    420e:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    4212:	0e 94 41 1f 	call	0x3e82	; 0x3e82 <tanf>
    4216:	20 e0       	ldi	r18, 0x00	; 0
    4218:	30 e0       	ldi	r19, 0x00	; 0
    421a:	40 e8       	ldi	r20, 0x80	; 128
    421c:	5f e3       	ldi	r21, 0x3F	; 63
    421e:	0e 94 f0 2d 	call	0x5be0	; 0x5be0 <__addsf3>
    4222:	9b 01       	movw	r18, r22
    4224:	ac 01       	movw	r20, r24
    4226:	60 e0       	ldi	r22, 0x00	; 0
    4228:	70 e0       	ldi	r23, 0x00	; 0
    422a:	80 e8       	ldi	r24, 0x80	; 128
    422c:	9f e3       	ldi	r25, 0x3F	; 63
    422e:	0e 94 3a 2e 	call	0x5c74	; 0x5c74 <__divsf3>
	alt=atan(temp)*val;
    4232:	0e 94 d6 12 	call	0x25ac	; 0x25ac <atanf>
    4236:	24 ee       	ldi	r18, 0xE4	; 228
    4238:	3e e2       	ldi	r19, 0x2E	; 46
    423a:	45 e6       	ldi	r20, 0x65	; 101
    423c:	52 e4       	ldi	r21, 0x42	; 66
    423e:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>

	temp=(sin(alt*val2)-(sin(dec_angle*val2)*sin(latit_pray*val2)))/(cos(dec_angle*val2)*cos(latit_pray*val2));
    4242:	23 e3       	ldi	r18, 0x33	; 51
    4244:	3a ef       	ldi	r19, 0xFA	; 250
    4246:	4e e8       	ldi	r20, 0x8E	; 142
    4248:	5c e3       	ldi	r21, 0x3C	; 60
    424a:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    424e:	0e 94 8e 1d 	call	0x3b1c	; 0x3b1c <sinf>
    4252:	69 83       	std	Y+1, r22	; 0x01
    4254:	7a 83       	std	Y+2, r23	; 0x02
    4256:	8b 83       	std	Y+3, r24	; 0x03
    4258:	9c 83       	std	Y+4, r25	; 0x04
    425a:	23 e3       	ldi	r18, 0x33	; 51
    425c:	3a ef       	ldi	r19, 0xFA	; 250
    425e:	4e e8       	ldi	r20, 0x8E	; 142
    4260:	5c e3       	ldi	r21, 0x3C	; 60
    4262:	c7 01       	movw	r24, r14
    4264:	b6 01       	movw	r22, r12
    4266:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    426a:	4b 01       	movw	r8, r22
    426c:	5c 01       	movw	r10, r24
    426e:	0e 94 8e 1d 	call	0x3b1c	; 0x3b1c <sinf>
    4272:	6d 83       	std	Y+5, r22	; 0x05
    4274:	7e 83       	std	Y+6, r23	; 0x06
    4276:	8f 83       	std	Y+7, r24	; 0x07
    4278:	98 87       	std	Y+8, r25	; 0x08
    427a:	23 e3       	ldi	r18, 0x33	; 51
    427c:	3a ef       	ldi	r19, 0xFA	; 250
    427e:	4e e8       	ldi	r20, 0x8E	; 142
    4280:	5c e3       	ldi	r21, 0x3C	; 60
    4282:	c3 01       	movw	r24, r6
    4284:	b2 01       	movw	r22, r4
    4286:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    428a:	6b 01       	movw	r12, r22
    428c:	7c 01       	movw	r14, r24
    428e:	0e 94 8e 1d 	call	0x3b1c	; 0x3b1c <sinf>
    4292:	9b 01       	movw	r18, r22
    4294:	ac 01       	movw	r20, r24
    4296:	6d 81       	ldd	r22, Y+5	; 0x05
    4298:	7e 81       	ldd	r23, Y+6	; 0x06
    429a:	8f 81       	ldd	r24, Y+7	; 0x07
    429c:	98 85       	ldd	r25, Y+8	; 0x08
    429e:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    42a2:	9b 01       	movw	r18, r22
    42a4:	ac 01       	movw	r20, r24
    42a6:	69 81       	ldd	r22, Y+1	; 0x01
    42a8:	7a 81       	ldd	r23, Y+2	; 0x02
    42aa:	8b 81       	ldd	r24, Y+3	; 0x03
    42ac:	9c 81       	ldd	r25, Y+4	; 0x04
    42ae:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__subsf3>
    42b2:	2b 01       	movw	r4, r22
    42b4:	3c 01       	movw	r6, r24
    42b6:	c5 01       	movw	r24, r10
    42b8:	b4 01       	movw	r22, r8
    42ba:	0e 94 9c 21 	call	0x4338	; 0x4338 <cosf>
    42be:	4b 01       	movw	r8, r22
    42c0:	5c 01       	movw	r10, r24
    42c2:	c7 01       	movw	r24, r14
    42c4:	b6 01       	movw	r22, r12
    42c6:	0e 94 9c 21 	call	0x4338	; 0x4338 <cosf>
    42ca:	9b 01       	movw	r18, r22
    42cc:	ac 01       	movw	r20, r24
    42ce:	c5 01       	movw	r24, r10
    42d0:	b4 01       	movw	r22, r8
    42d2:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    42d6:	9b 01       	movw	r18, r22
    42d8:	ac 01       	movw	r20, r24
    42da:	c3 01       	movw	r24, r6
    42dc:	b2 01       	movw	r22, r4
    42de:	0e 94 3a 2e 	call	0x5c74	; 0x5c74 <__divsf3>
	temp=acos(temp)*val;
    42e2:	0e 94 9c 0f 	call	0x1f38	; 0x1f38 <acosf>
    42e6:	24 ee       	ldi	r18, 0xE4	; 228
    42e8:	3e e2       	ldi	r19, 0x2E	; 46
    42ea:	45 e6       	ldi	r20, 0x65	; 101
    42ec:	52 e4       	ldi	r21, 0x42	; 66
    42ee:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
	temp=temp/15;
    42f2:	20 e0       	ldi	r18, 0x00	; 0
    42f4:	30 e0       	ldi	r19, 0x00	; 0
    42f6:	40 e7       	ldi	r20, 0x70	; 112
    42f8:	51 e4       	ldi	r21, 0x41	; 65
    42fa:	0e 94 3a 2e 	call	0x5c74	; 0x5c74 <__divsf3>
	asr=zohr+temp;
    42fe:	29 85       	ldd	r18, Y+9	; 0x09
    4300:	3a 85       	ldd	r19, Y+10	; 0x0a
    4302:	4b 85       	ldd	r20, Y+11	; 0x0b
    4304:	5c 85       	ldd	r21, Y+12	; 0x0c
    4306:	0e 94 f0 2d 	call	0x5be0	; 0x5be0 <__addsf3>
	//convert_to_string(asr);
	return asr;
}
    430a:	2c 96       	adiw	r28, 0x0c	; 12
    430c:	0f b6       	in	r0, 0x3f	; 63
    430e:	f8 94       	cli
    4310:	de bf       	out	0x3e, r29	; 62
    4312:	0f be       	out	0x3f, r0	; 63
    4314:	cd bf       	out	0x3d, r28	; 61
    4316:	df 91       	pop	r29
    4318:	cf 91       	pop	r28
    431a:	1f 91       	pop	r17
    431c:	0f 91       	pop	r16
    431e:	ff 90       	pop	r15
    4320:	ef 90       	pop	r14
    4322:	df 90       	pop	r13
    4324:	cf 90       	pop	r12
    4326:	bf 90       	pop	r11
    4328:	af 90       	pop	r10
    432a:	9f 90       	pop	r9
    432c:	8f 90       	pop	r8
    432e:	7f 90       	pop	r7
    4330:	6f 90       	pop	r6
    4332:	5f 90       	pop	r5
    4334:	4f 90       	pop	r4
    4336:	08 95       	ret

Disassembly of section .text.calcRemainingPrayerTimes:

0000358a <calcRemainingPrayerTimes>:
double calcRemainingPrayerTimes(uint8 pray, double latit_pray, double dec_angle, double zohr) {
    358a:	4f 92       	push	r4
    358c:	5f 92       	push	r5
    358e:	6f 92       	push	r6
    3590:	7f 92       	push	r7
    3592:	8f 92       	push	r8
    3594:	9f 92       	push	r9
    3596:	af 92       	push	r10
    3598:	bf 92       	push	r11
    359a:	cf 92       	push	r12
    359c:	df 92       	push	r13
    359e:	ef 92       	push	r14
    35a0:	ff 92       	push	r15
    35a2:	0f 93       	push	r16
    35a4:	1f 93       	push	r17
    35a6:	cf 93       	push	r28
    35a8:	df 93       	push	r29
    35aa:	cd b7       	in	r28, 0x3d	; 61
    35ac:	de b7       	in	r29, 0x3e	; 62
    35ae:	29 97       	sbiw	r28, 0x09	; 9
    35b0:	0f b6       	in	r0, 0x3f	; 63
    35b2:	f8 94       	cli
    35b4:	de bf       	out	0x3e, r29	; 62
    35b6:	0f be       	out	0x3f, r0	; 63
    35b8:	cd bf       	out	0x3d, r28	; 61
	double time = 0.0;
	double val2 = PI / 180.0;
	double angle;

	switch (pray) {
    35ba:	81 30       	cpi	r24, 0x01	; 1
    35bc:	c9 f0       	breq	.+50     	; 0x35f0 <calcRemainingPrayerTimes+0x66>
    35be:	28 f0       	brcs	.+10     	; 0x35ca <calcRemainingPrayerTimes+0x40>
    35c0:	82 30       	cpi	r24, 0x02	; 2
    35c2:	69 f0       	breq	.+26     	; 0x35de <calcRemainingPrayerTimes+0x54>
    35c4:	83 30       	cpi	r24, 0x03	; 3
    35c6:	09 f0       	breq	.+2      	; 0x35ca <calcRemainingPrayerTimes+0x40>
    35c8:	b5 c0       	rjmp	.+362    	; 0x3734 <calcRemainingPrayerTimes+0x1aa>
		case MAGHRIB:
		angle = 0.833;
    35ca:	0f 2e       	mov	r0, r31
    35cc:	fd e7       	ldi	r31, 0x7D	; 125
    35ce:	4f 2e       	mov	r4, r31
    35d0:	ff e3       	ldi	r31, 0x3F	; 63
    35d2:	5f 2e       	mov	r5, r31
    35d4:	f5 e5       	ldi	r31, 0x55	; 85
    35d6:	6f 2e       	mov	r6, r31
    35d8:	75 2c       	mov	r7, r5
    35da:	f0 2d       	mov	r31, r0
    35dc:	11 c0       	rjmp	.+34     	; 0x3600 <calcRemainingPrayerTimes+0x76>
		break;
		case ISHA:
		angle = 17.5;
		break;
		case FAJR:
		angle = 19.5;
    35de:	0f 2e       	mov	r0, r31
    35e0:	41 2c       	mov	r4, r1
    35e2:	51 2c       	mov	r5, r1
    35e4:	fc e9       	ldi	r31, 0x9C	; 156
    35e6:	6f 2e       	mov	r6, r31
    35e8:	f1 e4       	ldi	r31, 0x41	; 65
    35ea:	7f 2e       	mov	r7, r31
    35ec:	f0 2d       	mov	r31, r0
		break;
    35ee:	08 c0       	rjmp	.+16     	; 0x3600 <calcRemainingPrayerTimes+0x76>
	switch (pray) {
		case MAGHRIB:
		angle = 0.833;
		break;
		case ISHA:
		angle = 17.5;
    35f0:	0f 2e       	mov	r0, r31
    35f2:	41 2c       	mov	r4, r1
    35f4:	51 2c       	mov	r5, r1
    35f6:	fc e8       	ldi	r31, 0x8C	; 140
    35f8:	6f 2e       	mov	r6, r31
    35fa:	f1 e4       	ldi	r31, 0x41	; 65
    35fc:	7f 2e       	mov	r7, r31
    35fe:	f0 2d       	mov	r31, r0
    3600:	cd 82       	std	Y+5, r12	; 0x05
    3602:	de 82       	std	Y+6, r13	; 0x06
    3604:	ef 82       	std	Y+7, r14	; 0x07
    3606:	f8 86       	std	Y+8, r15	; 0x08
    3608:	48 01       	movw	r8, r16
    360a:	59 01       	movw	r10, r18
    360c:	6a 01       	movw	r12, r20
    360e:	7b 01       	movw	r14, r22
    3610:	89 87       	std	Y+9, r24	; 0x09
		break;
		default:
		return 0.0;
	}

	time = (-sin(angle * val2) - (sin(dec_angle * val2) * sin(latit_pray * val2))) /
    3612:	23 e3       	ldi	r18, 0x33	; 51
    3614:	3a ef       	ldi	r19, 0xFA	; 250
    3616:	4e e8       	ldi	r20, 0x8E	; 142
    3618:	5c e3       	ldi	r21, 0x3C	; 60
    361a:	c3 01       	movw	r24, r6
    361c:	b2 01       	movw	r22, r4
    361e:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    3622:	0e 94 8e 1d 	call	0x3b1c	; 0x3b1c <sinf>
    3626:	2b 01       	movw	r4, r22
    3628:	3c 01       	movw	r6, r24
    362a:	77 fa       	bst	r7, 7
    362c:	70 94       	com	r7
    362e:	77 f8       	bld	r7, 7
    3630:	70 94       	com	r7
    3632:	23 e3       	ldi	r18, 0x33	; 51
    3634:	3a ef       	ldi	r19, 0xFA	; 250
    3636:	4e e8       	ldi	r20, 0x8E	; 142
    3638:	5c e3       	ldi	r21, 0x3C	; 60
    363a:	c5 01       	movw	r24, r10
    363c:	b4 01       	movw	r22, r8
    363e:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    3642:	4b 01       	movw	r8, r22
    3644:	5c 01       	movw	r10, r24
    3646:	0e 94 8e 1d 	call	0x3b1c	; 0x3b1c <sinf>
    364a:	69 83       	std	Y+1, r22	; 0x01
    364c:	7a 83       	std	Y+2, r23	; 0x02
    364e:	8b 83       	std	Y+3, r24	; 0x03
    3650:	9c 83       	std	Y+4, r25	; 0x04
    3652:	23 e3       	ldi	r18, 0x33	; 51
    3654:	3a ef       	ldi	r19, 0xFA	; 250
    3656:	4e e8       	ldi	r20, 0x8E	; 142
    3658:	5c e3       	ldi	r21, 0x3C	; 60
    365a:	c7 01       	movw	r24, r14
    365c:	b6 01       	movw	r22, r12
    365e:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    3662:	6b 01       	movw	r12, r22
    3664:	7c 01       	movw	r14, r24
    3666:	0e 94 8e 1d 	call	0x3b1c	; 0x3b1c <sinf>
    366a:	9b 01       	movw	r18, r22
    366c:	ac 01       	movw	r20, r24
    366e:	69 81       	ldd	r22, Y+1	; 0x01
    3670:	7a 81       	ldd	r23, Y+2	; 0x02
    3672:	8b 81       	ldd	r24, Y+3	; 0x03
    3674:	9c 81       	ldd	r25, Y+4	; 0x04
    3676:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    367a:	9b 01       	movw	r18, r22
    367c:	ac 01       	movw	r20, r24
    367e:	c3 01       	movw	r24, r6
    3680:	b2 01       	movw	r22, r4
    3682:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__subsf3>
    3686:	2b 01       	movw	r4, r22
    3688:	3c 01       	movw	r6, r24
	(cos(dec_angle * val2) * cos(latit_pray * val2));
    368a:	c5 01       	movw	r24, r10
    368c:	b4 01       	movw	r22, r8
    368e:	0e 94 9c 21 	call	0x4338	; 0x4338 <cosf>
    3692:	4b 01       	movw	r8, r22
    3694:	5c 01       	movw	r10, r24
    3696:	c7 01       	movw	r24, r14
    3698:	b6 01       	movw	r22, r12
    369a:	0e 94 9c 21 	call	0x4338	; 0x4338 <cosf>
    369e:	9b 01       	movw	r18, r22
    36a0:	ac 01       	movw	r20, r24
    36a2:	c5 01       	movw	r24, r10
    36a4:	b4 01       	movw	r22, r8
    36a6:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    36aa:	9b 01       	movw	r18, r22
    36ac:	ac 01       	movw	r20, r24
		break;
		default:
		return 0.0;
	}

	time = (-sin(angle * val2) - (sin(dec_angle * val2) * sin(latit_pray * val2))) /
    36ae:	c3 01       	movw	r24, r6
    36b0:	b2 01       	movw	r22, r4
    36b2:	0e 94 3a 2e 	call	0x5c74	; 0x5c74 <__divsf3>
	(cos(dec_angle * val2) * cos(latit_pray * val2));
	time = acos(time) * 180.0 / PI;
    36b6:	0e 94 9c 0f 	call	0x1f38	; 0x1f38 <acosf>
    36ba:	20 e0       	ldi	r18, 0x00	; 0
    36bc:	30 e0       	ldi	r19, 0x00	; 0
    36be:	44 e3       	ldi	r20, 0x34	; 52
    36c0:	53 e4       	ldi	r21, 0x43	; 67
    36c2:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    36c6:	28 ed       	ldi	r18, 0xD8	; 216
    36c8:	3f e0       	ldi	r19, 0x0F	; 15
    36ca:	49 e4       	ldi	r20, 0x49	; 73
    36cc:	50 e4       	ldi	r21, 0x40	; 64
    36ce:	0e 94 3a 2e 	call	0x5c74	; 0x5c74 <__divsf3>
	time /= 15.0;
    36d2:	20 e0       	ldi	r18, 0x00	; 0
    36d4:	30 e0       	ldi	r19, 0x00	; 0
    36d6:	40 e7       	ldi	r20, 0x70	; 112
    36d8:	51 e4       	ldi	r21, 0x41	; 65
    36da:	0e 94 3a 2e 	call	0x5c74	; 0x5c74 <__divsf3>

	if (pray == FAJR) {
    36de:	29 85       	ldd	r18, Y+9	; 0x09
    36e0:	22 30       	cpi	r18, 0x02	; 2
    36e2:	69 f4       	brne	.+26     	; 0x36fe <calcRemainingPrayerTimes+0x174>
		time = zohr - time;
    36e4:	9b 01       	movw	r18, r22
    36e6:	ac 01       	movw	r20, r24
    36e8:	6d 81       	ldd	r22, Y+5	; 0x05
    36ea:	7e 81       	ldd	r23, Y+6	; 0x06
    36ec:	8f 81       	ldd	r24, Y+7	; 0x07
    36ee:	98 85       	ldd	r25, Y+8	; 0x08
    36f0:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__subsf3>
    36f4:	56 2f       	mov	r21, r22
    36f6:	47 2f       	mov	r20, r23
    36f8:	38 2f       	mov	r19, r24
    36fa:	29 2f       	mov	r18, r25
    36fc:	1f c0       	rjmp	.+62     	; 0x373c <calcRemainingPrayerTimes+0x1b2>
		} else if (pray == SUNRISE) {
    36fe:	29 85       	ldd	r18, Y+9	; 0x09
    3700:	23 30       	cpi	r18, 0x03	; 3
    3702:	69 f4       	brne	.+26     	; 0x371e <calcRemainingPrayerTimes+0x194>
		time = zohr - time; // similar to Fajr but for sunrise
    3704:	9b 01       	movw	r18, r22
    3706:	ac 01       	movw	r20, r24
    3708:	6d 81       	ldd	r22, Y+5	; 0x05
    370a:	7e 81       	ldd	r23, Y+6	; 0x06
    370c:	8f 81       	ldd	r24, Y+7	; 0x07
    370e:	98 85       	ldd	r25, Y+8	; 0x08
    3710:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__subsf3>
    3714:	56 2f       	mov	r21, r22
    3716:	47 2f       	mov	r20, r23
    3718:	38 2f       	mov	r19, r24
    371a:	29 2f       	mov	r18, r25
    371c:	0f c0       	rjmp	.+30     	; 0x373c <calcRemainingPrayerTimes+0x1b2>
		} else {
		time = zohr + time;
    371e:	2d 81       	ldd	r18, Y+5	; 0x05
    3720:	3e 81       	ldd	r19, Y+6	; 0x06
    3722:	4f 81       	ldd	r20, Y+7	; 0x07
    3724:	58 85       	ldd	r21, Y+8	; 0x08
    3726:	0e 94 f0 2d 	call	0x5be0	; 0x5be0 <__addsf3>
    372a:	56 2f       	mov	r21, r22
    372c:	47 2f       	mov	r20, r23
    372e:	38 2f       	mov	r19, r24
    3730:	29 2f       	mov	r18, r25
    3732:	04 c0       	rjmp	.+8      	; 0x373c <calcRemainingPrayerTimes+0x1b2>
		break;
		case SUNRISE:
		angle = 0.833; // Sun's angle below the horizon for sunrise
		break;
		default:
		return 0.0;
    3734:	50 e0       	ldi	r21, 0x00	; 0
    3736:	40 e0       	ldi	r20, 0x00	; 0
    3738:	30 e0       	ldi	r19, 0x00	; 0
    373a:	20 e0       	ldi	r18, 0x00	; 0
		} else {
		time = zohr + time;
	}

	return time;
}
    373c:	65 2f       	mov	r22, r21
    373e:	74 2f       	mov	r23, r20
    3740:	83 2f       	mov	r24, r19
    3742:	92 2f       	mov	r25, r18
    3744:	29 96       	adiw	r28, 0x09	; 9
    3746:	0f b6       	in	r0, 0x3f	; 63
    3748:	f8 94       	cli
    374a:	de bf       	out	0x3e, r29	; 62
    374c:	0f be       	out	0x3f, r0	; 63
    374e:	cd bf       	out	0x3d, r28	; 61
    3750:	df 91       	pop	r29
    3752:	cf 91       	pop	r28
    3754:	1f 91       	pop	r17
    3756:	0f 91       	pop	r16
    3758:	ff 90       	pop	r15
    375a:	ef 90       	pop	r14
    375c:	df 90       	pop	r13
    375e:	cf 90       	pop	r12
    3760:	bf 90       	pop	r11
    3762:	af 90       	pop	r10
    3764:	9f 90       	pop	r9
    3766:	8f 90       	pop	r8
    3768:	7f 90       	pop	r7
    376a:	6f 90       	pop	r6
    376c:	5f 90       	pop	r5
    376e:	4f 90       	pop	r4
    3770:	08 95       	ret

Disassembly of section .text.calcPrayerHrMin:

000053e6 <calcPrayerHrMin>:

void calcPrayerHrMin(double time,uint8_t* time_min,uint8_t* time_hour)
{
    53e6:	8f 92       	push	r8
    53e8:	9f 92       	push	r9
    53ea:	af 92       	push	r10
    53ec:	bf 92       	push	r11
    53ee:	cf 92       	push	r12
    53f0:	df 92       	push	r13
    53f2:	ef 92       	push	r14
    53f4:	ff 92       	push	r15
    53f6:	0f 93       	push	r16
    53f8:	1f 93       	push	r17
    53fa:	cf 93       	push	r28
    53fc:	df 93       	push	r29
    53fe:	4b 01       	movw	r8, r22
    5400:	5c 01       	movw	r10, r24
    5402:	ea 01       	movw	r28, r20
    5404:	89 01       	movw	r16, r18
	//this function is to save the minute of each prayer time to compare it with the current time from the RTC to turn the BUZZER
	//on at the prayer time.
	uint8_t degree,minuits;
	double degree_frac1;
	degree=(int)time;
    5406:	0e 94 f6 2d 	call	0x5bec	; 0x5bec <__fixsfsi>
    540a:	6b 01       	movw	r12, r22
    540c:	7c 01       	movw	r14, r24
	degree_frac1=time-degree;
    540e:	77 27       	eor	r23, r23
    5410:	07 2e       	mov	r0, r23
    5412:	00 0c       	add	r0, r0
    5414:	88 0b       	sbc	r24, r24
    5416:	99 0b       	sbc	r25, r25
    5418:	0e 94 7c 29 	call	0x52f8	; 0x52f8 <__floatsisf>
    541c:	9b 01       	movw	r18, r22
    541e:	ac 01       	movw	r20, r24
    5420:	c5 01       	movw	r24, r10
    5422:	b4 01       	movw	r22, r8
    5424:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__subsf3>
	degree_frac1=degree_frac1*60;
    5428:	20 e0       	ldi	r18, 0x00	; 0
    542a:	30 e0       	ldi	r19, 0x00	; 0
    542c:	40 e7       	ldi	r20, 0x70	; 112
    542e:	52 e4       	ldi	r21, 0x42	; 66
    5430:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
	minuits=(int)degree_frac1;
    5434:	0e 94 f6 2d 	call	0x5bec	; 0x5bec <__fixsfsi>
	*time_hour=degree;
    5438:	f8 01       	movw	r30, r16
    543a:	c0 82       	st	Z, r12
	*time_min=minuits;
    543c:	68 83       	st	Y, r22
}
    543e:	df 91       	pop	r29
    5440:	cf 91       	pop	r28
    5442:	1f 91       	pop	r17
    5444:	0f 91       	pop	r16
    5446:	ff 90       	pop	r15
    5448:	ef 90       	pop	r14
    544a:	df 90       	pop	r13
    544c:	cf 90       	pop	r12
    544e:	bf 90       	pop	r11
    5450:	af 90       	pop	r10
    5452:	9f 90       	pop	r9
    5454:	8f 90       	pop	r8
    5456:	08 95       	ret

Disassembly of section .text.calAllPrayerTimes:

00003ce6 <calAllPrayerTimes>:

void calAllPrayerTimes(	uint16 year, uint8 month, uint8 day, double longitude, double latitude,
						uint8 *fajrHour, uint8 *fajrMinute, uint8 *sunriseHour, uint8 *sunriseMinute,
						uint8 *dhuhrHour, uint8 *dhuhrMinute, uint8 *asrHour, uint8 *asrMinute,
						uint8 *maghribHour, uint8 *maghribMinute, uint8 *ishaHour, uint8 *ishaMinute){
    3ce6:	2f 92       	push	r2
    3ce8:	3f 92       	push	r3
    3cea:	4f 92       	push	r4
    3cec:	5f 92       	push	r5
    3cee:	6f 92       	push	r6
    3cf0:	7f 92       	push	r7
    3cf2:	8f 92       	push	r8
    3cf4:	9f 92       	push	r9
    3cf6:	af 92       	push	r10
    3cf8:	bf 92       	push	r11
    3cfa:	cf 92       	push	r12
    3cfc:	df 92       	push	r13
    3cfe:	ef 92       	push	r14
    3d00:	ff 92       	push	r15
    3d02:	0f 93       	push	r16
    3d04:	1f 93       	push	r17
    3d06:	cf 93       	push	r28
    3d08:	df 93       	push	r29
    3d0a:	cd b7       	in	r28, 0x3d	; 61
    3d0c:	de b7       	in	r29, 0x3e	; 62
    3d0e:	6a 97       	sbiw	r28, 0x1a	; 26
    3d10:	0f b6       	in	r0, 0x3f	; 63
    3d12:	f8 94       	cli
    3d14:	de bf       	out	0x3e, r29	; 62
    3d16:	0f be       	out	0x3f, r0	; 63
    3d18:	cd bf       	out	0x3d, r28	; 61
    3d1a:	09 87       	std	Y+9, r16	; 0x09
    3d1c:	1a 87       	std	Y+10, r17	; 0x0a
    3d1e:	2b 87       	std	Y+11, r18	; 0x0b
    3d20:	3c 87       	std	Y+12, r19	; 0x0c
    3d22:	26 01       	movw	r4, r12
    3d24:	37 01       	movw	r6, r14
    3d26:	15 01       	movw	r2, r10
    3d28:	9a 8e       	std	Y+26, r9	; 0x1a
    3d2a:	89 8e       	std	Y+25, r8	; 0x19
	double fajr, zuhr, asr, maghrib, isha, sunrise;
	double JD,EqTmin,dec_ang;
	
	JD=calcJulianData(year,month,day);
    3d2c:	0e 94 8c 24 	call	0x4918	; 0x4918 <calcJulianData>
	calcTimeDec(JD,&EqTmin,&dec_ang);
    3d30:	9e 01       	movw	r18, r28
    3d32:	2b 5f       	subi	r18, 0xFB	; 251
    3d34:	3f 4f       	sbci	r19, 0xFF	; 255
    3d36:	ae 01       	movw	r20, r28
    3d38:	4f 5f       	subi	r20, 0xFF	; 255
    3d3a:	5f 4f       	sbci	r21, 0xFF	; 255
    3d3c:	0e 94 94 15 	call	0x2b28	; 0x2b28 <calcTimeDec>
	zuhr=calcDuhurTime(EqTmin,4,longitude);
    3d40:	69 81       	ldd	r22, Y+1	; 0x01
    3d42:	7a 81       	ldd	r23, Y+2	; 0x02
    3d44:	8b 81       	ldd	r24, Y+3	; 0x03
    3d46:	9c 81       	ldd	r25, Y+4	; 0x04
    3d48:	09 85       	ldd	r16, Y+9	; 0x09
    3d4a:	1a 85       	ldd	r17, Y+10	; 0x0a
    3d4c:	2b 85       	ldd	r18, Y+11	; 0x0b
    3d4e:	3c 85       	ldd	r19, Y+12	; 0x0c
    3d50:	44 e0       	ldi	r20, 0x04	; 4
    3d52:	0e 94 64 2a 	call	0x54c8	; 0x54c8 <calcDuhurTime>
    3d56:	4b 01       	movw	r8, r22
    3d58:	5c 01       	movw	r10, r24
	asr=calcAsrTime(zuhr,latitude,dec_ang);
    3d5a:	ed 80       	ldd	r14, Y+5	; 0x05
    3d5c:	fe 80       	ldd	r15, Y+6	; 0x06
    3d5e:	0f 81       	ldd	r16, Y+7	; 0x07
    3d60:	18 85       	ldd	r17, Y+8	; 0x08
    3d62:	a3 01       	movw	r20, r6
    3d64:	92 01       	movw	r18, r4
    3d66:	0e 94 dd 20 	call	0x41ba	; 0x41ba <calcAsrTime>
    3d6a:	69 87       	std	Y+9, r22	; 0x09
    3d6c:	7a 87       	std	Y+10, r23	; 0x0a
    3d6e:	8b 87       	std	Y+11, r24	; 0x0b
    3d70:	9c 87       	std	Y+12, r25	; 0x0c
	maghrib=calcRemainingPrayerTimes(MAGHRIB,latitude,dec_ang,zuhr);
    3d72:	0d 81       	ldd	r16, Y+5	; 0x05
    3d74:	1e 81       	ldd	r17, Y+6	; 0x06
    3d76:	2f 81       	ldd	r18, Y+7	; 0x07
    3d78:	38 85       	ldd	r19, Y+8	; 0x08
    3d7a:	75 01       	movw	r14, r10
    3d7c:	64 01       	movw	r12, r8
    3d7e:	b3 01       	movw	r22, r6
    3d80:	a2 01       	movw	r20, r4
    3d82:	80 e0       	ldi	r24, 0x00	; 0
    3d84:	0e 94 c5 1a 	call	0x358a	; 0x358a <calcRemainingPrayerTimes>
    3d88:	6d 87       	std	Y+13, r22	; 0x0d
    3d8a:	7e 87       	std	Y+14, r23	; 0x0e
    3d8c:	8f 87       	std	Y+15, r24	; 0x0f
    3d8e:	98 8b       	std	Y+16, r25	; 0x10
	isha=calcRemainingPrayerTimes(ISHA,latitude,dec_ang,zuhr);
    3d90:	0d 81       	ldd	r16, Y+5	; 0x05
    3d92:	1e 81       	ldd	r17, Y+6	; 0x06
    3d94:	2f 81       	ldd	r18, Y+7	; 0x07
    3d96:	38 85       	ldd	r19, Y+8	; 0x08
    3d98:	b3 01       	movw	r22, r6
    3d9a:	a2 01       	movw	r20, r4
    3d9c:	81 e0       	ldi	r24, 0x01	; 1
    3d9e:	0e 94 c5 1a 	call	0x358a	; 0x358a <calcRemainingPrayerTimes>
    3da2:	69 8b       	std	Y+17, r22	; 0x11
    3da4:	7a 8b       	std	Y+18, r23	; 0x12
    3da6:	8b 8b       	std	Y+19, r24	; 0x13
    3da8:	9c 8b       	std	Y+20, r25	; 0x14
	fajr=calcRemainingPrayerTimes(FAJR,latitude,dec_ang,zuhr);
    3daa:	0d 81       	ldd	r16, Y+5	; 0x05
    3dac:	1e 81       	ldd	r17, Y+6	; 0x06
    3dae:	2f 81       	ldd	r18, Y+7	; 0x07
    3db0:	38 85       	ldd	r19, Y+8	; 0x08
    3db2:	b3 01       	movw	r22, r6
    3db4:	a2 01       	movw	r20, r4
    3db6:	82 e0       	ldi	r24, 0x02	; 2
    3db8:	0e 94 c5 1a 	call	0x358a	; 0x358a <calcRemainingPrayerTimes>
    3dbc:	6d 8b       	std	Y+21, r22	; 0x15
    3dbe:	7e 8b       	std	Y+22, r23	; 0x16
    3dc0:	8f 8b       	std	Y+23, r24	; 0x17
    3dc2:	98 8f       	std	Y+24, r25	; 0x18
	sunrise=calcRemainingPrayerTimes(SUNRISE,latitude,dec_ang,zuhr);
    3dc4:	0d 81       	ldd	r16, Y+5	; 0x05
    3dc6:	1e 81       	ldd	r17, Y+6	; 0x06
    3dc8:	2f 81       	ldd	r18, Y+7	; 0x07
    3dca:	38 85       	ldd	r19, Y+8	; 0x08
    3dcc:	b3 01       	movw	r22, r6
    3dce:	a2 01       	movw	r20, r4
    3dd0:	83 e0       	ldi	r24, 0x03	; 3
    3dd2:	0e 94 c5 1a 	call	0x358a	; 0x358a <calcRemainingPrayerTimes>
    3dd6:	6b 01       	movw	r12, r22
    3dd8:	7c 01       	movw	r14, r24
	calcPrayerHrMin(zuhr,dhuhrMinute,dhuhrHour);
    3dda:	2b a9       	ldd	r18, Y+51	; 0x33
    3ddc:	3c a9       	ldd	r19, Y+52	; 0x34
    3dde:	4d a9       	ldd	r20, Y+53	; 0x35
    3de0:	5e a9       	ldd	r21, Y+54	; 0x36
    3de2:	c5 01       	movw	r24, r10
    3de4:	b4 01       	movw	r22, r8
    3de6:	0e 94 f3 29 	call	0x53e6	; 0x53e6 <calcPrayerHrMin>
	calcPrayerHrMin(asr,asrMinute,asrHour);
    3dea:	2f a9       	ldd	r18, Y+55	; 0x37
    3dec:	38 ad       	ldd	r19, Y+56	; 0x38
    3dee:	49 ad       	ldd	r20, Y+57	; 0x39
    3df0:	5a ad       	ldd	r21, Y+58	; 0x3a
    3df2:	69 85       	ldd	r22, Y+9	; 0x09
    3df4:	7a 85       	ldd	r23, Y+10	; 0x0a
    3df6:	8b 85       	ldd	r24, Y+11	; 0x0b
    3df8:	9c 85       	ldd	r25, Y+12	; 0x0c
    3dfa:	0e 94 f3 29 	call	0x53e6	; 0x53e6 <calcPrayerHrMin>
	calcPrayerHrMin(maghrib,maghribMinute,maghribHour);
    3dfe:	2b ad       	ldd	r18, Y+59	; 0x3b
    3e00:	3c ad       	ldd	r19, Y+60	; 0x3c
    3e02:	4d ad       	ldd	r20, Y+61	; 0x3d
    3e04:	5e ad       	ldd	r21, Y+62	; 0x3e
    3e06:	6d 85       	ldd	r22, Y+13	; 0x0d
    3e08:	7e 85       	ldd	r23, Y+14	; 0x0e
    3e0a:	8f 85       	ldd	r24, Y+15	; 0x0f
    3e0c:	98 89       	ldd	r25, Y+16	; 0x10
    3e0e:	0e 94 f3 29 	call	0x53e6	; 0x53e6 <calcPrayerHrMin>
	calcPrayerHrMin(isha,ishaMinute,ishaHour);
    3e12:	21 96       	adiw	r28, 0x01	; 1
    3e14:	2e ad       	ldd	r18, Y+62	; 0x3e
    3e16:	3f ad       	ldd	r19, Y+63	; 0x3f
    3e18:	21 97       	sbiw	r28, 0x01	; 1
    3e1a:	23 96       	adiw	r28, 0x03	; 3
    3e1c:	4e ad       	ldd	r20, Y+62	; 0x3e
    3e1e:	5f ad       	ldd	r21, Y+63	; 0x3f
    3e20:	23 97       	sbiw	r28, 0x03	; 3
    3e22:	69 89       	ldd	r22, Y+17	; 0x11
    3e24:	7a 89       	ldd	r23, Y+18	; 0x12
    3e26:	8b 89       	ldd	r24, Y+19	; 0x13
    3e28:	9c 89       	ldd	r25, Y+20	; 0x14
    3e2a:	0e 94 f3 29 	call	0x53e6	; 0x53e6 <calcPrayerHrMin>
	calcPrayerHrMin(fajr,fajrMinute,fajrHour);
    3e2e:	91 01       	movw	r18, r2
    3e30:	49 8d       	ldd	r20, Y+25	; 0x19
    3e32:	5a 8d       	ldd	r21, Y+26	; 0x1a
    3e34:	6d 89       	ldd	r22, Y+21	; 0x15
    3e36:	7e 89       	ldd	r23, Y+22	; 0x16
    3e38:	8f 89       	ldd	r24, Y+23	; 0x17
    3e3a:	98 8d       	ldd	r25, Y+24	; 0x18
    3e3c:	0e 94 f3 29 	call	0x53e6	; 0x53e6 <calcPrayerHrMin>
	calcPrayerHrMin(sunrise,sunriseMinute,sunriseHour);
    3e40:	2f a5       	ldd	r18, Y+47	; 0x2f
    3e42:	38 a9       	ldd	r19, Y+48	; 0x30
    3e44:	49 a9       	ldd	r20, Y+49	; 0x31
    3e46:	5a a9       	ldd	r21, Y+50	; 0x32
    3e48:	c7 01       	movw	r24, r14
    3e4a:	b6 01       	movw	r22, r12
    3e4c:	0e 94 f3 29 	call	0x53e6	; 0x53e6 <calcPrayerHrMin>
	
}
    3e50:	6a 96       	adiw	r28, 0x1a	; 26
    3e52:	0f b6       	in	r0, 0x3f	; 63
    3e54:	f8 94       	cli
    3e56:	de bf       	out	0x3e, r29	; 62
    3e58:	0f be       	out	0x3f, r0	; 63
    3e5a:	cd bf       	out	0x3d, r28	; 61
    3e5c:	df 91       	pop	r29
    3e5e:	cf 91       	pop	r28
    3e60:	1f 91       	pop	r17
    3e62:	0f 91       	pop	r16
    3e64:	ff 90       	pop	r15
    3e66:	ef 90       	pop	r14
    3e68:	df 90       	pop	r13
    3e6a:	cf 90       	pop	r12
    3e6c:	bf 90       	pop	r11
    3e6e:	af 90       	pop	r10
    3e70:	9f 90       	pop	r9
    3e72:	8f 90       	pop	r8
    3e74:	7f 90       	pop	r7
    3e76:	6f 90       	pop	r6
    3e78:	5f 90       	pop	r5
    3e7a:	4f 90       	pop	r4
    3e7c:	3f 90       	pop	r3
    3e7e:	2f 90       	pop	r2
    3e80:	08 95       	ret

Disassembly of section .text.checkIqamahAlert:

000031aa <checkIqamahAlert>:

/* Check for iqamah alert */
uint8 checkIqamahAlert(	uint8 hour, uint8 minute, uint8 fajr_hour, uint8 fajr_min,
uint8 dhuhr_hour, uint8 dhuhr_min, uint8 asr_hour, uint8 asr_min,
uint8 maghrib_hour, uint8 maghrib_min, uint8 isha_hour, uint8 isha_min)
{
    31aa:	8f 92       	push	r8
    31ac:	af 92       	push	r10
    31ae:	cf 92       	push	r12
    31b0:	ef 92       	push	r14
    31b2:	ff 92       	push	r15
    31b4:	0f 93       	push	r16
    31b6:	cf 93       	push	r28
    31b8:	df 93       	push	r29
    31ba:	cd b7       	in	r28, 0x3d	; 61
    31bc:	de b7       	in	r29, 0x3e	; 62
	uint8 temporaryHour, iqamahFlag;
	if(minute > 49){
    31be:	62 33       	cpi	r22, 0x32	; 50
    31c0:	08 f4       	brcc	.+2      	; 0x31c4 <checkIqamahAlert+0x1a>
    31c2:	40 c0       	rjmp	.+128    	; 0x3244 <checkIqamahAlert+0x9a>
		if(hour == 23){
    31c4:	87 31       	cpi	r24, 0x17	; 23
    31c6:	09 f4       	brne	.+2      	; 0x31ca <checkIqamahAlert+0x20>
			temporaryHour = 0;
    31c8:	80 e0       	ldi	r24, 0x00	; 0
		}
		else{
			temporaryHour = hour++;
		}
		
		if( ( (temporaryHour == fajr_hour) && (minute == (fajr_min-45)) ) ||
    31ca:	84 13       	cpse	r24, r20
    31cc:	09 c0       	rjmp	.+18     	; 0x31e0 <checkIqamahAlert+0x36>
    31ce:	46 2f       	mov	r20, r22
    31d0:	50 e0       	ldi	r21, 0x00	; 0
    31d2:	30 e0       	ldi	r19, 0x00	; 0
    31d4:	2d 52       	subi	r18, 0x2D	; 45
    31d6:	31 09       	sbc	r19, r1
    31d8:	42 17       	cp	r20, r18
    31da:	53 07       	cpc	r21, r19
    31dc:	09 f4       	brne	.+2      	; 0x31e0 <checkIqamahAlert+0x36>
    31de:	b4 c0       	rjmp	.+360    	; 0x3348 <checkIqamahAlert+0x19e>
    31e0:	80 13       	cpse	r24, r16
    31e2:	0a c0       	rjmp	.+20     	; 0x31f8 <checkIqamahAlert+0x4e>
		( (temporaryHour == dhuhr_hour) && (minute == (dhuhr_min-45)) ) ||
    31e4:	26 2f       	mov	r18, r22
    31e6:	30 e0       	ldi	r19, 0x00	; 0
    31e8:	f1 2c       	mov	r15, r1
    31ea:	4d e2       	ldi	r20, 0x2D	; 45
    31ec:	e4 1a       	sub	r14, r20
    31ee:	f1 08       	sbc	r15, r1
    31f0:	2e 15       	cp	r18, r14
    31f2:	3f 05       	cpc	r19, r15
    31f4:	09 f4       	brne	.+2      	; 0x31f8 <checkIqamahAlert+0x4e>
    31f6:	aa c0       	rjmp	.+340    	; 0x334c <checkIqamahAlert+0x1a2>
    31f8:	8c 11       	cpse	r24, r12
    31fa:	0a c0       	rjmp	.+20     	; 0x3210 <checkIqamahAlert+0x66>
		( (temporaryHour == asr_hour) && (minute == (asr_min-45)) ) ||
    31fc:	46 2f       	mov	r20, r22
    31fe:	50 e0       	ldi	r21, 0x00	; 0
    3200:	2a 2d       	mov	r18, r10
    3202:	30 e0       	ldi	r19, 0x00	; 0
    3204:	2d 52       	subi	r18, 0x2D	; 45
    3206:	31 09       	sbc	r19, r1
    3208:	42 17       	cp	r20, r18
    320a:	53 07       	cpc	r21, r19
    320c:	09 f4       	brne	.+2      	; 0x3210 <checkIqamahAlert+0x66>
    320e:	a0 c0       	rjmp	.+320    	; 0x3350 <checkIqamahAlert+0x1a6>
    3210:	8c 11       	cpse	r24, r12
    3212:	0a c0       	rjmp	.+20     	; 0x3228 <checkIqamahAlert+0x7e>
		( (temporaryHour == asr_hour) && (minute == (asr_min-50)) ) ||
    3214:	46 2f       	mov	r20, r22
    3216:	50 e0       	ldi	r21, 0x00	; 0
    3218:	2a 2d       	mov	r18, r10
    321a:	30 e0       	ldi	r19, 0x00	; 0
    321c:	22 53       	subi	r18, 0x32	; 50
    321e:	31 09       	sbc	r19, r1
    3220:	42 17       	cp	r20, r18
    3222:	53 07       	cpc	r21, r19
    3224:	09 f4       	brne	.+2      	; 0x3228 <checkIqamahAlert+0x7e>
    3226:	96 c0       	rjmp	.+300    	; 0x3354 <checkIqamahAlert+0x1aa>
    3228:	9c 85       	ldd	r25, Y+12	; 0x0c
    322a:	89 13       	cpse	r24, r25
    322c:	95 c0       	rjmp	.+298    	; 0x3358 <checkIqamahAlert+0x1ae>
		( (temporaryHour == isha_hour) && (minute == (isha_min-45)) ) )
    322e:	70 e0       	ldi	r23, 0x00	; 0
    3230:	2d 85       	ldd	r18, Y+13	; 0x0d
    3232:	82 2f       	mov	r24, r18
    3234:	90 e0       	ldi	r25, 0x00	; 0
    3236:	8d 97       	sbiw	r24, 0x2d	; 45
    3238:	68 17       	cp	r22, r24
    323a:	79 07       	cpc	r23, r25
    323c:	09 f4       	brne	.+2      	; 0x3240 <checkIqamahAlert+0x96>
    323e:	8e c0       	rjmp	.+284    	; 0x335c <checkIqamahAlert+0x1b2>
		{
			iqamahFlag = 1;
		}
		else
		{
			iqamahFlag = 0;
    3240:	80 e0       	ldi	r24, 0x00	; 0
    3242:	a5 c0       	rjmp	.+330    	; 0x338e <checkIqamahAlert+0x1e4>
		}
		
	}
	
	else if (minute > 44){
    3244:	6d 32       	cpi	r22, 0x2D	; 45
    3246:	08 f4       	brcc	.+2      	; 0x324a <checkIqamahAlert+0xa0>
    3248:	45 c0       	rjmp	.+138    	; 0x32d4 <checkIqamahAlert+0x12a>
		
		if(hour == 23){
    324a:	87 31       	cpi	r24, 0x17	; 23
    324c:	19 f0       	breq	.+6      	; 0x3254 <checkIqamahAlert+0xaa>
			temporaryHour = 0;
		}
		else{
			temporaryHour = hour++;
    324e:	91 e0       	ldi	r25, 0x01	; 1
    3250:	98 0f       	add	r25, r24
    3252:	02 c0       	rjmp	.+4      	; 0x3258 <checkIqamahAlert+0xae>
    3254:	98 2f       	mov	r25, r24
	}
	
	else if (minute > 44){
		
		if(hour == 23){
			temporaryHour = 0;
    3256:	80 e0       	ldi	r24, 0x00	; 0
		}
		else{
			temporaryHour = hour++;
		}
		
		if( ( (temporaryHour == fajr_hour) && (minute == (fajr_min-45)) ) ||
    3258:	84 13       	cpse	r24, r20
    325a:	09 c0       	rjmp	.+18     	; 0x326e <checkIqamahAlert+0xc4>
    325c:	46 2f       	mov	r20, r22
    325e:	50 e0       	ldi	r21, 0x00	; 0
    3260:	30 e0       	ldi	r19, 0x00	; 0
    3262:	2d 52       	subi	r18, 0x2D	; 45
    3264:	31 09       	sbc	r19, r1
    3266:	42 17       	cp	r20, r18
    3268:	53 07       	cpc	r21, r19
    326a:	09 f4       	brne	.+2      	; 0x326e <checkIqamahAlert+0xc4>
    326c:	79 c0       	rjmp	.+242    	; 0x3360 <checkIqamahAlert+0x1b6>
    326e:	80 13       	cpse	r24, r16
    3270:	0a c0       	rjmp	.+20     	; 0x3286 <checkIqamahAlert+0xdc>
		( (temporaryHour == dhuhr_hour) && (minute == (dhuhr_min-45)) ) ||
    3272:	26 2f       	mov	r18, r22
    3274:	30 e0       	ldi	r19, 0x00	; 0
    3276:	f1 2c       	mov	r15, r1
    3278:	4d e2       	ldi	r20, 0x2D	; 45
    327a:	e4 1a       	sub	r14, r20
    327c:	f1 08       	sbc	r15, r1
    327e:	2e 15       	cp	r18, r14
    3280:	3f 05       	cpc	r19, r15
    3282:	09 f4       	brne	.+2      	; 0x3286 <checkIqamahAlert+0xdc>
    3284:	6f c0       	rjmp	.+222    	; 0x3364 <checkIqamahAlert+0x1ba>
    3286:	8c 11       	cpse	r24, r12
    3288:	0a c0       	rjmp	.+20     	; 0x329e <checkIqamahAlert+0xf4>
		( (temporaryHour == asr_hour) && (minute == (asr_min-45)) ) ||
    328a:	46 2f       	mov	r20, r22
    328c:	50 e0       	ldi	r21, 0x00	; 0
    328e:	2a 2d       	mov	r18, r10
    3290:	30 e0       	ldi	r19, 0x00	; 0
    3292:	2d 52       	subi	r18, 0x2D	; 45
    3294:	31 09       	sbc	r19, r1
    3296:	42 17       	cp	r20, r18
    3298:	53 07       	cpc	r21, r19
    329a:	09 f4       	brne	.+2      	; 0x329e <checkIqamahAlert+0xf4>
    329c:	65 c0       	rjmp	.+202    	; 0x3368 <checkIqamahAlert+0x1be>
    329e:	98 11       	cpse	r25, r8
    32a0:	0b c0       	rjmp	.+22     	; 0x32b8 <checkIqamahAlert+0x10e>
		( (hour == maghrib_hour) && (minute == (maghrib_min+10)) ) ||
    32a2:	46 2f       	mov	r20, r22
    32a4:	50 e0       	ldi	r21, 0x00	; 0
    32a6:	9b 85       	ldd	r25, Y+11	; 0x0b
    32a8:	29 2f       	mov	r18, r25
    32aa:	30 e0       	ldi	r19, 0x00	; 0
    32ac:	26 5f       	subi	r18, 0xF6	; 246
    32ae:	3f 4f       	sbci	r19, 0xFF	; 255
    32b0:	42 17       	cp	r20, r18
    32b2:	53 07       	cpc	r21, r19
    32b4:	09 f4       	brne	.+2      	; 0x32b8 <checkIqamahAlert+0x10e>
    32b6:	5a c0       	rjmp	.+180    	; 0x336c <checkIqamahAlert+0x1c2>
    32b8:	2c 85       	ldd	r18, Y+12	; 0x0c
    32ba:	82 13       	cpse	r24, r18
    32bc:	59 c0       	rjmp	.+178    	; 0x3370 <checkIqamahAlert+0x1c6>
		( (temporaryHour == isha_hour) && (minute == (isha_min-45)) ) )
    32be:	70 e0       	ldi	r23, 0x00	; 0
    32c0:	4d 85       	ldd	r20, Y+13	; 0x0d
    32c2:	84 2f       	mov	r24, r20
    32c4:	90 e0       	ldi	r25, 0x00	; 0
    32c6:	8d 97       	sbiw	r24, 0x2d	; 45
    32c8:	68 17       	cp	r22, r24
    32ca:	79 07       	cpc	r23, r25
    32cc:	09 f4       	brne	.+2      	; 0x32d0 <checkIqamahAlert+0x126>
    32ce:	52 c0       	rjmp	.+164    	; 0x3374 <checkIqamahAlert+0x1ca>
		{
			iqamahFlag = 1;
		}
		else
		{
			iqamahFlag = 0;
    32d0:	80 e0       	ldi	r24, 0x00	; 0
    32d2:	5d c0       	rjmp	.+186    	; 0x338e <checkIqamahAlert+0x1e4>
		}
	}
	
	else{
		
		if( ( (hour == fajr_hour) && (minute == (fajr_min+15)) ) ||
    32d4:	84 13       	cpse	r24, r20
    32d6:	09 c0       	rjmp	.+18     	; 0x32ea <checkIqamahAlert+0x140>
    32d8:	46 2f       	mov	r20, r22
    32da:	50 e0       	ldi	r21, 0x00	; 0
    32dc:	30 e0       	ldi	r19, 0x00	; 0
    32de:	21 5f       	subi	r18, 0xF1	; 241
    32e0:	3f 4f       	sbci	r19, 0xFF	; 255
    32e2:	42 17       	cp	r20, r18
    32e4:	53 07       	cpc	r21, r19
    32e6:	09 f4       	brne	.+2      	; 0x32ea <checkIqamahAlert+0x140>
    32e8:	47 c0       	rjmp	.+142    	; 0x3378 <checkIqamahAlert+0x1ce>
    32ea:	80 13       	cpse	r24, r16
    32ec:	09 c0       	rjmp	.+18     	; 0x3300 <checkIqamahAlert+0x156>
		( (hour == dhuhr_hour) && (minute == (dhuhr_min+15)) ) ||
    32ee:	26 2f       	mov	r18, r22
    32f0:	30 e0       	ldi	r19, 0x00	; 0
    32f2:	f1 2c       	mov	r15, r1
    32f4:	9f e0       	ldi	r25, 0x0F	; 15
    32f6:	e9 0e       	add	r14, r25
    32f8:	f1 1c       	adc	r15, r1
    32fa:	2e 15       	cp	r18, r14
    32fc:	3f 05       	cpc	r19, r15
    32fe:	f1 f1       	breq	.+124    	; 0x337c <checkIqamahAlert+0x1d2>
    3300:	8c 11       	cpse	r24, r12
    3302:	09 c0       	rjmp	.+18     	; 0x3316 <checkIqamahAlert+0x16c>
		( (hour == asr_hour) && (minute == (asr_min+15)) ) ||
    3304:	46 2f       	mov	r20, r22
    3306:	50 e0       	ldi	r21, 0x00	; 0
    3308:	2a 2d       	mov	r18, r10
    330a:	30 e0       	ldi	r19, 0x00	; 0
    330c:	21 5f       	subi	r18, 0xF1	; 241
    330e:	3f 4f       	sbci	r19, 0xFF	; 255
    3310:	42 17       	cp	r20, r18
    3312:	53 07       	cpc	r21, r19
    3314:	a9 f1       	breq	.+106    	; 0x3380 <checkIqamahAlert+0x1d6>
    3316:	88 11       	cpse	r24, r8
    3318:	0a c0       	rjmp	.+20     	; 0x332e <checkIqamahAlert+0x184>
		( (hour == maghrib_hour) && (minute == (maghrib_min+10)) ) ||
    331a:	46 2f       	mov	r20, r22
    331c:	50 e0       	ldi	r21, 0x00	; 0
    331e:	9b 85       	ldd	r25, Y+11	; 0x0b
    3320:	29 2f       	mov	r18, r25
    3322:	30 e0       	ldi	r19, 0x00	; 0
    3324:	26 5f       	subi	r18, 0xF6	; 246
    3326:	3f 4f       	sbci	r19, 0xFF	; 255
    3328:	42 17       	cp	r20, r18
    332a:	53 07       	cpc	r21, r19
    332c:	59 f1       	breq	.+86     	; 0x3384 <checkIqamahAlert+0x1da>
    332e:	2c 85       	ldd	r18, Y+12	; 0x0c
    3330:	82 13       	cpse	r24, r18
    3332:	2a c0       	rjmp	.+84     	; 0x3388 <checkIqamahAlert+0x1de>
		( (hour == isha_hour) && (minute == (isha_min+15)) ) )
    3334:	70 e0       	ldi	r23, 0x00	; 0
    3336:	4d 85       	ldd	r20, Y+13	; 0x0d
    3338:	84 2f       	mov	r24, r20
    333a:	90 e0       	ldi	r25, 0x00	; 0
    333c:	0f 96       	adiw	r24, 0x0f	; 15
    333e:	68 17       	cp	r22, r24
    3340:	79 07       	cpc	r23, r25
    3342:	21 f1       	breq	.+72     	; 0x338c <checkIqamahAlert+0x1e2>
		{
			iqamahFlag = 1;
		}
		else
		{
			iqamahFlag = 0;
    3344:	80 e0       	ldi	r24, 0x00	; 0
    3346:	23 c0       	rjmp	.+70     	; 0x338e <checkIqamahAlert+0x1e4>
		( (temporaryHour == dhuhr_hour) && (minute == (dhuhr_min-45)) ) ||
		( (temporaryHour == asr_hour) && (minute == (asr_min-45)) ) ||
		( (temporaryHour == asr_hour) && (minute == (asr_min-50)) ) ||
		( (temporaryHour == isha_hour) && (minute == (isha_min-45)) ) )
		{
			iqamahFlag = 1;
    3348:	81 e0       	ldi	r24, 0x01	; 1
    334a:	21 c0       	rjmp	.+66     	; 0x338e <checkIqamahAlert+0x1e4>
    334c:	81 e0       	ldi	r24, 0x01	; 1
    334e:	1f c0       	rjmp	.+62     	; 0x338e <checkIqamahAlert+0x1e4>
    3350:	81 e0       	ldi	r24, 0x01	; 1
    3352:	1d c0       	rjmp	.+58     	; 0x338e <checkIqamahAlert+0x1e4>
    3354:	81 e0       	ldi	r24, 0x01	; 1
    3356:	1b c0       	rjmp	.+54     	; 0x338e <checkIqamahAlert+0x1e4>
		}
		else
		{
			iqamahFlag = 0;
    3358:	80 e0       	ldi	r24, 0x00	; 0
    335a:	19 c0       	rjmp	.+50     	; 0x338e <checkIqamahAlert+0x1e4>
		( (temporaryHour == dhuhr_hour) && (minute == (dhuhr_min-45)) ) ||
		( (temporaryHour == asr_hour) && (minute == (asr_min-45)) ) ||
		( (temporaryHour == asr_hour) && (minute == (asr_min-50)) ) ||
		( (temporaryHour == isha_hour) && (minute == (isha_min-45)) ) )
		{
			iqamahFlag = 1;
    335c:	81 e0       	ldi	r24, 0x01	; 1
    335e:	17 c0       	rjmp	.+46     	; 0x338e <checkIqamahAlert+0x1e4>
		( (temporaryHour == dhuhr_hour) && (minute == (dhuhr_min-45)) ) ||
		( (temporaryHour == asr_hour) && (minute == (asr_min-45)) ) ||
		( (hour == maghrib_hour) && (minute == (maghrib_min+10)) ) ||
		( (temporaryHour == isha_hour) && (minute == (isha_min-45)) ) )
		{
			iqamahFlag = 1;
    3360:	81 e0       	ldi	r24, 0x01	; 1
    3362:	15 c0       	rjmp	.+42     	; 0x338e <checkIqamahAlert+0x1e4>
    3364:	81 e0       	ldi	r24, 0x01	; 1
    3366:	13 c0       	rjmp	.+38     	; 0x338e <checkIqamahAlert+0x1e4>
    3368:	81 e0       	ldi	r24, 0x01	; 1
    336a:	11 c0       	rjmp	.+34     	; 0x338e <checkIqamahAlert+0x1e4>
    336c:	81 e0       	ldi	r24, 0x01	; 1
    336e:	0f c0       	rjmp	.+30     	; 0x338e <checkIqamahAlert+0x1e4>
		}
		else
		{
			iqamahFlag = 0;
    3370:	80 e0       	ldi	r24, 0x00	; 0
    3372:	0d c0       	rjmp	.+26     	; 0x338e <checkIqamahAlert+0x1e4>
		( (temporaryHour == dhuhr_hour) && (minute == (dhuhr_min-45)) ) ||
		( (temporaryHour == asr_hour) && (minute == (asr_min-45)) ) ||
		( (hour == maghrib_hour) && (minute == (maghrib_min+10)) ) ||
		( (temporaryHour == isha_hour) && (minute == (isha_min-45)) ) )
		{
			iqamahFlag = 1;
    3374:	81 e0       	ldi	r24, 0x01	; 1
    3376:	0b c0       	rjmp	.+22     	; 0x338e <checkIqamahAlert+0x1e4>
		( (hour == dhuhr_hour) && (minute == (dhuhr_min+15)) ) ||
		( (hour == asr_hour) && (minute == (asr_min+15)) ) ||
		( (hour == maghrib_hour) && (minute == (maghrib_min+10)) ) ||
		( (hour == isha_hour) && (minute == (isha_min+15)) ) )
		{
			iqamahFlag = 1;
    3378:	81 e0       	ldi	r24, 0x01	; 1
    337a:	09 c0       	rjmp	.+18     	; 0x338e <checkIqamahAlert+0x1e4>
    337c:	81 e0       	ldi	r24, 0x01	; 1
    337e:	07 c0       	rjmp	.+14     	; 0x338e <checkIqamahAlert+0x1e4>
    3380:	81 e0       	ldi	r24, 0x01	; 1
    3382:	05 c0       	rjmp	.+10     	; 0x338e <checkIqamahAlert+0x1e4>
    3384:	81 e0       	ldi	r24, 0x01	; 1
    3386:	03 c0       	rjmp	.+6      	; 0x338e <checkIqamahAlert+0x1e4>
		}
		else
		{
			iqamahFlag = 0;
    3388:	80 e0       	ldi	r24, 0x00	; 0
    338a:	01 c0       	rjmp	.+2      	; 0x338e <checkIqamahAlert+0x1e4>
		( (hour == dhuhr_hour) && (minute == (dhuhr_min+15)) ) ||
		( (hour == asr_hour) && (minute == (asr_min+15)) ) ||
		( (hour == maghrib_hour) && (minute == (maghrib_min+10)) ) ||
		( (hour == isha_hour) && (minute == (isha_min+15)) ) )
		{
			iqamahFlag = 1;
    338c:	81 e0       	ldi	r24, 0x01	; 1
			iqamahFlag = 0;
		}
		
	}
	return iqamahFlag;
    338e:	df 91       	pop	r29
    3390:	cf 91       	pop	r28
    3392:	0f 91       	pop	r16
    3394:	ff 90       	pop	r15
    3396:	ef 90       	pop	r14
    3398:	cf 90       	pop	r12
    339a:	af 90       	pop	r10
    339c:	8f 90       	pop	r8
    339e:	08 95       	ret

Disassembly of section .text.main:

0000166c <main>:
#include "LIB/storeLatLong.h"

#include <avr/eeprom.h>


int main(void){
    166c:	cf 93       	push	r28
    166e:	df 93       	push	r29
    1670:	cd b7       	in	r28, 0x3d	; 61
    1672:	de b7       	in	r29, 0x3e	; 62
    1674:	a5 97       	sbiw	r28, 0x25	; 37
    1676:	0f b6       	in	r0, 0x3f	; 63
    1678:	f8 94       	cli
    167a:	de bf       	out	0x3e, r29	; 62
    167c:	0f be       	out	0x3f, r0	; 63
    167e:	cd bf       	out	0x3d, r28	; 61
	
	/* Variable Declarations */
	uint8 second, oldSecond=0, minute, oldMinute=0, hour, oldHour=0, weekDay, day,month;
	uint8 dhuhr_min=0, asr_min=0, maghrib_min=0, isha_min=0, fajr_min=0, sunrise_min=0;
    1680:	1f 82       	std	Y+7, r1	; 0x07
    1682:	18 86       	std	Y+8, r1	; 0x08
    1684:	19 86       	std	Y+9, r1	; 0x09
    1686:	1a 86       	std	Y+10, r1	; 0x0a
    1688:	1b 86       	std	Y+11, r1	; 0x0b
    168a:	1c 86       	std	Y+12, r1	; 0x0c
	uint8 dhuhr_hour=0, asr_hour=0, maghrib_hour=0, isha_hour=0, fajr_hour=0, sunrise_hour=0;
    168c:	1d 86       	std	Y+13, r1	; 0x0d
    168e:	1e 86       	std	Y+14, r1	; 0x0e
    1690:	1f 86       	std	Y+15, r1	; 0x0f
    1692:	18 8a       	std	Y+16, r1	; 0x10
    1694:	19 8a       	std	Y+17, r1	; 0x11
    1696:	1a 8a       	std	Y+18, r1	; 0x12
	uint8 temperature=0, cityCode = 0, selectedDigit = 0, iqamahFlag = 0, settingsFlag = 0;
    1698:	1b 8a       	std	Y+19, r1	; 0x13
	uint8 fajrFlag=1, sunriseFlag=1, dhuhrFlag=1, asrFlag=1, maghribFlag=1,ishaFlag=1;
	uint8 buttonsState;
	uint16 latAddress = 0, longAddress = 0, year = 0;
    169a:	1d 8a       	std	Y+21, r1	; 0x15
    169c:	1c 8a       	std	Y+20, r1	; 0x14
	double latitude, longitude;
	
	/* ADC Configuration */
	ADC_ConfigType  ADC_MyConfig = {Ext_AVCC , PRESCALER_128};
    169e:	81 e0       	ldi	r24, 0x01	; 1
    16a0:	8e 8b       	std	Y+22, r24	; 0x16
    16a2:	87 e0       	ldi	r24, 0x07	; 7
    16a4:	8f 8b       	std	Y+23, r24	; 0x17
	
	/* Modules Initialization */
	ADC_init(&ADC_MyConfig);
    16a6:	be 01       	movw	r22, r28
    16a8:	6a 5e       	subi	r22, 0xEA	; 234
    16aa:	7f 4f       	sbci	r23, 0xFF	; 255
    16ac:	80 e8       	ldi	r24, 0x80	; 128
    16ae:	0e 94 b7 29 	call	0x536e	; 0x536e <ADC_init>
	SEVENSEG_init();
    16b2:	0e 94 3d 2c 	call	0x587a	; 0x587a <SEVENSEG_init>
	RTC_init();
    16b6:	0e 94 c0 2c 	call	0x5980	; 0x5980 <RTC_init>
	weekDayLed_init();
    16ba:	0e 94 68 2d 	call	0x5ad0	; 0x5ad0 <weekDayLed_init>
	BUZZER_init();
    16be:	0e 94 b0 2d 	call	0x5b60	; 0x5b60 <BUZZER_init>
	settingsButtons_init();
    16c2:	0e 94 90 2c 	call	0x5920	; 0x5920 <settingsButtons_init>
	
	/* Configure PORTA PIN7 as output for the 7Segment DP */
	GPIO_setupPinDirection(PORTA_ID, PIN7_ID, PIN_OUTPUT);
    16c6:	41 e0       	ldi	r20, 0x01	; 1
    16c8:	67 e0       	ldi	r22, 0x07	; 7
    16ca:	80 e0       	ldi	r24, 0x00	; 0
    16cc:	0e 94 ed 25 	call	0x4bda	; 0x4bda <GPIO_setupPinDirection>
	GPIO_writePin(PORTA_ID, PIN7_ID, LOGIC_LOW);
    16d0:	40 e0       	ldi	r20, 0x00	; 0
    16d2:	67 e0       	ldi	r22, 0x07	; 7
    16d4:	80 e0       	ldi	r24, 0x00	; 0
    16d6:	0e 94 60 26 	call	0x4cc0	; 0x4cc0 <GPIO_writePin>
	
	/* Calculate EEPROM addresses for latitude and longitude based on countryCode */
	latAddress = cityCode*8;
    16da:	6b 89       	ldd	r22, Y+19	; 0x13
    16dc:	70 e0       	ldi	r23, 0x00	; 0
    16de:	66 0f       	add	r22, r22
    16e0:	77 1f       	adc	r23, r23
    16e2:	66 0f       	add	r22, r22
    16e4:	77 1f       	adc	r23, r23
    16e6:	66 0f       	add	r22, r22
    16e8:	77 1f       	adc	r23, r23
	longAddress = cityCode*8+4;
    16ea:	5b 01       	movw	r10, r22
    16ec:	24 e0       	ldi	r18, 0x04	; 4
    16ee:	a2 0e       	add	r10, r18
    16f0:	b1 1c       	adc	r11, r1
	#if (STORELATLONG_STATE == TRUE)
	storeLatLong();
	#endif

	/* Read latitude and longitude from EEPROM */
	latitude = eeprom_read_float((const float*)latAddress);
    16f2:	80 e0       	ldi	r24, 0x00	; 0
    16f4:	90 e0       	ldi	r25, 0x00	; 0
    16f6:	0e 94 12 2e 	call	0x5c24	; 0x5c24 <eeprom_read_dword>
    16fa:	68 8f       	std	Y+24, r22	; 0x18
    16fc:	79 8f       	std	Y+25, r23	; 0x19
    16fe:	8a 8f       	std	Y+26, r24	; 0x1a
    1700:	9b 8f       	std	Y+27, r25	; 0x1b
	longitude = eeprom_read_float((const float*)longAddress);
    1702:	b5 01       	movw	r22, r10
    1704:	80 e0       	ldi	r24, 0x00	; 0
    1706:	90 e0       	ldi	r25, 0x00	; 0
    1708:	0e 94 12 2e 	call	0x5c24	; 0x5c24 <eeprom_read_dword>
    170c:	6c 8f       	std	Y+28, r22	; 0x1c
    170e:	7d 8f       	std	Y+29, r23	; 0x1d
    1710:	8e 8f       	std	Y+30, r24	; 0x1e
    1712:	9f 8f       	std	Y+31, r25	; 0x1f
	/* Variable Declarations */
	uint8 second, oldSecond=0, minute, oldMinute=0, hour, oldHour=0, weekDay, day,month;
	uint8 dhuhr_min=0, asr_min=0, maghrib_min=0, isha_min=0, fajr_min=0, sunrise_min=0;
	uint8 dhuhr_hour=0, asr_hour=0, maghrib_hour=0, isha_hour=0, fajr_hour=0, sunrise_hour=0;
	uint8 temperature=0, cityCode = 0, selectedDigit = 0, iqamahFlag = 0, settingsFlag = 0;
	uint8 fajrFlag=1, sunriseFlag=1, dhuhrFlag=1, asrFlag=1, maghribFlag=1,ishaFlag=1;
    1714:	31 e0       	ldi	r19, 0x01	; 1
    1716:	3d a3       	std	Y+37, r19	; 0x25
    1718:	81 e0       	ldi	r24, 0x01	; 1
    171a:	8c a3       	std	Y+36, r24	; 0x24
    171c:	91 e0       	ldi	r25, 0x01	; 1
    171e:	9b a3       	std	Y+35, r25	; 0x23
    1720:	21 e0       	ldi	r18, 0x01	; 1
    1722:	2a a3       	std	Y+34, r18	; 0x22
    1724:	39 a3       	std	Y+33, r19	; 0x21
    1726:	88 a3       	std	Y+32, r24	; 0x20
	
	/* Variable Declarations */
	uint8 second, oldSecond=0, minute, oldMinute=0, hour, oldHour=0, weekDay, day,month;
	uint8 dhuhr_min=0, asr_min=0, maghrib_min=0, isha_min=0, fajr_min=0, sunrise_min=0;
	uint8 dhuhr_hour=0, asr_hour=0, maghrib_hour=0, isha_hour=0, fajr_hour=0, sunrise_hour=0;
	uint8 temperature=0, cityCode = 0, selectedDigit = 0, iqamahFlag = 0, settingsFlag = 0;
    1728:	41 2c       	mov	r4, r1
    172a:	51 2c       	mov	r5, r1


int main(void){
	
	/* Variable Declarations */
	uint8 second, oldSecond=0, minute, oldMinute=0, hour, oldHour=0, weekDay, day,month;
    172c:	61 2c       	mov	r6, r1
    172e:	31 2c       	mov	r3, r1
    1730:	21 2c       	mov	r2, r1
    1732:	72 2c       	mov	r7, r2
	longitude = eeprom_read_float((const float*)longAddress);
	
	while(1){
		
		/* Read current time from RTC */
		RTC_Read_Clock(0,&second, &minute, &hour);
    1734:	9e 01       	movw	r18, r28
    1736:	2d 5f       	subi	r18, 0xFD	; 253
    1738:	3f 4f       	sbci	r19, 0xFF	; 255
    173a:	ae 01       	movw	r20, r28
    173c:	4e 5f       	subi	r20, 0xFE	; 254
    173e:	5f 4f       	sbci	r21, 0xFF	; 255
    1740:	be 01       	movw	r22, r28
    1742:	6f 5f       	subi	r22, 0xFF	; 255
    1744:	7f 4f       	sbci	r23, 0xFF	; 255
    1746:	80 e0       	ldi	r24, 0x00	; 0
    1748:	0e 94 ce 2a 	call	0x559c	; 0x559c <RTC_Read_Clock>
		
		/* Get current settings buttons state */
		buttonsState = settingsButtons_getState();
    174c:	0e 94 9b 2a 	call	0x5536	; 0x5536 <settingsButtons_getState>
		
		/* Enter settings mode if SET button is pressed */
		if(buttonsState & SET_BUTTON_MASK){
    1750:	80 ff       	sbrs	r24, 0
    1752:	13 c1       	rjmp	.+550    	; 0x197a <main+0x30e>
    1754:	92 e3       	ldi	r25, 0x32	; 50
    1756:	23 e0       	ldi	r18, 0x03	; 3
    1758:	31 e0       	ldi	r19, 0x01	; 1
    175a:	91 50       	subi	r25, 0x01	; 1
    175c:	20 40       	sbci	r18, 0x00	; 0
    175e:	30 40       	sbci	r19, 0x00	; 0
    1760:	e1 f7       	brne	.-8      	; 0x175a <main+0xee>
    1762:	00 c0       	rjmp	.+0      	; 0x1764 <main+0xf8>
    1764:	00 c0       	rjmp	.+0      	; 0x1766 <main+0xfa>
    1766:	02 c0       	rjmp	.+4      	; 0x176c <main+0x100>
			_delay_ms(30);
			while(buttonsState & SET_BUTTON_MASK){buttonsState = settingsButtons_getState();}
    1768:	0e 94 9b 2a 	call	0x5536	; 0x5536 <settingsButtons_getState>
    176c:	80 fd       	sbrc	r24, 0
    176e:	fc cf       	rjmp	.-8      	; 0x1768 <main+0xfc>
    1770:	88 24       	eor	r8, r8
    1772:	83 94       	inc	r8
    1774:	a1 2c       	mov	r10, r1
			settingsFlag = 1;
			selectedDigit = 0;
			do
			{
				buttonsState = settingsButtons_getState();
    1776:	0e 94 9b 2a 	call	0x5536	; 0x5536 <settingsButtons_getState>
    177a:	b8 2e       	mov	r11, r24
				
				/* Exit settings mode if SET button is pressed again */
				if(buttonsState & SET_BUTTON_MASK){
    177c:	80 ff       	sbrs	r24, 0
    177e:	10 c0       	rjmp	.+32     	; 0x17a0 <main+0x134>
    1780:	82 e3       	ldi	r24, 0x32	; 50
    1782:	93 e0       	ldi	r25, 0x03	; 3
    1784:	21 e0       	ldi	r18, 0x01	; 1
    1786:	81 50       	subi	r24, 0x01	; 1
    1788:	90 40       	sbci	r25, 0x00	; 0
    178a:	20 40       	sbci	r18, 0x00	; 0
    178c:	e1 f7       	brne	.-8      	; 0x1786 <main+0x11a>
    178e:	00 c0       	rjmp	.+0      	; 0x1790 <main+0x124>
    1790:	00 c0       	rjmp	.+0      	; 0x1792 <main+0x126>
    1792:	03 c0       	rjmp	.+6      	; 0x179a <main+0x12e>
					_delay_ms(30);
					while(buttonsState & SET_BUTTON_MASK){buttonsState = settingsButtons_getState();}
    1794:	0e 94 9b 2a 	call	0x5536	; 0x5536 <settingsButtons_getState>
    1798:	b8 2e       	mov	r11, r24
    179a:	b0 fc       	sbrc	r11, 0
    179c:	fb cf       	rjmp	.-10     	; 0x1794 <main+0x128>
					settingsFlag = 0;
    179e:	81 2c       	mov	r8, r1
				}
				
				/* Navigate through digits */
				if(buttonsState & LEFT_BUTTON_MASK){
    17a0:	b1 fe       	sbrs	r11, 1
    17a2:	15 c0       	rjmp	.+42     	; 0x17ce <main+0x162>
    17a4:	32 e3       	ldi	r19, 0x32	; 50
    17a6:	83 e0       	ldi	r24, 0x03	; 3
    17a8:	91 e0       	ldi	r25, 0x01	; 1
    17aa:	31 50       	subi	r19, 0x01	; 1
    17ac:	80 40       	sbci	r24, 0x00	; 0
    17ae:	90 40       	sbci	r25, 0x00	; 0
    17b0:	e1 f7       	brne	.-8      	; 0x17aa <main+0x13e>
    17b2:	00 c0       	rjmp	.+0      	; 0x17b4 <main+0x148>
    17b4:	00 c0       	rjmp	.+0      	; 0x17b6 <main+0x14a>
    17b6:	03 c0       	rjmp	.+6      	; 0x17be <main+0x152>
					_delay_ms(30);
					while(buttonsState & LEFT_BUTTON_MASK){buttonsState = settingsButtons_getState();}
    17b8:	0e 94 9b 2a 	call	0x5536	; 0x5536 <settingsButtons_getState>
    17bc:	b8 2e       	mov	r11, r24
    17be:	b1 fc       	sbrc	r11, 1
    17c0:	fb cf       	rjmp	.-10     	; 0x17b8 <main+0x14c>
					if(selectedDigit == 8){selectedDigit = 0;}
    17c2:	28 e0       	ldi	r18, 0x08	; 8
    17c4:	a2 16       	cp	r10, r18
    17c6:	11 f0       	breq	.+4      	; 0x17cc <main+0x160>
					else{selectedDigit++;}
    17c8:	a3 94       	inc	r10
    17ca:	01 c0       	rjmp	.+2      	; 0x17ce <main+0x162>
				
				/* Navigate through digits */
				if(buttonsState & LEFT_BUTTON_MASK){
					_delay_ms(30);
					while(buttonsState & LEFT_BUTTON_MASK){buttonsState = settingsButtons_getState();}
					if(selectedDigit == 8){selectedDigit = 0;}
    17cc:	a1 2c       	mov	r10, r1
					else{selectedDigit++;}
					
				}
				if(buttonsState & RIGHT_BUTTON_MASK){
    17ce:	b2 fe       	sbrs	r11, 2
    17d0:	16 c0       	rjmp	.+44     	; 0x17fe <main+0x192>
    17d2:	32 e3       	ldi	r19, 0x32	; 50
    17d4:	83 e0       	ldi	r24, 0x03	; 3
    17d6:	91 e0       	ldi	r25, 0x01	; 1
    17d8:	31 50       	subi	r19, 0x01	; 1
    17da:	80 40       	sbci	r24, 0x00	; 0
    17dc:	90 40       	sbci	r25, 0x00	; 0
    17de:	e1 f7       	brne	.-8      	; 0x17d8 <main+0x16c>
    17e0:	00 c0       	rjmp	.+0      	; 0x17e2 <main+0x176>
    17e2:	00 c0       	rjmp	.+0      	; 0x17e4 <main+0x178>
    17e4:	03 c0       	rjmp	.+6      	; 0x17ec <main+0x180>
					_delay_ms(30);
					while(buttonsState & RIGHT_BUTTON_MASK){buttonsState = settingsButtons_getState();}
    17e6:	0e 94 9b 2a 	call	0x5536	; 0x5536 <settingsButtons_getState>
    17ea:	b8 2e       	mov	r11, r24
    17ec:	b2 fc       	sbrc	r11, 2
    17ee:	fb cf       	rjmp	.-10     	; 0x17e6 <main+0x17a>
					if(selectedDigit == 0){selectedDigit = 8;}
    17f0:	aa 20       	and	r10, r10
    17f2:	11 f0       	breq	.+4      	; 0x17f8 <main+0x18c>
					else{selectedDigit--;}
    17f4:	aa 94       	dec	r10
    17f6:	03 c0       	rjmp	.+6      	; 0x17fe <main+0x192>
					
				}
				if(buttonsState & RIGHT_BUTTON_MASK){
					_delay_ms(30);
					while(buttonsState & RIGHT_BUTTON_MASK){buttonsState = settingsButtons_getState();}
					if(selectedDigit == 0){selectedDigit = 8;}
    17f8:	68 94       	set
    17fa:	aa 24       	eor	r10, r10
    17fc:	a3 f8       	bld	r10, 3
					else{selectedDigit--;}
					
				}
				
				/* Increment selected digit value */
				if(buttonsState & UP_BUTTON_MASK){
    17fe:	b3 fe       	sbrs	r11, 3
    1800:	24 c0       	rjmp	.+72     	; 0x184a <main+0x1de>
    1802:	22 e3       	ldi	r18, 0x32	; 50
    1804:	33 e0       	ldi	r19, 0x03	; 3
    1806:	81 e0       	ldi	r24, 0x01	; 1
    1808:	21 50       	subi	r18, 0x01	; 1
    180a:	30 40       	sbci	r19, 0x00	; 0
    180c:	80 40       	sbci	r24, 0x00	; 0
    180e:	e1 f7       	brne	.-8      	; 0x1808 <main+0x19c>
    1810:	00 c0       	rjmp	.+0      	; 0x1812 <main+0x1a6>
    1812:	00 c0       	rjmp	.+0      	; 0x1814 <main+0x1a8>
    1814:	03 c0       	rjmp	.+6      	; 0x181c <main+0x1b0>
					_delay_ms(30);
					while(buttonsState & UP_BUTTON_MASK){buttonsState = settingsButtons_getState();}
    1816:	0e 94 9b 2a 	call	0x5536	; 0x5536 <settingsButtons_getState>
    181a:	b8 2e       	mov	r11, r24
    181c:	b3 fc       	sbrc	r11, 3
    181e:	fb cf       	rjmp	.-10     	; 0x1816 <main+0x1aa>
					incrementDigitValue(selectedDigit, &year, &month, &day, &hour, &minute, &cityCode);
    1820:	9e 01       	movw	r18, r28
    1822:	2d 5e       	subi	r18, 0xED	; 237
    1824:	3f 4f       	sbci	r19, 0xFF	; 255
    1826:	69 01       	movw	r12, r18
    1828:	ce 01       	movw	r24, r28
    182a:	02 96       	adiw	r24, 0x02	; 2
    182c:	7c 01       	movw	r14, r24
    182e:	8e 01       	movw	r16, r28
    1830:	0d 5f       	subi	r16, 0xFD	; 253
    1832:	1f 4f       	sbci	r17, 0xFF	; 255
    1834:	2e 50       	subi	r18, 0x0E	; 14
    1836:	31 09       	sbc	r19, r1
    1838:	ae 01       	movw	r20, r28
    183a:	4a 5f       	subi	r20, 0xFA	; 250
    183c:	5f 4f       	sbci	r21, 0xFF	; 255
    183e:	be 01       	movw	r22, r28
    1840:	6c 5e       	subi	r22, 0xEC	; 236
    1842:	7f 4f       	sbci	r23, 0xFF	; 255
    1844:	8a 2d       	mov	r24, r10
    1846:	0e 94 b9 1b 	call	0x3772	; 0x3772 <incrementDigitValue>
					
				}
				
				/* Decrement selected digit value */
				if(buttonsState & DOWN_BUTTON_MASK){
    184a:	b4 fe       	sbrs	r11, 4
    184c:	24 c0       	rjmp	.+72     	; 0x1896 <main+0x22a>
    184e:	92 e3       	ldi	r25, 0x32	; 50
    1850:	23 e0       	ldi	r18, 0x03	; 3
    1852:	31 e0       	ldi	r19, 0x01	; 1
    1854:	91 50       	subi	r25, 0x01	; 1
    1856:	20 40       	sbci	r18, 0x00	; 0
    1858:	30 40       	sbci	r19, 0x00	; 0
    185a:	e1 f7       	brne	.-8      	; 0x1854 <main+0x1e8>
    185c:	00 c0       	rjmp	.+0      	; 0x185e <main+0x1f2>
    185e:	00 c0       	rjmp	.+0      	; 0x1860 <main+0x1f4>
    1860:	03 c0       	rjmp	.+6      	; 0x1868 <main+0x1fc>
					_delay_ms(30);
					while(buttonsState & DOWN_BUTTON_MASK){buttonsState = settingsButtons_getState();}
    1862:	0e 94 9b 2a 	call	0x5536	; 0x5536 <settingsButtons_getState>
    1866:	b8 2e       	mov	r11, r24
    1868:	b4 fc       	sbrc	r11, 4
    186a:	fb cf       	rjmp	.-10     	; 0x1862 <main+0x1f6>
					decrementDigitValue(selectedDigit, &year, &month, &day, &hour, &minute, &cityCode);
    186c:	ce 01       	movw	r24, r28
    186e:	43 96       	adiw	r24, 0x13	; 19
    1870:	6c 01       	movw	r12, r24
    1872:	9e 01       	movw	r18, r28
    1874:	2e 5f       	subi	r18, 0xFE	; 254
    1876:	3f 4f       	sbci	r19, 0xFF	; 255
    1878:	79 01       	movw	r14, r18
    187a:	8e 01       	movw	r16, r28
    187c:	0d 5f       	subi	r16, 0xFD	; 253
    187e:	1f 4f       	sbci	r17, 0xFF	; 255
    1880:	2d 5f       	subi	r18, 0xFD	; 253
    1882:	3f 4f       	sbci	r19, 0xFF	; 255
    1884:	ae 01       	movw	r20, r28
    1886:	4a 5f       	subi	r20, 0xFA	; 250
    1888:	5f 4f       	sbci	r21, 0xFF	; 255
    188a:	be 01       	movw	r22, r28
    188c:	6c 5e       	subi	r22, 0xEC	; 236
    188e:	7f 4f       	sbci	r23, 0xFF	; 255
    1890:	8a 2d       	mov	r24, r10
    1892:	0e 94 a7 1c 	call	0x394e	; 0x394e <decrementDigitValue>
				}
				
				/* Display date, time, and settings values on 7-segment display */
				displaySettingsOn7Segment(selectedDigit, day, month, year, hour, minute, cityCode);
    1896:	2c 89       	ldd	r18, Y+20	; 0x14
    1898:	3d 89       	ldd	r19, Y+21	; 0x15
    189a:	cb 88       	ldd	r12, Y+19	; 0x13
    189c:	ea 80       	ldd	r14, Y+2	; 0x02
    189e:	0b 81       	ldd	r16, Y+3	; 0x03
    18a0:	4e 81       	ldd	r20, Y+6	; 0x06
    18a2:	6d 81       	ldd	r22, Y+5	; 0x05
    18a4:	8a 2d       	mov	r24, r10
    18a6:	0e 94 3b 11 	call	0x2276	; 0x2276 <displaySettingsOn7Segment>
				
				
			} while (settingsFlag);
    18aa:	81 10       	cpse	r8, r1
    18ac:	64 cf       	rjmp	.-312    	; 0x1776 <main+0x10a>
			
			/* Write updated date and time to RTC */
			RTC_Calendar_Write(weekDay, day, month, year);
    18ae:	2c 89       	ldd	r18, Y+20	; 0x14
    18b0:	3d 89       	ldd	r19, Y+21	; 0x15
    18b2:	4e 81       	ldd	r20, Y+6	; 0x06
    18b4:	6d 81       	ldd	r22, Y+5	; 0x05
    18b6:	8c 81       	ldd	r24, Y+4	; 0x04
    18b8:	0e 94 fe 28 	call	0x51fc	; 0x51fc <RTC_Calendar_Write>
			RTC_Clock_Write(hour, minute, second);
    18bc:	49 81       	ldd	r20, Y+1	; 0x01
    18be:	6a 81       	ldd	r22, Y+2	; 0x02
    18c0:	8b 81       	ldd	r24, Y+3	; 0x03
    18c2:	0e 94 e2 2b 	call	0x57c4	; 0x57c4 <RTC_Clock_Write>
			
			/* Update latitude and longitude based on new city code */
			latAddress = cityCode*8;
    18c6:	6b 89       	ldd	r22, Y+19	; 0x13
    18c8:	70 e0       	ldi	r23, 0x00	; 0
    18ca:	66 0f       	add	r22, r22
    18cc:	77 1f       	adc	r23, r23
    18ce:	66 0f       	add	r22, r22
    18d0:	77 1f       	adc	r23, r23
    18d2:	66 0f       	add	r22, r22
    18d4:	77 1f       	adc	r23, r23
			longAddress = cityCode*8+4;
    18d6:	5b 01       	movw	r10, r22
    18d8:	34 e0       	ldi	r19, 0x04	; 4
    18da:	a3 0e       	add	r10, r19
    18dc:	b1 1c       	adc	r11, r1
			latitude = eeprom_read_float((const float*)latAddress);
    18de:	80 e0       	ldi	r24, 0x00	; 0
    18e0:	90 e0       	ldi	r25, 0x00	; 0
    18e2:	0e 94 12 2e 	call	0x5c24	; 0x5c24 <eeprom_read_dword>
    18e6:	68 8f       	std	Y+24, r22	; 0x18
    18e8:	79 8f       	std	Y+25, r23	; 0x19
    18ea:	8a 8f       	std	Y+26, r24	; 0x1a
    18ec:	9b 8f       	std	Y+27, r25	; 0x1b
			longitude = eeprom_read_float((const float*)longAddress);
    18ee:	b5 01       	movw	r22, r10
    18f0:	80 e0       	ldi	r24, 0x00	; 0
    18f2:	90 e0       	ldi	r25, 0x00	; 0
    18f4:	0e 94 12 2e 	call	0x5c24	; 0x5c24 <eeprom_read_dword>
    18f8:	6c 8f       	std	Y+28, r22	; 0x1c
    18fa:	7d 8f       	std	Y+29, r23	; 0x1d
    18fc:	8e 8f       	std	Y+30, r24	; 0x1e
    18fe:	9f 8f       	std	Y+31, r25	; 0x1f
			
			/* Recalculate prayer times based on updated date and location */
			calAllPrayerTimes(	year, month, day, longitude, latitude,
    1900:	ce 01       	movw	r24, r28
    1902:	0a 96       	adiw	r24, 0x0a	; 10
    1904:	9f 93       	push	r25
    1906:	8f 93       	push	r24
    1908:	06 96       	adiw	r24, 0x06	; 6
    190a:	9f 93       	push	r25
    190c:	8f 93       	push	r24
    190e:	07 97       	sbiw	r24, 0x07	; 7
    1910:	9f 93       	push	r25
    1912:	8f 93       	push	r24
    1914:	06 96       	adiw	r24, 0x06	; 6
    1916:	9f 93       	push	r25
    1918:	8f 93       	push	r24
    191a:	07 97       	sbiw	r24, 0x07	; 7
    191c:	9f 93       	push	r25
    191e:	8f 93       	push	r24
    1920:	06 96       	adiw	r24, 0x06	; 6
    1922:	9f 93       	push	r25
    1924:	8f 93       	push	r24
    1926:	07 97       	sbiw	r24, 0x07	; 7
    1928:	9f 93       	push	r25
    192a:	8f 93       	push	r24
    192c:	06 96       	adiw	r24, 0x06	; 6
    192e:	9f 93       	push	r25
    1930:	8f 93       	push	r24
    1932:	01 97       	sbiw	r24, 0x01	; 1
    1934:	9f 93       	push	r25
    1936:	8f 93       	push	r24
    1938:	06 96       	adiw	r24, 0x06	; 6
    193a:	9f 93       	push	r25
    193c:	8f 93       	push	r24
    193e:	07 97       	sbiw	r24, 0x07	; 7
    1940:	4c 01       	movw	r8, r24
    1942:	9e 01       	movw	r18, r28
    1944:	2f 5e       	subi	r18, 0xEF	; 239
    1946:	3f 4f       	sbci	r19, 0xFF	; 255
    1948:	59 01       	movw	r10, r18
    194a:	c8 8c       	ldd	r12, Y+24	; 0x18
    194c:	d9 8c       	ldd	r13, Y+25	; 0x19
    194e:	ea 8c       	ldd	r14, Y+26	; 0x1a
    1950:	fb 8c       	ldd	r15, Y+27	; 0x1b
    1952:	0c 8d       	ldd	r16, Y+28	; 0x1c
    1954:	1d 8d       	ldd	r17, Y+29	; 0x1d
    1956:	2e 8d       	ldd	r18, Y+30	; 0x1e
    1958:	3f 8d       	ldd	r19, Y+31	; 0x1f
    195a:	4d 81       	ldd	r20, Y+5	; 0x05
    195c:	6e 81       	ldd	r22, Y+6	; 0x06
    195e:	8c 89       	ldd	r24, Y+20	; 0x14
    1960:	9d 89       	ldd	r25, Y+21	; 0x15
    1962:	0e 94 73 1e 	call	0x3ce6	; 0x3ce6 <calAllPrayerTimes>
			&fajr_hour, &fajr_min, &sunrise_hour, &sunrise_min,
			&dhuhr_hour, &dhuhr_min, &asr_hour, &asr_min,
			&maghrib_hour, &maghrib_min, &isha_hour, &isha_min );
			
			GPIO_writePin(PORTA_ID, PIN7_ID, LOGIC_LOW);
    1966:	40 e0       	ldi	r20, 0x00	; 0
    1968:	67 e0       	ldi	r22, 0x07	; 7
    196a:	80 e0       	ldi	r24, 0x00	; 0
    196c:	0e 94 60 26 	call	0x4cc0	; 0x4cc0 <GPIO_writePin>
    1970:	0f b6       	in	r0, 0x3f	; 63
    1972:	f8 94       	cli
    1974:	de bf       	out	0x3e, r29	; 62
    1976:	0f be       	out	0x3f, r0	; 63
    1978:	cd bf       	out	0x3d, r28	; 61
		}
		
		/* Update the day of the week and prayer times at the beginning of each hour*/
		if (oldHour != hour)
    197a:	2b 80       	ldd	r2, Y+3	; 0x03
    197c:	62 14       	cp	r6, r2
    197e:	09 f4       	brne	.+2      	; 0x1982 <main+0x316>
    1980:	4b c0       	rjmp	.+150    	; 0x1a18 <main+0x3ac>
		{
			oldHour = hour;
			RTC_Read_Calendar(3, &weekDay, &day, &month, &year);
    1982:	8e 01       	movw	r16, r28
    1984:	0c 5e       	subi	r16, 0xEC	; 236
    1986:	1f 4f       	sbci	r17, 0xFF	; 255
    1988:	9e 01       	movw	r18, r28
    198a:	2a 5f       	subi	r18, 0xFA	; 250
    198c:	3f 4f       	sbci	r19, 0xFF	; 255
    198e:	ae 01       	movw	r20, r28
    1990:	4b 5f       	subi	r20, 0xFB	; 251
    1992:	5f 4f       	sbci	r21, 0xFF	; 255
    1994:	be 01       	movw	r22, r28
    1996:	6c 5f       	subi	r22, 0xFC	; 252
    1998:	7f 4f       	sbci	r23, 0xFF	; 255
    199a:	83 e0       	ldi	r24, 0x03	; 3
    199c:	0e 94 3d 29 	call	0x527a	; 0x527a <RTC_Read_Calendar>
			weekDayLed_lightup(weekDay);
    19a0:	8c 81       	ldd	r24, Y+4	; 0x04
    19a2:	0e 94 99 23 	call	0x4732	; 0x4732 <weekDayLed_lightup>
			
			calAllPrayerTimes(	year, month, day, longitude, latitude,
    19a6:	ce 01       	movw	r24, r28
    19a8:	0a 96       	adiw	r24, 0x0a	; 10
    19aa:	9f 93       	push	r25
    19ac:	8f 93       	push	r24
    19ae:	06 96       	adiw	r24, 0x06	; 6
    19b0:	9f 93       	push	r25
    19b2:	8f 93       	push	r24
    19b4:	07 97       	sbiw	r24, 0x07	; 7
    19b6:	9f 93       	push	r25
    19b8:	8f 93       	push	r24
    19ba:	06 96       	adiw	r24, 0x06	; 6
    19bc:	9f 93       	push	r25
    19be:	8f 93       	push	r24
    19c0:	07 97       	sbiw	r24, 0x07	; 7
    19c2:	9f 93       	push	r25
    19c4:	8f 93       	push	r24
    19c6:	06 96       	adiw	r24, 0x06	; 6
    19c8:	9f 93       	push	r25
    19ca:	8f 93       	push	r24
    19cc:	07 97       	sbiw	r24, 0x07	; 7
    19ce:	9f 93       	push	r25
    19d0:	8f 93       	push	r24
    19d2:	06 96       	adiw	r24, 0x06	; 6
    19d4:	9f 93       	push	r25
    19d6:	8f 93       	push	r24
    19d8:	01 97       	sbiw	r24, 0x01	; 1
    19da:	9f 93       	push	r25
    19dc:	8f 93       	push	r24
    19de:	06 96       	adiw	r24, 0x06	; 6
    19e0:	9f 93       	push	r25
    19e2:	8f 93       	push	r24
    19e4:	9e 01       	movw	r18, r28
    19e6:	25 5f       	subi	r18, 0xF5	; 245
    19e8:	3f 4f       	sbci	r19, 0xFF	; 255
    19ea:	49 01       	movw	r8, r18
    19ec:	01 97       	sbiw	r24, 0x01	; 1
    19ee:	5c 01       	movw	r10, r24
    19f0:	c8 8c       	ldd	r12, Y+24	; 0x18
    19f2:	d9 8c       	ldd	r13, Y+25	; 0x19
    19f4:	ea 8c       	ldd	r14, Y+26	; 0x1a
    19f6:	fb 8c       	ldd	r15, Y+27	; 0x1b
    19f8:	0c 8d       	ldd	r16, Y+28	; 0x1c
    19fa:	1d 8d       	ldd	r17, Y+29	; 0x1d
    19fc:	2e 8d       	ldd	r18, Y+30	; 0x1e
    19fe:	3f 8d       	ldd	r19, Y+31	; 0x1f
    1a00:	4d 81       	ldd	r20, Y+5	; 0x05
    1a02:	6e 81       	ldd	r22, Y+6	; 0x06
    1a04:	8c 89       	ldd	r24, Y+20	; 0x14
    1a06:	9d 89       	ldd	r25, Y+21	; 0x15
    1a08:	0e 94 73 1e 	call	0x3ce6	; 0x3ce6 <calAllPrayerTimes>
    1a0c:	0f b6       	in	r0, 0x3f	; 63
    1a0e:	f8 94       	cli
    1a10:	de bf       	out	0x3e, r29	; 62
    1a12:	0f be       	out	0x3f, r0	; 63
    1a14:	cd bf       	out	0x3d, r28	; 61
		}
		
		/* Update the day of the week and prayer times at the beginning of each hour*/
		if (oldHour != hour)
		{
			oldHour = hour;
    1a16:	62 2c       	mov	r6, r2
			&dhuhr_hour, &dhuhr_min, &asr_hour, &asr_min,
			&maghrib_hour, &maghrib_min, &isha_hour, &isha_min );
		}
		
		/* Check for iqamah alert and toggle buzzer if needed */
		if (oldMinute != minute)
    1a18:	ba 80       	ldd	r11, Y+2	; 0x02
    1a1a:	3b 14       	cp	r3, r11
    1a1c:	b1 f0       	breq	.+44     	; 0x1a4a <main+0x3de>
		{
			oldMinute = minute;
			iqamahFlag = checkIqamahAlert(hour, minute, fajr_hour, fajr_min, dhuhr_hour, dhuhr_min, asr_hour, asr_min, maghrib_hour, maghrib_min, isha_hour, isha_min);
    1a1e:	3a 85       	ldd	r19, Y+10	; 0x0a
    1a20:	98 89       	ldd	r25, Y+16	; 0x10
    1a22:	89 85       	ldd	r24, Y+9	; 0x09
    1a24:	8f 84       	ldd	r8, Y+15	; 0x0f
    1a26:	a8 84       	ldd	r10, Y+8	; 0x08
    1a28:	ce 84       	ldd	r12, Y+14	; 0x0e
    1a2a:	ef 80       	ldd	r14, Y+7	; 0x07
    1a2c:	0d 85       	ldd	r16, Y+13	; 0x0d
    1a2e:	2b 85       	ldd	r18, Y+11	; 0x0b
    1a30:	49 89       	ldd	r20, Y+17	; 0x11
    1a32:	3f 93       	push	r19
    1a34:	9f 93       	push	r25
    1a36:	8f 93       	push	r24
    1a38:	6b 2d       	mov	r22, r11
    1a3a:	8b 81       	ldd	r24, Y+3	; 0x03
    1a3c:	0e 94 d5 18 	call	0x31aa	; 0x31aa <checkIqamahAlert>
    1a40:	48 2e       	mov	r4, r24
    1a42:	0f 90       	pop	r0
    1a44:	0f 90       	pop	r0
    1a46:	0f 90       	pop	r0
		}
		
		/* Check for iqamah alert and toggle buzzer if needed */
		if (oldMinute != minute)
		{
			oldMinute = minute;
    1a48:	3b 2c       	mov	r3, r11
			iqamahFlag = checkIqamahAlert(hour, minute, fajr_hour, fajr_min, dhuhr_hour, dhuhr_min, asr_hour, asr_min, maghrib_hour, maghrib_min, isha_hour, isha_min);
		}
		
		
		if(oldSecond != second){
    1a4a:	09 81       	ldd	r16, Y+1	; 0x01
    1a4c:	70 16       	cp	r7, r16
    1a4e:	09 f4       	brne	.+2      	; 0x1a52 <main+0x3e6>
    1a50:	7e c0       	rjmp	.+252    	; 0x1b4e <main+0x4e2>
			oldSecond = second;
			temperature = LM35_getTemperature();
    1a52:	0e 94 9e 2b 	call	0x573c	; 0x573c <LM35_getTemperature>
    1a56:	58 2e       	mov	r5, r24
			
			if(iqamahFlag){
    1a58:	41 10       	cpse	r4, r1
				BUZZER_toggle();
    1a5a:	0e 94 2b 2e 	call	0x5c56	; 0x5c56 <BUZZER_toggle>
			}
			
			if((minute == fajr_min) && (hour == fajr_hour)){
    1a5e:	8a 81       	ldd	r24, Y+2	; 0x02
    1a60:	9b 85       	ldd	r25, Y+11	; 0x0b
    1a62:	89 13       	cpse	r24, r25
    1a64:	0d c0       	rjmp	.+26     	; 0x1a80 <main+0x414>
    1a66:	2b 81       	ldd	r18, Y+3	; 0x03
    1a68:	99 89       	ldd	r25, Y+17	; 0x11
    1a6a:	29 13       	cpse	r18, r25
    1a6c:	09 c0       	rjmp	.+18     	; 0x1a80 <main+0x414>
				BUZZER_toggle();
    1a6e:	0e 94 2b 2e 	call	0x5c56	; 0x5c56 <BUZZER_toggle>
				fajrFlag = !fajrFlag;
    1a72:	81 e0       	ldi	r24, 0x01	; 1
    1a74:	38 a1       	ldd	r19, Y+32	; 0x20
    1a76:	31 11       	cpse	r19, r1
    1a78:	80 e0       	ldi	r24, 0x00	; 0
    1a7a:	88 a3       	std	Y+32, r24	; 0x20
			iqamahFlag = checkIqamahAlert(hour, minute, fajr_hour, fajr_min, dhuhr_hour, dhuhr_min, asr_hour, asr_min, maghrib_hour, maghrib_min, isha_hour, isha_min);
		}
		
		
		if(oldSecond != second){
			oldSecond = second;
    1a7c:	70 2e       	mov	r7, r16
				BUZZER_toggle();
			}
			
			if((minute == fajr_min) && (hour == fajr_hour)){
				BUZZER_toggle();
				fajrFlag = !fajrFlag;
    1a7e:	67 c0       	rjmp	.+206    	; 0x1b4e <main+0x4e2>
			}
			else if((minute == sunrise_min) && (hour == sunrise_hour)){
    1a80:	9c 85       	ldd	r25, Y+12	; 0x0c
    1a82:	89 13       	cpse	r24, r25
    1a84:	0d c0       	rjmp	.+26     	; 0x1aa0 <main+0x434>
    1a86:	2b 81       	ldd	r18, Y+3	; 0x03
    1a88:	9a 89       	ldd	r25, Y+18	; 0x12
    1a8a:	29 13       	cpse	r18, r25
    1a8c:	09 c0       	rjmp	.+18     	; 0x1aa0 <main+0x434>
				BUZZER_toggle();
    1a8e:	0e 94 2b 2e 	call	0x5c56	; 0x5c56 <BUZZER_toggle>
				sunriseFlag = !sunriseFlag;
    1a92:	81 e0       	ldi	r24, 0x01	; 1
    1a94:	99 a1       	ldd	r25, Y+33	; 0x21
    1a96:	91 11       	cpse	r25, r1
    1a98:	80 e0       	ldi	r24, 0x00	; 0
    1a9a:	89 a3       	std	Y+33, r24	; 0x21
			iqamahFlag = checkIqamahAlert(hour, minute, fajr_hour, fajr_min, dhuhr_hour, dhuhr_min, asr_hour, asr_min, maghrib_hour, maghrib_min, isha_hour, isha_min);
		}
		
		
		if(oldSecond != second){
			oldSecond = second;
    1a9c:	70 2e       	mov	r7, r16
				BUZZER_toggle();
				fajrFlag = !fajrFlag;
			}
			else if((minute == sunrise_min) && (hour == sunrise_hour)){
				BUZZER_toggle();
				sunriseFlag = !sunriseFlag;
    1a9e:	57 c0       	rjmp	.+174    	; 0x1b4e <main+0x4e2>
			}
			else if((minute == dhuhr_min) && (hour == dhuhr_hour)){
    1aa0:	9f 81       	ldd	r25, Y+7	; 0x07
    1aa2:	89 13       	cpse	r24, r25
    1aa4:	0d c0       	rjmp	.+26     	; 0x1ac0 <main+0x454>
    1aa6:	2b 81       	ldd	r18, Y+3	; 0x03
    1aa8:	9d 85       	ldd	r25, Y+13	; 0x0d
    1aaa:	29 13       	cpse	r18, r25
    1aac:	09 c0       	rjmp	.+18     	; 0x1ac0 <main+0x454>
				BUZZER_toggle();
    1aae:	0e 94 2b 2e 	call	0x5c56	; 0x5c56 <BUZZER_toggle>
				dhuhrFlag = !dhuhrFlag;
    1ab2:	81 e0       	ldi	r24, 0x01	; 1
    1ab4:	2a a1       	ldd	r18, Y+34	; 0x22
    1ab6:	21 11       	cpse	r18, r1
    1ab8:	80 e0       	ldi	r24, 0x00	; 0
    1aba:	8a a3       	std	Y+34, r24	; 0x22
			iqamahFlag = checkIqamahAlert(hour, minute, fajr_hour, fajr_min, dhuhr_hour, dhuhr_min, asr_hour, asr_min, maghrib_hour, maghrib_min, isha_hour, isha_min);
		}
		
		
		if(oldSecond != second){
			oldSecond = second;
    1abc:	70 2e       	mov	r7, r16
				BUZZER_toggle();
				sunriseFlag = !sunriseFlag;
			}
			else if((minute == dhuhr_min) && (hour == dhuhr_hour)){
				BUZZER_toggle();
				dhuhrFlag = !dhuhrFlag;
    1abe:	47 c0       	rjmp	.+142    	; 0x1b4e <main+0x4e2>
			}
			else if((minute == asr_min) && (hour == asr_hour)){
    1ac0:	98 85       	ldd	r25, Y+8	; 0x08
    1ac2:	89 13       	cpse	r24, r25
    1ac4:	0d c0       	rjmp	.+26     	; 0x1ae0 <main+0x474>
    1ac6:	2b 81       	ldd	r18, Y+3	; 0x03
    1ac8:	9e 85       	ldd	r25, Y+14	; 0x0e
    1aca:	29 13       	cpse	r18, r25
    1acc:	09 c0       	rjmp	.+18     	; 0x1ae0 <main+0x474>
				BUZZER_toggle();
    1ace:	0e 94 2b 2e 	call	0x5c56	; 0x5c56 <BUZZER_toggle>
				asrFlag = !asrFlag;
    1ad2:	81 e0       	ldi	r24, 0x01	; 1
    1ad4:	3b a1       	ldd	r19, Y+35	; 0x23
    1ad6:	31 11       	cpse	r19, r1
    1ad8:	80 e0       	ldi	r24, 0x00	; 0
    1ada:	8b a3       	std	Y+35, r24	; 0x23
			iqamahFlag = checkIqamahAlert(hour, minute, fajr_hour, fajr_min, dhuhr_hour, dhuhr_min, asr_hour, asr_min, maghrib_hour, maghrib_min, isha_hour, isha_min);
		}
		
		
		if(oldSecond != second){
			oldSecond = second;
    1adc:	70 2e       	mov	r7, r16
				BUZZER_toggle();
				dhuhrFlag = !dhuhrFlag;
			}
			else if((minute == asr_min) && (hour == asr_hour)){
				BUZZER_toggle();
				asrFlag = !asrFlag;
    1ade:	37 c0       	rjmp	.+110    	; 0x1b4e <main+0x4e2>
			}
			else if((minute == maghrib_min) && (hour == maghrib_hour)){
    1ae0:	99 85       	ldd	r25, Y+9	; 0x09
    1ae2:	89 13       	cpse	r24, r25
    1ae4:	0d c0       	rjmp	.+26     	; 0x1b00 <main+0x494>
    1ae6:	2b 81       	ldd	r18, Y+3	; 0x03
    1ae8:	9f 85       	ldd	r25, Y+15	; 0x0f
    1aea:	29 13       	cpse	r18, r25
    1aec:	09 c0       	rjmp	.+18     	; 0x1b00 <main+0x494>
				BUZZER_toggle();
    1aee:	0e 94 2b 2e 	call	0x5c56	; 0x5c56 <BUZZER_toggle>
				maghribFlag = !maghribFlag;
    1af2:	81 e0       	ldi	r24, 0x01	; 1
    1af4:	9c a1       	ldd	r25, Y+36	; 0x24
    1af6:	91 11       	cpse	r25, r1
    1af8:	80 e0       	ldi	r24, 0x00	; 0
    1afa:	8c a3       	std	Y+36, r24	; 0x24
			iqamahFlag = checkIqamahAlert(hour, minute, fajr_hour, fajr_min, dhuhr_hour, dhuhr_min, asr_hour, asr_min, maghrib_hour, maghrib_min, isha_hour, isha_min);
		}
		
		
		if(oldSecond != second){
			oldSecond = second;
    1afc:	70 2e       	mov	r7, r16
				BUZZER_toggle();
				asrFlag = !asrFlag;
			}
			else if((minute == maghrib_min) && (hour == maghrib_hour)){
				BUZZER_toggle();
				maghribFlag = !maghribFlag;
    1afe:	27 c0       	rjmp	.+78     	; 0x1b4e <main+0x4e2>
			}
			else if((minute == isha_min) && (hour == isha_hour)){
    1b00:	9a 85       	ldd	r25, Y+10	; 0x0a
    1b02:	89 13       	cpse	r24, r25
    1b04:	0d c0       	rjmp	.+26     	; 0x1b20 <main+0x4b4>
    1b06:	9b 81       	ldd	r25, Y+3	; 0x03
    1b08:	88 89       	ldd	r24, Y+16	; 0x10
    1b0a:	98 13       	cpse	r25, r24
    1b0c:	15 c0       	rjmp	.+42     	; 0x1b38 <main+0x4cc>
				BUZZER_toggle();
    1b0e:	0e 94 2b 2e 	call	0x5c56	; 0x5c56 <BUZZER_toggle>
				ishaFlag = !ishaFlag;
    1b12:	81 e0       	ldi	r24, 0x01	; 1
    1b14:	2d a1       	ldd	r18, Y+37	; 0x25
    1b16:	21 11       	cpse	r18, r1
    1b18:	80 e0       	ldi	r24, 0x00	; 0
    1b1a:	8d a3       	std	Y+37, r24	; 0x25
			iqamahFlag = checkIqamahAlert(hour, minute, fajr_hour, fajr_min, dhuhr_hour, dhuhr_min, asr_hour, asr_min, maghrib_hour, maghrib_min, isha_hour, isha_min);
		}
		
		
		if(oldSecond != second){
			oldSecond = second;
    1b1c:	70 2e       	mov	r7, r16
				BUZZER_toggle();
				maghribFlag = !maghribFlag;
			}
			else if((minute == isha_min) && (hour == isha_hour)){
				BUZZER_toggle();
				ishaFlag = !ishaFlag;
    1b1e:	17 c0       	rjmp	.+46     	; 0x1b4e <main+0x4e2>
			iqamahFlag = checkIqamahAlert(hour, minute, fajr_hour, fajr_min, dhuhr_hour, dhuhr_min, asr_hour, asr_min, maghrib_hour, maghrib_min, isha_hour, isha_min);
		}
		
		
		if(oldSecond != second){
			oldSecond = second;
    1b20:	70 2e       	mov	r7, r16
			else if((minute == isha_min) && (hour == isha_hour)){
				BUZZER_toggle();
				ishaFlag = !ishaFlag;
			}
			else{
				fajrFlag=1; sunriseFlag=1; dhuhrFlag=1; asrFlag=1; maghribFlag=1; ishaFlag=1;
    1b22:	31 e0       	ldi	r19, 0x01	; 1
    1b24:	3d a3       	std	Y+37, r19	; 0x25
    1b26:	81 e0       	ldi	r24, 0x01	; 1
    1b28:	8c a3       	std	Y+36, r24	; 0x24
    1b2a:	91 e0       	ldi	r25, 0x01	; 1
    1b2c:	9b a3       	std	Y+35, r25	; 0x23
    1b2e:	21 e0       	ldi	r18, 0x01	; 1
    1b30:	2a a3       	std	Y+34, r18	; 0x22
    1b32:	39 a3       	std	Y+33, r19	; 0x21
    1b34:	88 a3       	std	Y+32, r24	; 0x20
    1b36:	0b c0       	rjmp	.+22     	; 0x1b4e <main+0x4e2>
			iqamahFlag = checkIqamahAlert(hour, minute, fajr_hour, fajr_min, dhuhr_hour, dhuhr_min, asr_hour, asr_min, maghrib_hour, maghrib_min, isha_hour, isha_min);
		}
		
		
		if(oldSecond != second){
			oldSecond = second;
    1b38:	70 2e       	mov	r7, r16
			else if((minute == isha_min) && (hour == isha_hour)){
				BUZZER_toggle();
				ishaFlag = !ishaFlag;
			}
			else{
				fajrFlag=1; sunriseFlag=1; dhuhrFlag=1; asrFlag=1; maghribFlag=1; ishaFlag=1;
    1b3a:	91 e0       	ldi	r25, 0x01	; 1
    1b3c:	9d a3       	std	Y+37, r25	; 0x25
    1b3e:	21 e0       	ldi	r18, 0x01	; 1
    1b40:	2c a3       	std	Y+36, r18	; 0x24
    1b42:	31 e0       	ldi	r19, 0x01	; 1
    1b44:	3b a3       	std	Y+35, r19	; 0x23
    1b46:	81 e0       	ldi	r24, 0x01	; 1
    1b48:	8a a3       	std	Y+34, r24	; 0x22
    1b4a:	99 a3       	std	Y+33, r25	; 0x21
    1b4c:	28 a3       	std	Y+32, r18	; 0x20
			}
			
			
		}
		// Display prayer times, date, time, city code and temperature on 7-segment display
		displayPrayerTimesOn7Segment(fajrFlag, sunriseFlag, dhuhrFlag, asrFlag, maghribFlag, ishaFlag, fajr_hour, fajr_min, sunrise_hour, sunrise_min, dhuhr_hour, dhuhr_min, asr_hour, asr_min, maghrib_hour, maghrib_min, isha_hour, isha_min);
    1b4e:	8a 85       	ldd	r24, Y+10	; 0x0a
    1b50:	8f 93       	push	r24
    1b52:	88 89       	ldd	r24, Y+16	; 0x10
    1b54:	8f 93       	push	r24
    1b56:	89 85       	ldd	r24, Y+9	; 0x09
    1b58:	8f 93       	push	r24
    1b5a:	8f 85       	ldd	r24, Y+15	; 0x0f
    1b5c:	8f 93       	push	r24
    1b5e:	88 85       	ldd	r24, Y+8	; 0x08
    1b60:	8f 93       	push	r24
    1b62:	8e 85       	ldd	r24, Y+14	; 0x0e
    1b64:	8f 93       	push	r24
    1b66:	8f 81       	ldd	r24, Y+7	; 0x07
    1b68:	8f 93       	push	r24
    1b6a:	8d 85       	ldd	r24, Y+13	; 0x0d
    1b6c:	8f 93       	push	r24
    1b6e:	8c 85       	ldd	r24, Y+12	; 0x0c
    1b70:	8f 93       	push	r24
    1b72:	8a 88       	ldd	r8, Y+18	; 0x12
    1b74:	ab 84       	ldd	r10, Y+11	; 0x0b
    1b76:	c9 88       	ldd	r12, Y+17	; 0x11
    1b78:	ed a0       	ldd	r14, Y+37	; 0x25
    1b7a:	0c a1       	ldd	r16, Y+36	; 0x24
    1b7c:	2b a1       	ldd	r18, Y+35	; 0x23
    1b7e:	4a a1       	ldd	r20, Y+34	; 0x22
    1b80:	69 a1       	ldd	r22, Y+33	; 0x21
    1b82:	88 a1       	ldd	r24, Y+32	; 0x20
    1b84:	0e 94 da 0d 	call	0x1bb4	; 0x1bb4 <displayPrayerTimesOn7Segment>
		displayDateOn7Segment(day, month, year);
    1b88:	4c 89       	ldd	r20, Y+20	; 0x14
    1b8a:	5d 89       	ldd	r21, Y+21	; 0x15
    1b8c:	6e 81       	ldd	r22, Y+6	; 0x06
    1b8e:	8d 81       	ldd	r24, Y+5	; 0x05
    1b90:	0e 94 d0 19 	call	0x33a0	; 0x33a0 <displayDateOn7Segment>
		displayTimeOn7Segment(hour, minute);
    1b94:	6a 81       	ldd	r22, Y+2	; 0x02
    1b96:	8b 81       	ldd	r24, Y+3	; 0x03
    1b98:	0e 94 6c 28 	call	0x50d8	; 0x50d8 <displayTimeOn7Segment>
		displayCountryCodeOn7Segment(cityCode);
    1b9c:	8b 89       	ldd	r24, Y+19	; 0x13
    1b9e:	0e 94 2c 2b 	call	0x5658	; 0x5658 <displayCountryCodeOn7Segment>
		displayTemperatureOn7Segment(temperature);
    1ba2:	85 2d       	mov	r24, r5
    1ba4:	0e 94 53 2b 	call	0x56a6	; 0x56a6 <displayTemperatureOn7Segment>
	}
    1ba8:	0f b6       	in	r0, 0x3f	; 63
    1baa:	f8 94       	cli
    1bac:	de bf       	out	0x3e, r29	; 62
    1bae:	0f be       	out	0x3f, r0	; 63
    1bb0:	cd bf       	out	0x3d, r28	; 61
    1bb2:	c0 cd       	rjmp	.-1152   	; 0x1734 <main+0xc8>

Disassembly of section .text.ADC_init:

0000536e <ADC_init>:
/*______________________________________________________________________________
 |                               Functions Definitions                          |
 |______________________________________________________________________________|
 */

void ADC_init(const ADC_ConfigType * Config_Ptr){
    536e:	a8 2f       	mov	r26, r24
    5370:	cb 01       	movw	r24, r22

	switch(Config_Ptr->ref_volt){
    5372:	fc 01       	movw	r30, r24
    5374:	24 91       	lpm	r18, Z
    5376:	a7 fd       	sbrc	r26, 7
    5378:	20 81       	ld	r18, Z
    537a:	21 30       	cpi	r18, 0x01	; 1
    537c:	19 f0       	breq	.+6      	; 0x5384 <ADC_init+0x16>
    537e:	23 30       	cpi	r18, 0x03	; 3
    5380:	71 f0       	breq	.+28     	; 0x539e <ADC_init+0x30>
    5382:	19 c0       	rjmp	.+50     	; 0x53b6 <ADC_init+0x48>
	case Ext_AVCC:
		ADC_RefVoltValue = 5;
    5384:	40 e0       	ldi	r20, 0x00	; 0
    5386:	50 e0       	ldi	r21, 0x00	; 0
    5388:	60 ea       	ldi	r22, 0xA0	; 160
    538a:	70 e4       	ldi	r23, 0x40	; 64
    538c:	40 93 60 00 	sts	0x0060, r20	; 0x800060 <__DATA_REGION_ORIGIN__>
    5390:	50 93 61 00 	sts	0x0061, r21	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
    5394:	60 93 62 00 	sts	0x0062, r22	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
    5398:	70 93 63 00 	sts	0x0063, r23	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
		break;
    539c:	0c c0       	rjmp	.+24     	; 0x53b6 <ADC_init+0x48>

	case Int_2_56V:
		ADC_RefVoltValue = 2.56;
    539e:	4a e0       	ldi	r20, 0x0A	; 10
    53a0:	57 ed       	ldi	r21, 0xD7	; 215
    53a2:	63 e2       	ldi	r22, 0x23	; 35
    53a4:	70 e4       	ldi	r23, 0x40	; 64
    53a6:	40 93 60 00 	sts	0x0060, r20	; 0x800060 <__DATA_REGION_ORIGIN__>
    53aa:	50 93 61 00 	sts	0x0061, r21	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
    53ae:	60 93 62 00 	sts	0x0062, r22	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
    53b2:	70 93 63 00 	sts	0x0063, r23	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
	/* ADMUX Register Bits Description:
	 -> REFS1:0 = 01 to choose the reference voltage
	 -> ADLAR   = 0 (right adjusted)
	 -> MUX4:0  = 00000 to choose channel 0 as initialization
	 */
	ADMUX = (ADMUX & 0x3F) | ((Config_Ptr->ref_volt)<<6);
    53b6:	47 b1       	in	r20, 0x07	; 7
    53b8:	fc 01       	movw	r30, r24
    53ba:	24 91       	lpm	r18, Z
    53bc:	a7 fd       	sbrc	r26, 7
    53be:	20 81       	ld	r18, Z
    53c0:	50 e4       	ldi	r21, 0x40	; 64
    53c2:	25 9f       	mul	r18, r21
    53c4:	90 01       	movw	r18, r0
    53c6:	11 24       	eor	r1, r1
    53c8:	4f 73       	andi	r20, 0x3F	; 63
    53ca:	24 2b       	or	r18, r20
    53cc:	27 b9       	out	0x07, r18	; 7
	 -> ADEN    = 1 Enable ADC
	 -> ADIE    = 0 Disable ADC Interrupt
	 -> ADATE   = 0 Disable Auto Trigger
	 -> ADPS2:0  = selecting the prescaler.
	 */
	ADCSRA = (1<<ADEN) | ((ADCSRA & 0xF8) | (Config_Ptr->prescaler));
    53ce:	26 b1       	in	r18, 0x06	; 6
    53d0:	01 96       	adiw	r24, 0x01	; 1
    53d2:	a1 1d       	adc	r26, r1
    53d4:	fc 01       	movw	r30, r24
    53d6:	84 91       	lpm	r24, Z
    53d8:	a7 fd       	sbrc	r26, 7
    53da:	80 81       	ld	r24, Z
    53dc:	28 7f       	andi	r18, 0xF8	; 248
    53de:	82 2b       	or	r24, r18
    53e0:	80 68       	ori	r24, 0x80	; 128
    53e2:	86 b9       	out	0x06, r24	; 6
    53e4:	08 95       	ret

Disassembly of section .text.ADC_readChannel:

00005af0 <ADC_readChannel>:
}

uint16 ADC_readChannel(uint8 ch_num){

	/* Choosing the correct channel by setting the channel number in MUX4:0 bits */
	ADMUX = (ADMUX & 0xE0)|(ch_num & 0x1F);
    5af0:	97 b1       	in	r25, 0x07	; 7
    5af2:	90 7e       	andi	r25, 0xE0	; 224
    5af4:	8f 71       	andi	r24, 0x1F	; 31
    5af6:	89 2b       	or	r24, r25
    5af8:	87 b9       	out	0x07, r24	; 7

	SET_BIT(ADCSRA , ADSC);	/* Start conversion write '1' to ADSC */
    5afa:	86 b1       	in	r24, 0x06	; 6
    5afc:	80 64       	ori	r24, 0x40	; 64
    5afe:	86 b9       	out	0x06, r24	; 6

	while(BIT_IS_CLEAR(ADCSRA,ADIF));	/* Wait for conversion to complete, ADIF becomes '1' */
    5b00:	34 9b       	sbis	0x06, 4	; 6
    5b02:	fe cf       	rjmp	.-4      	; 0x5b00 <ADC_readChannel+0x10>

	SET_BIT(ADCSRA,ADIF);	/* Clear ADIF by write '1' to it :) */
    5b04:	86 b1       	in	r24, 0x06	; 6
    5b06:	80 61       	ori	r24, 0x10	; 16
    5b08:	86 b9       	out	0x06, r24	; 6

	return ADC;	/* Read the digital value from the data register */
    5b0a:	84 b1       	in	r24, 0x04	; 4
    5b0c:	95 b1       	in	r25, 0x05	; 5
}
    5b0e:	08 95       	ret

Disassembly of section .text.GPIO_setupPinDirection:

00004bda <GPIO_setupPinDirection>:
	/*
	 -> Check if the input port number is greater than NUM_OF_PINS_PER_PORT value.
	    Or if the input pin number is greater than NUM_OF_PINS_PER_PORT value.
	 -> In this case the input is not valid port/pin number
	 */
	if((pin_num >= NUM_OF_PINS_PER_PORT) || (port_num >= NUM_OF_PORTS))
    4bda:	68 30       	cpi	r22, 0x08	; 8
    4bdc:	08 f0       	brcs	.+2      	; 0x4be0 <GPIO_setupPinDirection+0x6>
    4bde:	6f c0       	rjmp	.+222    	; 0x4cbe <GPIO_setupPinDirection+0xe4>
    4be0:	84 30       	cpi	r24, 0x04	; 4
    4be2:	08 f0       	brcs	.+2      	; 0x4be6 <GPIO_setupPinDirection+0xc>
    4be4:	6c c0       	rjmp	.+216    	; 0x4cbe <GPIO_setupPinDirection+0xe4>
		/* Do Nothing */
	}
	else
	{
		/* Setup the pin direction as required */
		switch(port_num)
    4be6:	81 30       	cpi	r24, 0x01	; 1
    4be8:	01 f1       	breq	.+64     	; 0x4c2a <GPIO_setupPinDirection+0x50>
    4bea:	30 f0       	brcs	.+12     	; 0x4bf8 <GPIO_setupPinDirection+0x1e>
    4bec:	82 30       	cpi	r24, 0x02	; 2
    4bee:	b1 f1       	breq	.+108    	; 0x4c5c <GPIO_setupPinDirection+0x82>
    4bf0:	83 30       	cpi	r24, 0x03	; 3
    4bf2:	09 f4       	brne	.+2      	; 0x4bf6 <GPIO_setupPinDirection+0x1c>
    4bf4:	4c c0       	rjmp	.+152    	; 0x4c8e <GPIO_setupPinDirection+0xb4>
    4bf6:	08 95       	ret
		{
		case PORTA_ID:
			if(direction == PIN_OUTPUT)
    4bf8:	41 30       	cpi	r20, 0x01	; 1
    4bfa:	59 f4       	brne	.+22     	; 0x4c12 <GPIO_setupPinDirection+0x38>
			{
				SET_BIT(DDRA,pin_num);
    4bfc:	2a b3       	in	r18, 0x1a	; 26
    4bfe:	81 e0       	ldi	r24, 0x01	; 1
    4c00:	90 e0       	ldi	r25, 0x00	; 0
    4c02:	02 c0       	rjmp	.+4      	; 0x4c08 <GPIO_setupPinDirection+0x2e>
    4c04:	88 0f       	add	r24, r24
    4c06:	99 1f       	adc	r25, r25
    4c08:	6a 95       	dec	r22
    4c0a:	e2 f7       	brpl	.-8      	; 0x4c04 <GPIO_setupPinDirection+0x2a>
    4c0c:	82 2b       	or	r24, r18
    4c0e:	8a bb       	out	0x1a, r24	; 26
    4c10:	08 95       	ret
			}
			else
			{
				CLEAR_BIT(DDRA,pin_num);
    4c12:	2a b3       	in	r18, 0x1a	; 26
    4c14:	81 e0       	ldi	r24, 0x01	; 1
    4c16:	90 e0       	ldi	r25, 0x00	; 0
    4c18:	02 c0       	rjmp	.+4      	; 0x4c1e <GPIO_setupPinDirection+0x44>
    4c1a:	88 0f       	add	r24, r24
    4c1c:	99 1f       	adc	r25, r25
    4c1e:	6a 95       	dec	r22
    4c20:	e2 f7       	brpl	.-8      	; 0x4c1a <GPIO_setupPinDirection+0x40>
    4c22:	80 95       	com	r24
    4c24:	82 23       	and	r24, r18
    4c26:	8a bb       	out	0x1a, r24	; 26
    4c28:	08 95       	ret
			}
			break;
		case PORTB_ID:
			if(direction == PIN_OUTPUT)
    4c2a:	41 30       	cpi	r20, 0x01	; 1
    4c2c:	59 f4       	brne	.+22     	; 0x4c44 <GPIO_setupPinDirection+0x6a>
			{
				SET_BIT(DDRB,pin_num);
    4c2e:	27 b3       	in	r18, 0x17	; 23
    4c30:	81 e0       	ldi	r24, 0x01	; 1
    4c32:	90 e0       	ldi	r25, 0x00	; 0
    4c34:	02 c0       	rjmp	.+4      	; 0x4c3a <GPIO_setupPinDirection+0x60>
    4c36:	88 0f       	add	r24, r24
    4c38:	99 1f       	adc	r25, r25
    4c3a:	6a 95       	dec	r22
    4c3c:	e2 f7       	brpl	.-8      	; 0x4c36 <GPIO_setupPinDirection+0x5c>
    4c3e:	82 2b       	or	r24, r18
    4c40:	87 bb       	out	0x17, r24	; 23
    4c42:	08 95       	ret
			}
			else
			{
				CLEAR_BIT(DDRB,pin_num);
    4c44:	27 b3       	in	r18, 0x17	; 23
    4c46:	81 e0       	ldi	r24, 0x01	; 1
    4c48:	90 e0       	ldi	r25, 0x00	; 0
    4c4a:	02 c0       	rjmp	.+4      	; 0x4c50 <GPIO_setupPinDirection+0x76>
    4c4c:	88 0f       	add	r24, r24
    4c4e:	99 1f       	adc	r25, r25
    4c50:	6a 95       	dec	r22
    4c52:	e2 f7       	brpl	.-8      	; 0x4c4c <GPIO_setupPinDirection+0x72>
    4c54:	80 95       	com	r24
    4c56:	82 23       	and	r24, r18
    4c58:	87 bb       	out	0x17, r24	; 23
    4c5a:	08 95       	ret
			}
			break;
		case PORTC_ID:
			if(direction == PIN_OUTPUT)
    4c5c:	41 30       	cpi	r20, 0x01	; 1
    4c5e:	59 f4       	brne	.+22     	; 0x4c76 <GPIO_setupPinDirection+0x9c>
			{
				SET_BIT(DDRC,pin_num);
    4c60:	24 b3       	in	r18, 0x14	; 20
    4c62:	81 e0       	ldi	r24, 0x01	; 1
    4c64:	90 e0       	ldi	r25, 0x00	; 0
    4c66:	02 c0       	rjmp	.+4      	; 0x4c6c <GPIO_setupPinDirection+0x92>
    4c68:	88 0f       	add	r24, r24
    4c6a:	99 1f       	adc	r25, r25
    4c6c:	6a 95       	dec	r22
    4c6e:	e2 f7       	brpl	.-8      	; 0x4c68 <GPIO_setupPinDirection+0x8e>
    4c70:	82 2b       	or	r24, r18
    4c72:	84 bb       	out	0x14, r24	; 20
    4c74:	08 95       	ret
			}
			else
			{
				CLEAR_BIT(DDRC,pin_num);
    4c76:	24 b3       	in	r18, 0x14	; 20
    4c78:	81 e0       	ldi	r24, 0x01	; 1
    4c7a:	90 e0       	ldi	r25, 0x00	; 0
    4c7c:	02 c0       	rjmp	.+4      	; 0x4c82 <GPIO_setupPinDirection+0xa8>
    4c7e:	88 0f       	add	r24, r24
    4c80:	99 1f       	adc	r25, r25
    4c82:	6a 95       	dec	r22
    4c84:	e2 f7       	brpl	.-8      	; 0x4c7e <GPIO_setupPinDirection+0xa4>
    4c86:	80 95       	com	r24
    4c88:	82 23       	and	r24, r18
    4c8a:	84 bb       	out	0x14, r24	; 20
    4c8c:	08 95       	ret
			}
			break;
		case PORTD_ID:
			if(direction == PIN_OUTPUT)
    4c8e:	41 30       	cpi	r20, 0x01	; 1
    4c90:	59 f4       	brne	.+22     	; 0x4ca8 <GPIO_setupPinDirection+0xce>
			{
				SET_BIT(DDRD,pin_num);
    4c92:	21 b3       	in	r18, 0x11	; 17
    4c94:	81 e0       	ldi	r24, 0x01	; 1
    4c96:	90 e0       	ldi	r25, 0x00	; 0
    4c98:	02 c0       	rjmp	.+4      	; 0x4c9e <GPIO_setupPinDirection+0xc4>
    4c9a:	88 0f       	add	r24, r24
    4c9c:	99 1f       	adc	r25, r25
    4c9e:	6a 95       	dec	r22
    4ca0:	e2 f7       	brpl	.-8      	; 0x4c9a <GPIO_setupPinDirection+0xc0>
    4ca2:	82 2b       	or	r24, r18
    4ca4:	81 bb       	out	0x11, r24	; 17
    4ca6:	08 95       	ret
			}
			else
			{
				CLEAR_BIT(DDRD,pin_num);
    4ca8:	21 b3       	in	r18, 0x11	; 17
    4caa:	81 e0       	ldi	r24, 0x01	; 1
    4cac:	90 e0       	ldi	r25, 0x00	; 0
    4cae:	02 c0       	rjmp	.+4      	; 0x4cb4 <GPIO_setupPinDirection+0xda>
    4cb0:	88 0f       	add	r24, r24
    4cb2:	99 1f       	adc	r25, r25
    4cb4:	6a 95       	dec	r22
    4cb6:	e2 f7       	brpl	.-8      	; 0x4cb0 <GPIO_setupPinDirection+0xd6>
    4cb8:	80 95       	com	r24
    4cba:	82 23       	and	r24, r18
    4cbc:	81 bb       	out	0x11, r24	; 17
    4cbe:	08 95       	ret

Disassembly of section .text.GPIO_writePin:

00004cc0 <GPIO_writePin>:
	/*
	 -> Check if the input port number is greater than NUM_OF_PINS_PER_PORT value.
	    Or if the input pin number is greater than NUM_OF_PINS_PER_PORT value.
	 -> In this case the input is not valid port/pin number
	 */
	if((pin_num >= NUM_OF_PINS_PER_PORT) || (port_num >= NUM_OF_PORTS))
    4cc0:	68 30       	cpi	r22, 0x08	; 8
    4cc2:	08 f0       	brcs	.+2      	; 0x4cc6 <GPIO_writePin+0x6>
    4cc4:	6f c0       	rjmp	.+222    	; 0x4da4 <GPIO_writePin+0xe4>
    4cc6:	84 30       	cpi	r24, 0x04	; 4
    4cc8:	08 f0       	brcs	.+2      	; 0x4ccc <GPIO_writePin+0xc>
    4cca:	6c c0       	rjmp	.+216    	; 0x4da4 <GPIO_writePin+0xe4>
		/* Do Nothing */
	}
	else
	{
		/* Write the pin value as required */
		switch(port_num)
    4ccc:	81 30       	cpi	r24, 0x01	; 1
    4cce:	01 f1       	breq	.+64     	; 0x4d10 <GPIO_writePin+0x50>
    4cd0:	30 f0       	brcs	.+12     	; 0x4cde <GPIO_writePin+0x1e>
    4cd2:	82 30       	cpi	r24, 0x02	; 2
    4cd4:	b1 f1       	breq	.+108    	; 0x4d42 <GPIO_writePin+0x82>
    4cd6:	83 30       	cpi	r24, 0x03	; 3
    4cd8:	09 f4       	brne	.+2      	; 0x4cdc <GPIO_writePin+0x1c>
    4cda:	4c c0       	rjmp	.+152    	; 0x4d74 <GPIO_writePin+0xb4>
    4cdc:	08 95       	ret
		{
		case PORTA_ID:
			if(value == LOGIC_HIGH)
    4cde:	41 30       	cpi	r20, 0x01	; 1
    4ce0:	59 f4       	brne	.+22     	; 0x4cf8 <GPIO_writePin+0x38>
			{
				SET_BIT(PORTA,pin_num);
    4ce2:	2b b3       	in	r18, 0x1b	; 27
    4ce4:	81 e0       	ldi	r24, 0x01	; 1
    4ce6:	90 e0       	ldi	r25, 0x00	; 0
    4ce8:	02 c0       	rjmp	.+4      	; 0x4cee <GPIO_writePin+0x2e>
    4cea:	88 0f       	add	r24, r24
    4cec:	99 1f       	adc	r25, r25
    4cee:	6a 95       	dec	r22
    4cf0:	e2 f7       	brpl	.-8      	; 0x4cea <GPIO_writePin+0x2a>
    4cf2:	82 2b       	or	r24, r18
    4cf4:	8b bb       	out	0x1b, r24	; 27
    4cf6:	08 95       	ret
			}
			else
			{
				CLEAR_BIT(PORTA,pin_num);
    4cf8:	2b b3       	in	r18, 0x1b	; 27
    4cfa:	81 e0       	ldi	r24, 0x01	; 1
    4cfc:	90 e0       	ldi	r25, 0x00	; 0
    4cfe:	02 c0       	rjmp	.+4      	; 0x4d04 <GPIO_writePin+0x44>
    4d00:	88 0f       	add	r24, r24
    4d02:	99 1f       	adc	r25, r25
    4d04:	6a 95       	dec	r22
    4d06:	e2 f7       	brpl	.-8      	; 0x4d00 <GPIO_writePin+0x40>
    4d08:	80 95       	com	r24
    4d0a:	82 23       	and	r24, r18
    4d0c:	8b bb       	out	0x1b, r24	; 27
    4d0e:	08 95       	ret
			}
			break;
		case PORTB_ID:
			if(value == LOGIC_HIGH)
    4d10:	41 30       	cpi	r20, 0x01	; 1
    4d12:	59 f4       	brne	.+22     	; 0x4d2a <GPIO_writePin+0x6a>
			{
				SET_BIT(PORTB,pin_num);
    4d14:	28 b3       	in	r18, 0x18	; 24
    4d16:	81 e0       	ldi	r24, 0x01	; 1
    4d18:	90 e0       	ldi	r25, 0x00	; 0
    4d1a:	02 c0       	rjmp	.+4      	; 0x4d20 <GPIO_writePin+0x60>
    4d1c:	88 0f       	add	r24, r24
    4d1e:	99 1f       	adc	r25, r25
    4d20:	6a 95       	dec	r22
    4d22:	e2 f7       	brpl	.-8      	; 0x4d1c <GPIO_writePin+0x5c>
    4d24:	82 2b       	or	r24, r18
    4d26:	88 bb       	out	0x18, r24	; 24
    4d28:	08 95       	ret
			}
			else
			{
				CLEAR_BIT(PORTB,pin_num);
    4d2a:	28 b3       	in	r18, 0x18	; 24
    4d2c:	81 e0       	ldi	r24, 0x01	; 1
    4d2e:	90 e0       	ldi	r25, 0x00	; 0
    4d30:	02 c0       	rjmp	.+4      	; 0x4d36 <GPIO_writePin+0x76>
    4d32:	88 0f       	add	r24, r24
    4d34:	99 1f       	adc	r25, r25
    4d36:	6a 95       	dec	r22
    4d38:	e2 f7       	brpl	.-8      	; 0x4d32 <GPIO_writePin+0x72>
    4d3a:	80 95       	com	r24
    4d3c:	82 23       	and	r24, r18
    4d3e:	88 bb       	out	0x18, r24	; 24
    4d40:	08 95       	ret
			}
			break;
		case PORTC_ID:
			if(value == LOGIC_HIGH)
    4d42:	41 30       	cpi	r20, 0x01	; 1
    4d44:	59 f4       	brne	.+22     	; 0x4d5c <GPIO_writePin+0x9c>
			{
				SET_BIT(PORTC,pin_num);
    4d46:	25 b3       	in	r18, 0x15	; 21
    4d48:	81 e0       	ldi	r24, 0x01	; 1
    4d4a:	90 e0       	ldi	r25, 0x00	; 0
    4d4c:	02 c0       	rjmp	.+4      	; 0x4d52 <GPIO_writePin+0x92>
    4d4e:	88 0f       	add	r24, r24
    4d50:	99 1f       	adc	r25, r25
    4d52:	6a 95       	dec	r22
    4d54:	e2 f7       	brpl	.-8      	; 0x4d4e <GPIO_writePin+0x8e>
    4d56:	82 2b       	or	r24, r18
    4d58:	85 bb       	out	0x15, r24	; 21
    4d5a:	08 95       	ret
			}
			else
			{
				CLEAR_BIT(PORTC,pin_num);
    4d5c:	25 b3       	in	r18, 0x15	; 21
    4d5e:	81 e0       	ldi	r24, 0x01	; 1
    4d60:	90 e0       	ldi	r25, 0x00	; 0
    4d62:	02 c0       	rjmp	.+4      	; 0x4d68 <GPIO_writePin+0xa8>
    4d64:	88 0f       	add	r24, r24
    4d66:	99 1f       	adc	r25, r25
    4d68:	6a 95       	dec	r22
    4d6a:	e2 f7       	brpl	.-8      	; 0x4d64 <GPIO_writePin+0xa4>
    4d6c:	80 95       	com	r24
    4d6e:	82 23       	and	r24, r18
    4d70:	85 bb       	out	0x15, r24	; 21
    4d72:	08 95       	ret
			}
			break;
		case PORTD_ID:
			if(value == LOGIC_HIGH)
    4d74:	41 30       	cpi	r20, 0x01	; 1
    4d76:	59 f4       	brne	.+22     	; 0x4d8e <GPIO_writePin+0xce>
			{
				SET_BIT(PORTD,pin_num);
    4d78:	22 b3       	in	r18, 0x12	; 18
    4d7a:	81 e0       	ldi	r24, 0x01	; 1
    4d7c:	90 e0       	ldi	r25, 0x00	; 0
    4d7e:	02 c0       	rjmp	.+4      	; 0x4d84 <GPIO_writePin+0xc4>
    4d80:	88 0f       	add	r24, r24
    4d82:	99 1f       	adc	r25, r25
    4d84:	6a 95       	dec	r22
    4d86:	e2 f7       	brpl	.-8      	; 0x4d80 <GPIO_writePin+0xc0>
    4d88:	82 2b       	or	r24, r18
    4d8a:	82 bb       	out	0x12, r24	; 18
    4d8c:	08 95       	ret
			}
			else
			{
				CLEAR_BIT(PORTD,pin_num);
    4d8e:	22 b3       	in	r18, 0x12	; 18
    4d90:	81 e0       	ldi	r24, 0x01	; 1
    4d92:	90 e0       	ldi	r25, 0x00	; 0
    4d94:	02 c0       	rjmp	.+4      	; 0x4d9a <GPIO_writePin+0xda>
    4d96:	88 0f       	add	r24, r24
    4d98:	99 1f       	adc	r25, r25
    4d9a:	6a 95       	dec	r22
    4d9c:	e2 f7       	brpl	.-8      	; 0x4d96 <GPIO_writePin+0xd6>
    4d9e:	80 95       	com	r24
    4da0:	82 23       	and	r24, r18
    4da2:	82 bb       	out	0x12, r24	; 18
    4da4:	08 95       	ret

Disassembly of section .text.GPIO_togglePin:

00005458 <GPIO_togglePin>:
    /*
     * Check if the input port number is greater than or equal to NUM_OF_PORTS,
     * or if the input pin number is greater than or equal to NUM_OF_PINS_PER_PORT.
     * In such cases, the input is not a valid port/pin number.
     */
    if (port_num >= NUM_OF_PORTS || pin_num >= NUM_OF_PINS_PER_PORT)
    5458:	84 30       	cpi	r24, 0x04	; 4
    545a:	a8 f5       	brcc	.+106    	; 0x54c6 <GPIO_togglePin+0x6e>
    545c:	68 30       	cpi	r22, 0x08	; 8
    545e:	98 f5       	brcc	.+102    	; 0x54c6 <GPIO_togglePin+0x6e>
        /* Invalid port/pin number, do nothing */
        return;
    }

    /* Toggle the pin value */
    switch (port_num)
    5460:	81 30       	cpi	r24, 0x01	; 1
    5462:	89 f0       	breq	.+34     	; 0x5486 <GPIO_togglePin+0x2e>
    5464:	28 f0       	brcs	.+10     	; 0x5470 <GPIO_togglePin+0x18>
    5466:	82 30       	cpi	r24, 0x02	; 2
    5468:	c9 f0       	breq	.+50     	; 0x549c <GPIO_togglePin+0x44>
    546a:	83 30       	cpi	r24, 0x03	; 3
    546c:	11 f1       	breq	.+68     	; 0x54b2 <GPIO_togglePin+0x5a>
    546e:	08 95       	ret
    {
    case PORTA_ID:
        TOGGLE_BIT(PORTA, pin_num);
    5470:	2b b3       	in	r18, 0x1b	; 27
    5472:	81 e0       	ldi	r24, 0x01	; 1
    5474:	90 e0       	ldi	r25, 0x00	; 0
    5476:	02 c0       	rjmp	.+4      	; 0x547c <GPIO_togglePin+0x24>
    5478:	88 0f       	add	r24, r24
    547a:	99 1f       	adc	r25, r25
    547c:	6a 95       	dec	r22
    547e:	e2 f7       	brpl	.-8      	; 0x5478 <GPIO_togglePin+0x20>
    5480:	82 27       	eor	r24, r18
    5482:	8b bb       	out	0x1b, r24	; 27
        break;
    5484:	08 95       	ret
    case PORTB_ID:
        TOGGLE_BIT(PORTB, pin_num);
    5486:	28 b3       	in	r18, 0x18	; 24
    5488:	81 e0       	ldi	r24, 0x01	; 1
    548a:	90 e0       	ldi	r25, 0x00	; 0
    548c:	02 c0       	rjmp	.+4      	; 0x5492 <GPIO_togglePin+0x3a>
    548e:	88 0f       	add	r24, r24
    5490:	99 1f       	adc	r25, r25
    5492:	6a 95       	dec	r22
    5494:	e2 f7       	brpl	.-8      	; 0x548e <GPIO_togglePin+0x36>
    5496:	82 27       	eor	r24, r18
    5498:	88 bb       	out	0x18, r24	; 24
        break;
    549a:	08 95       	ret
    case PORTC_ID:
        TOGGLE_BIT(PORTC, pin_num);
    549c:	25 b3       	in	r18, 0x15	; 21
    549e:	81 e0       	ldi	r24, 0x01	; 1
    54a0:	90 e0       	ldi	r25, 0x00	; 0
    54a2:	02 c0       	rjmp	.+4      	; 0x54a8 <GPIO_togglePin+0x50>
    54a4:	88 0f       	add	r24, r24
    54a6:	99 1f       	adc	r25, r25
    54a8:	6a 95       	dec	r22
    54aa:	e2 f7       	brpl	.-8      	; 0x54a4 <GPIO_togglePin+0x4c>
    54ac:	82 27       	eor	r24, r18
    54ae:	85 bb       	out	0x15, r24	; 21
        break;
    54b0:	08 95       	ret
    case PORTD_ID:
        TOGGLE_BIT(PORTD, pin_num);
    54b2:	22 b3       	in	r18, 0x12	; 18
    54b4:	81 e0       	ldi	r24, 0x01	; 1
    54b6:	90 e0       	ldi	r25, 0x00	; 0
    54b8:	02 c0       	rjmp	.+4      	; 0x54be <GPIO_togglePin+0x66>
    54ba:	88 0f       	add	r24, r24
    54bc:	99 1f       	adc	r25, r25
    54be:	6a 95       	dec	r22
    54c0:	e2 f7       	brpl	.-8      	; 0x54ba <GPIO_togglePin+0x62>
    54c2:	82 27       	eor	r24, r18
    54c4:	82 bb       	out	0x12, r24	; 18
    54c6:	08 95       	ret

Disassembly of section .text.GPIO_readPin:

00005170 <GPIO_readPin>:
	/*
	 -> Check if the input port number is greater than NUM_OF_PINS_PER_PORT value.
	    Or if the input pin number is greater than NUM_OF_PINS_PER_PORT value.
	 -> In this case the input is not valid port/pin number
	 */
	if((pin_num >= NUM_OF_PINS_PER_PORT) || (port_num >= NUM_OF_PORTS))
    5170:	68 30       	cpi	r22, 0x08	; 8
    5172:	b0 f5       	brcc	.+108    	; 0x51e0 <GPIO_readPin+0x70>
    5174:	84 30       	cpi	r24, 0x04	; 4
    5176:	b0 f5       	brcc	.+108    	; 0x51e4 <GPIO_readPin+0x74>
		/* Do Nothing */
	}
	else
	{
		/* Read the pin value as required */
		switch(port_num)
    5178:	81 30       	cpi	r24, 0x01	; 1
    517a:	89 f0       	breq	.+34     	; 0x519e <GPIO_readPin+0x2e>
    517c:	28 f0       	brcs	.+10     	; 0x5188 <GPIO_readPin+0x18>
    517e:	82 30       	cpi	r24, 0x02	; 2
    5180:	c9 f0       	breq	.+50     	; 0x51b4 <GPIO_readPin+0x44>
    5182:	83 30       	cpi	r24, 0x03	; 3
    5184:	11 f1       	breq	.+68     	; 0x51ca <GPIO_readPin+0x5a>
    5186:	30 c0       	rjmp	.+96     	; 0x51e8 <GPIO_readPin+0x78>
		{
		case PORTA_ID:
			if(BIT_IS_SET(PINA,pin_num))
    5188:	89 b3       	in	r24, 0x19	; 25
    518a:	90 e0       	ldi	r25, 0x00	; 0
    518c:	02 c0       	rjmp	.+4      	; 0x5192 <GPIO_readPin+0x22>
    518e:	95 95       	asr	r25
    5190:	87 95       	ror	r24
    5192:	6a 95       	dec	r22
    5194:	e2 f7       	brpl	.-8      	; 0x518e <GPIO_readPin+0x1e>
    5196:	80 ff       	sbrs	r24, 0
    5198:	29 c0       	rjmp	.+82     	; 0x51ec <GPIO_readPin+0x7c>
			{
				pin_value = LOGIC_HIGH;
    519a:	81 e0       	ldi	r24, 0x01	; 1
    519c:	08 95       	ret
			{
				pin_value = LOGIC_LOW;
			}
			break;
		case PORTB_ID:
			if(BIT_IS_SET(PINB,pin_num))
    519e:	86 b3       	in	r24, 0x16	; 22
    51a0:	90 e0       	ldi	r25, 0x00	; 0
    51a2:	02 c0       	rjmp	.+4      	; 0x51a8 <GPIO_readPin+0x38>
    51a4:	95 95       	asr	r25
    51a6:	87 95       	ror	r24
    51a8:	6a 95       	dec	r22
    51aa:	e2 f7       	brpl	.-8      	; 0x51a4 <GPIO_readPin+0x34>
    51ac:	80 ff       	sbrs	r24, 0
    51ae:	20 c0       	rjmp	.+64     	; 0x51f0 <GPIO_readPin+0x80>
			{
				pin_value = LOGIC_HIGH;
    51b0:	81 e0       	ldi	r24, 0x01	; 1
    51b2:	08 95       	ret
			{
				pin_value = LOGIC_LOW;
			}
			break;
		case PORTC_ID:
			if(BIT_IS_SET(PINC,pin_num))
    51b4:	83 b3       	in	r24, 0x13	; 19
    51b6:	90 e0       	ldi	r25, 0x00	; 0
    51b8:	02 c0       	rjmp	.+4      	; 0x51be <GPIO_readPin+0x4e>
    51ba:	95 95       	asr	r25
    51bc:	87 95       	ror	r24
    51be:	6a 95       	dec	r22
    51c0:	e2 f7       	brpl	.-8      	; 0x51ba <GPIO_readPin+0x4a>
    51c2:	80 ff       	sbrs	r24, 0
    51c4:	17 c0       	rjmp	.+46     	; 0x51f4 <GPIO_readPin+0x84>
			{
				pin_value = LOGIC_HIGH;
    51c6:	81 e0       	ldi	r24, 0x01	; 1
    51c8:	08 95       	ret
			{
				pin_value = LOGIC_LOW;
			}
			break;
		case PORTD_ID:
			if(BIT_IS_SET(PIND,pin_num))
    51ca:	80 b3       	in	r24, 0x10	; 16
    51cc:	90 e0       	ldi	r25, 0x00	; 0
    51ce:	02 c0       	rjmp	.+4      	; 0x51d4 <GPIO_readPin+0x64>
    51d0:	95 95       	asr	r25
    51d2:	87 95       	ror	r24
    51d4:	6a 95       	dec	r22
    51d6:	e2 f7       	brpl	.-8      	; 0x51d0 <GPIO_readPin+0x60>
    51d8:	80 ff       	sbrs	r24, 0
    51da:	0e c0       	rjmp	.+28     	; 0x51f8 <GPIO_readPin+0x88>
			{
				pin_value = LOGIC_HIGH;
    51dc:	81 e0       	ldi	r24, 0x01	; 1
    51de:	08 95       	ret
 -> Read and return the value for the required pin, it should be Logic High or Logic Low.
 -> If the input port number or pin number are not correct, The function will return Logic Low.
 */
uint8 GPIO_readPin(uint8 port_num, uint8 pin_num)
{
	uint8 pin_value = LOGIC_LOW;
    51e0:	80 e0       	ldi	r24, 0x00	; 0
    51e2:	08 95       	ret
    51e4:	80 e0       	ldi	r24, 0x00	; 0
    51e6:	08 95       	ret
    51e8:	80 e0       	ldi	r24, 0x00	; 0
    51ea:	08 95       	ret
			{
				pin_value = LOGIC_HIGH;
			}
			else
			{
				pin_value = LOGIC_LOW;
    51ec:	80 e0       	ldi	r24, 0x00	; 0
    51ee:	08 95       	ret
			{
				pin_value = LOGIC_HIGH;
			}
			else
			{
				pin_value = LOGIC_LOW;
    51f0:	80 e0       	ldi	r24, 0x00	; 0
    51f2:	08 95       	ret
			{
				pin_value = LOGIC_HIGH;
			}
			else
			{
				pin_value = LOGIC_LOW;
    51f4:	80 e0       	ldi	r24, 0x00	; 0
    51f6:	08 95       	ret
			{
				pin_value = LOGIC_HIGH;
			}
			else
			{
				pin_value = LOGIC_LOW;
    51f8:	80 e0       	ldi	r24, 0x00	; 0
			break;
		}
	}

	return pin_value;
}
    51fa:	08 95       	ret

Disassembly of section .text.GPIO_setupPortDirection:

00005a1e <GPIO_setupPortDirection>:
{
	/*
	 -> Check if the input number is greater than NUM_OF_PORTS value.
	 -> In this case the input is not valid port number
	 */
	if(port_num >= NUM_OF_PORTS)
    5a1e:	84 30       	cpi	r24, 0x04	; 4
    5a20:	78 f4       	brcc	.+30     	; 0x5a40 <GPIO_setupPortDirection+0x22>
		/* Do Nothing */
	}
	else
	{
		/* Setup the port direction as required */
		switch(port_num)
    5a22:	81 30       	cpi	r24, 0x01	; 1
    5a24:	41 f0       	breq	.+16     	; 0x5a36 <GPIO_setupPortDirection+0x18>
    5a26:	28 f0       	brcs	.+10     	; 0x5a32 <GPIO_setupPortDirection+0x14>
    5a28:	82 30       	cpi	r24, 0x02	; 2
    5a2a:	39 f0       	breq	.+14     	; 0x5a3a <GPIO_setupPortDirection+0x1c>
    5a2c:	83 30       	cpi	r24, 0x03	; 3
    5a2e:	39 f0       	breq	.+14     	; 0x5a3e <GPIO_setupPortDirection+0x20>
    5a30:	08 95       	ret
		{
		case PORTA_ID:
			DDRA = direction;
    5a32:	6a bb       	out	0x1a, r22	; 26
			break;
    5a34:	08 95       	ret
		case PORTB_ID:
			DDRB = direction;
    5a36:	67 bb       	out	0x17, r22	; 23
			break;
    5a38:	08 95       	ret
		case PORTC_ID:
			DDRC = direction;
    5a3a:	64 bb       	out	0x14, r22	; 20
			break;
    5a3c:	08 95       	ret
		case PORTD_ID:
			DDRD = direction;
    5a3e:	61 bb       	out	0x11, r22	; 17
    5a40:	08 95       	ret

Disassembly of section .text.GPIO_writePort:

00005a42 <GPIO_writePort>:
{
	/*
	 -> Check if the input number is greater than NUM_OF_PORTS value.
	 -> In this case the input is not valid port number
	 */
	if(port_num >= NUM_OF_PORTS)
    5a42:	84 30       	cpi	r24, 0x04	; 4
    5a44:	78 f4       	brcc	.+30     	; 0x5a64 <GPIO_writePort+0x22>
		/* Do Nothing */
	}
	else
	{
		/* Write the port value as required */
		switch(port_num)
    5a46:	81 30       	cpi	r24, 0x01	; 1
    5a48:	41 f0       	breq	.+16     	; 0x5a5a <GPIO_writePort+0x18>
    5a4a:	28 f0       	brcs	.+10     	; 0x5a56 <GPIO_writePort+0x14>
    5a4c:	82 30       	cpi	r24, 0x02	; 2
    5a4e:	39 f0       	breq	.+14     	; 0x5a5e <GPIO_writePort+0x1c>
    5a50:	83 30       	cpi	r24, 0x03	; 3
    5a52:	39 f0       	breq	.+14     	; 0x5a62 <GPIO_writePort+0x20>
    5a54:	08 95       	ret
		{
		case PORTA_ID:
			PORTA = value;
    5a56:	6b bb       	out	0x1b, r22	; 27
			break;
    5a58:	08 95       	ret
		case PORTB_ID:
			PORTB = value;
    5a5a:	68 bb       	out	0x18, r22	; 24
			break;
    5a5c:	08 95       	ret
		case PORTC_ID:
			PORTC = value;
    5a5e:	65 bb       	out	0x15, r22	; 21
			break;
    5a60:	08 95       	ret
		case PORTD_ID:
			PORTD = value;
    5a62:	62 bb       	out	0x12, r22	; 18
    5a64:	08 95       	ret

Disassembly of section .text.I2C_init:

00005954 <I2C_init>:
/*
 * Description :
 -> Initiate the I2C with its configurable baud rate and slave address
 */
void I2C_init(const I2C_ConfigType * Config_Ptr)
{
    5954:	a8 2f       	mov	r26, r24
    5956:	cb 01       	movw	r24, r22
    /* Bit Rate: using zero pre-scaler TWPS=00 and F_CPU=8Mhz and configurable TWBR*/

    TWBR = Config_Ptr->bit_rate;
    5958:	9c 01       	movw	r18, r24
    595a:	4a 2f       	mov	r20, r26
    595c:	2f 5f       	subi	r18, 0xFF	; 255
    595e:	3f 4f       	sbci	r19, 0xFF	; 255
    5960:	4f 4f       	sbci	r20, 0xFF	; 255
    5962:	f9 01       	movw	r30, r18
    5964:	24 91       	lpm	r18, Z
    5966:	47 fd       	sbrc	r20, 7
    5968:	20 81       	ld	r18, Z
    596a:	20 b9       	out	0x00, r18	; 0
	TWSR = 0x00;
    596c:	11 b8       	out	0x01, r1	; 1

    /* Two Wire Bus address my address if any master device want to call me: 0x1 (used in case this MC is a slave device)
       General Call Recognition: Off */

    TWAR = ((Config_Ptr->address)<<1);
    596e:	fc 01       	movw	r30, r24
    5970:	84 91       	lpm	r24, Z
    5972:	a7 fd       	sbrc	r26, 7
    5974:	80 81       	ld	r24, Z
    5976:	88 0f       	add	r24, r24
    5978:	82 b9       	out	0x02, r24	; 2

    TWCR = (1<<TWEN); /* enable I2C */
    597a:	84 e0       	ldi	r24, 0x04	; 4
    597c:	86 bf       	out	0x36, r24	; 54
    597e:	08 95       	ret

Disassembly of section .text.I2C_start:

00005806 <I2C_start>:
 -> Function to send the start bit
 */
uint8 I2C_start(uint8 write_address)/* I2C start function */
{
    uint8_t status;		/* Declare variable */
    TWCR=(1<<TWSTA)|(1<<TWEN)|(1<<TWINT); /* Enable TWI, generate START */
    5806:	94 ea       	ldi	r25, 0xA4	; 164
    5808:	96 bf       	out	0x36, r25	; 54
    while(!(TWCR&(1<<TWINT)));	/* Wait until TWI finish its current job */
    580a:	06 b6       	in	r0, 0x36	; 54
    580c:	07 fe       	sbrs	r0, 7
    580e:	fd cf       	rjmp	.-6      	; 0x580a <I2C_start+0x4>
    status=TWSR&0xF8;		/* Read TWI status register */
    5810:	91 b1       	in	r25, 0x01	; 1
    5812:	98 7f       	andi	r25, 0xF8	; 248
    if(status!=0x08)		/* Check weather START transmitted or not? */
    5814:	98 30       	cpi	r25, 0x08	; 8
    5816:	71 f4       	brne	.+28     	; 0x5834 <I2C_start+0x2e>
    return 0;			/* Return 0 to indicate start condition fail */
    TWDR=write_address;		/* Write SLA+W in TWI data register */
    5818:	83 b9       	out	0x03, r24	; 3
    TWCR=(1<<TWEN)|(1<<TWINT);	/* Enable TWI & clear interrupt flag */
    581a:	84 e8       	ldi	r24, 0x84	; 132
    581c:	86 bf       	out	0x36, r24	; 54
    while(!(TWCR&(1<<TWINT)));	/* Wait until TWI finish its current job */
    581e:	06 b6       	in	r0, 0x36	; 54
    5820:	07 fe       	sbrs	r0, 7
    5822:	fd cf       	rjmp	.-6      	; 0x581e <I2C_start+0x18>
    status=TWSR&0xF8;		/* Read TWI status register */
    5824:	81 b1       	in	r24, 0x01	; 1
    5826:	88 7f       	andi	r24, 0xF8	; 248
    if(status==0x18)		/* Check for SLA+W transmitted &ack received */
    5828:	88 31       	cpi	r24, 0x18	; 24
    582a:	31 f0       	breq	.+12     	; 0x5838 <I2C_start+0x32>
    return 1;			/* Return 1 to indicate ack received */
    if(status==0x20)		/* Check for SLA+W transmitted &nack received */
    582c:	80 32       	cpi	r24, 0x20	; 32
    582e:	31 f4       	brne	.+12     	; 0x583c <I2C_start+0x36>
    return 2;			/* Return 2 to indicate nack received */
    5830:	82 e0       	ldi	r24, 0x02	; 2
    5832:	08 95       	ret
    uint8_t status;		/* Declare variable */
    TWCR=(1<<TWSTA)|(1<<TWEN)|(1<<TWINT); /* Enable TWI, generate START */
    while(!(TWCR&(1<<TWINT)));	/* Wait until TWI finish its current job */
    status=TWSR&0xF8;		/* Read TWI status register */
    if(status!=0x08)		/* Check weather START transmitted or not? */
    return 0;			/* Return 0 to indicate start condition fail */
    5834:	80 e0       	ldi	r24, 0x00	; 0
    5836:	08 95       	ret
    TWDR=write_address;		/* Write SLA+W in TWI data register */
    TWCR=(1<<TWEN)|(1<<TWINT);	/* Enable TWI & clear interrupt flag */
    while(!(TWCR&(1<<TWINT)));	/* Wait until TWI finish its current job */
    status=TWSR&0xF8;		/* Read TWI status register */
    if(status==0x18)		/* Check for SLA+W transmitted &ack received */
    return 1;			/* Return 1 to indicate ack received */
    5838:	81 e0       	ldi	r24, 0x01	; 1
    583a:	08 95       	ret
    if(status==0x20)		/* Check for SLA+W transmitted &nack received */
    return 2;			/* Return 2 to indicate nack received */
    else
    return 3;			/* Else return 3 to indicate SLA+W failed */
    583c:	83 e0       	ldi	r24, 0x03	; 3
}
    583e:	08 95       	ret

Disassembly of section .text.I2C_repeatedStart:

00005840 <I2C_repeatedStart>:

uint8 I2C_repeatedStart(uint8 read_address) /* I2C repeated start function */
{
	uint8 status;		/* Declare variable */
    TWCR=(1<<TWSTA)|(1<<TWEN)|(1<<TWINT);/* Enable TWI, generate start */
    5840:	94 ea       	ldi	r25, 0xA4	; 164
    5842:	96 bf       	out	0x36, r25	; 54
    while(!(TWCR&(1<<TWINT)));	/* Wait until TWI finish its current job */
    5844:	06 b6       	in	r0, 0x36	; 54
    5846:	07 fe       	sbrs	r0, 7
    5848:	fd cf       	rjmp	.-6      	; 0x5844 <I2C_repeatedStart+0x4>
    status=TWSR&0xF8;		/* Read TWI status register */
    584a:	91 b1       	in	r25, 0x01	; 1
    584c:	98 7f       	andi	r25, 0xF8	; 248
    if(status!=0x10)		/* Check for repeated start transmitted */
    584e:	90 31       	cpi	r25, 0x10	; 16
    5850:	71 f4       	brne	.+28     	; 0x586e <I2C_repeatedStart+0x2e>
    return 0;			/* Return 0 for repeated start condition fail */
    TWDR=read_address;		/* Write SLA+R in TWI data register */
    5852:	83 b9       	out	0x03, r24	; 3
    TWCR=(1<<TWEN)|(1<<TWINT);	/* Enable TWI and clear interrupt flag */
    5854:	84 e8       	ldi	r24, 0x84	; 132
    5856:	86 bf       	out	0x36, r24	; 54
    while(!(TWCR&(1<<TWINT)));	/* Wait until TWI finish its current job */
    5858:	06 b6       	in	r0, 0x36	; 54
    585a:	07 fe       	sbrs	r0, 7
    585c:	fd cf       	rjmp	.-6      	; 0x5858 <I2C_repeatedStart+0x18>
    status=TWSR&0xF8;		/* Read TWI status register */
    585e:	81 b1       	in	r24, 0x01	; 1
    5860:	88 7f       	andi	r24, 0xF8	; 248
    if(status==0x40)		/* Check for SLA+R transmitted &ack received */
    5862:	80 34       	cpi	r24, 0x40	; 64
    5864:	31 f0       	breq	.+12     	; 0x5872 <I2C_repeatedStart+0x32>
    return 1;			/* Return 1 to indicate ack received */
    if(status==0x48)		/* Check for SLA+R transmitted &nack received */
    5866:	88 34       	cpi	r24, 0x48	; 72
    5868:	31 f4       	brne	.+12     	; 0x5876 <I2C_repeatedStart+0x36>
    return 2;			/* Return 2 to indicate nack received */
    586a:	82 e0       	ldi	r24, 0x02	; 2
    586c:	08 95       	ret
	uint8 status;		/* Declare variable */
    TWCR=(1<<TWSTA)|(1<<TWEN)|(1<<TWINT);/* Enable TWI, generate start */
    while(!(TWCR&(1<<TWINT)));	/* Wait until TWI finish its current job */
    status=TWSR&0xF8;		/* Read TWI status register */
    if(status!=0x10)		/* Check for repeated start transmitted */
    return 0;			/* Return 0 for repeated start condition fail */
    586e:	80 e0       	ldi	r24, 0x00	; 0
    5870:	08 95       	ret
    TWDR=read_address;		/* Write SLA+R in TWI data register */
    TWCR=(1<<TWEN)|(1<<TWINT);	/* Enable TWI and clear interrupt flag */
    while(!(TWCR&(1<<TWINT)));	/* Wait until TWI finish its current job */
    status=TWSR&0xF8;		/* Read TWI status register */
    if(status==0x40)		/* Check for SLA+R transmitted &ack received */
    return 1;			/* Return 1 to indicate ack received */
    5872:	81 e0       	ldi	r24, 0x01	; 1
    5874:	08 95       	ret
    if(status==0x48)		/* Check for SLA+R transmitted &nack received */
    return 2;			/* Return 2 to indicate nack received */
    else
    return 3;			/* Else return 3 to indicate SLA+W failed */
    5876:	83 e0       	ldi	r24, 0x03	; 3
}
    5878:	08 95       	ret

Disassembly of section .text.I2C_stop:

00005c32 <I2C_stop>:
    /* 
	 * Clear the TWINT flag before sending the stop bit TWINT=1
	 * send the stop bit by TWSTO=1
	 * Enable TWI Module TWEN=1 
	 */
    TWCR = (1 << TWINT) | (1 << TWSTO) | (1 << TWEN);
    5c32:	84 e9       	ldi	r24, 0x94	; 148
    5c34:	86 bf       	out	0x36, r24	; 54

    while(TWCR&(1<<TWSTO));	/* Wait until stop condition execution */
    5c36:	06 b6       	in	r0, 0x36	; 54
    5c38:	04 fc       	sbrc	r0, 4
    5c3a:	fd cf       	rjmp	.-6      	; 0x5c36 <I2C_stop+0x4>
}
    5c3c:	08 95       	ret

Disassembly of section .text.I2C_writeByte:

00005a66 <I2C_writeByte>:
 -> Function to send a single byte over I2C
 */
uint8 I2C_writeByte(uint8 data)	/* I2C write function */
{
    uint8 status;		/* Declare variable */
    TWDR = data;			/* Copy data in TWI data register */
    5a66:	83 b9       	out	0x03, r24	; 3
    TWCR=(1<<TWEN)|(1<<TWINT);	/* Enable TWI and clear interrupt flag */
    5a68:	84 e8       	ldi	r24, 0x84	; 132
    5a6a:	86 bf       	out	0x36, r24	; 54
    while(!(TWCR&(1<<TWINT)));	/* Wait until TWI finish its current job */
    5a6c:	06 b6       	in	r0, 0x36	; 54
    5a6e:	07 fe       	sbrs	r0, 7
    5a70:	fd cf       	rjmp	.-6      	; 0x5a6c <I2C_writeByte+0x6>
    status=TWSR&0xF8;		/* Read TWI status register */
    5a72:	81 b1       	in	r24, 0x01	; 1
    5a74:	88 7f       	andi	r24, 0xF8	; 248
    if(status==0x28)		/* Check for data transmitted &ack received */
    5a76:	88 32       	cpi	r24, 0x28	; 40
    5a78:	21 f0       	breq	.+8      	; 0x5a82 <I2C_writeByte+0x1c>
    return 0;			/* Return 0 to indicate ack received */
    if(status==0x30)		/* Check for data transmitted &nack received */
    5a7a:	80 33       	cpi	r24, 0x30	; 48
    5a7c:	21 f4       	brne	.+8      	; 0x5a86 <I2C_writeByte+0x20>
    return 1;			/* Return 1 to indicate nack received */
    5a7e:	81 e0       	ldi	r24, 0x01	; 1
    5a80:	08 95       	ret
    TWDR = data;			/* Copy data in TWI data register */
    TWCR=(1<<TWEN)|(1<<TWINT);	/* Enable TWI and clear interrupt flag */
    while(!(TWCR&(1<<TWINT)));	/* Wait until TWI finish its current job */
    status=TWSR&0xF8;		/* Read TWI status register */
    if(status==0x28)		/* Check for data transmitted &ack received */
    return 0;			/* Return 0 to indicate ack received */
    5a82:	80 e0       	ldi	r24, 0x00	; 0
    5a84:	08 95       	ret
    if(status==0x30)		/* Check for data transmitted &nack received */
    return 1;			/* Return 1 to indicate nack received */
    else
    return 2;			/* Else return 2 for data transmission failure */
    5a86:	82 e0       	ldi	r24, 0x02	; 2
}
    5a88:	08 95       	ret

Disassembly of section .text.I2C_readByteWithACK:

00005bc2 <I2C_readByteWithACK>:
	/* 
	 * Clear the TWINT flag before reading the data TWINT=1
	 * Enable sending ACK after reading or receiving data TWEA=1
	 * Enable TWI Module TWEN=1 
	 */ 
    TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWEA);
    5bc2:	84 ec       	ldi	r24, 0xC4	; 196
    5bc4:	86 bf       	out	0x36, r24	; 54
    /* Wait for TWINT flag set in TWCR Register (data received successfully) */
    while(BIT_IS_CLEAR(TWCR,TWINT));
    5bc6:	06 b6       	in	r0, 0x36	; 54
    5bc8:	07 fe       	sbrs	r0, 7
    5bca:	fd cf       	rjmp	.-6      	; 0x5bc6 <I2C_readByteWithACK+0x4>
    /* Read Data */
    return TWDR;
    5bcc:	83 b1       	in	r24, 0x03	; 3
}
    5bce:	08 95       	ret

Disassembly of section .text.I2C_readByteWithNACK:

00005bd0 <I2C_readByteWithNACK>:
{
	/* 
	 * Clear the TWINT flag before reading the data TWINT=1
	 * Enable TWI Module TWEN=1 
	 */
    TWCR = (1 << TWINT) | (1 << TWEN);
    5bd0:	84 e8       	ldi	r24, 0x84	; 132
    5bd2:	86 bf       	out	0x36, r24	; 54
    /* Wait for TWINT flag set in TWCR Register (data received successfully) */
    while(BIT_IS_CLEAR(TWCR,TWINT));
    5bd4:	06 b6       	in	r0, 0x36	; 54
    5bd6:	07 fe       	sbrs	r0, 7
    5bd8:	fd cf       	rjmp	.-6      	; 0x5bd4 <I2C_readByteWithNACK+0x4>
    /* Read Data */
    return TWDR;
    5bda:	83 b1       	in	r24, 0x03	; 3
}
    5bdc:	08 95       	ret

Disassembly of section .text.acosf:

00001f38 <acosf>:
    1f38:	4f 92       	push	r4
    1f3a:	5f 92       	push	r5
    1f3c:	6f 92       	push	r6
    1f3e:	7f 92       	push	r7
    1f40:	8f 92       	push	r8
    1f42:	9f 92       	push	r9
    1f44:	af 92       	push	r10
    1f46:	bf 92       	push	r11
    1f48:	cf 92       	push	r12
    1f4a:	df 92       	push	r13
    1f4c:	ef 92       	push	r14
    1f4e:	ff 92       	push	r15
    1f50:	cf 93       	push	r28
    1f52:	df 93       	push	r29
    1f54:	00 d0       	rcall	.+0      	; 0x1f56 <acosf+0x1e>
    1f56:	00 d0       	rcall	.+0      	; 0x1f58 <acosf+0x20>
    1f58:	cd b7       	in	r28, 0x3d	; 61
    1f5a:	de b7       	in	r29, 0x3e	; 62
    1f5c:	6b 01       	movw	r12, r22
    1f5e:	7c 01       	movw	r14, r24
    1f60:	ab 01       	movw	r20, r22
    1f62:	bc 01       	movw	r22, r24
    1f64:	d7 01       	movw	r26, r14
    1f66:	c6 01       	movw	r24, r12
    1f68:	bf 77       	andi	r27, 0x7F	; 127
    1f6a:	00 97       	sbiw	r24, 0x00	; 0
    1f6c:	20 e8       	ldi	r18, 0x80	; 128
    1f6e:	a2 07       	cpc	r26, r18
    1f70:	2f e3       	ldi	r18, 0x3F	; 63
    1f72:	b2 07       	cpc	r27, r18
    1f74:	18 f1       	brcs	.+70     	; 0x1fbc <acosf+0x84>
    1f76:	00 97       	sbiw	r24, 0x00	; 0
    1f78:	a0 48       	sbci	r26, 0x80	; 128
    1f7a:	bf 43       	sbci	r27, 0x3F	; 63
    1f7c:	59 f4       	brne	.+22     	; 0x1f94 <acosf+0x5c>
    1f7e:	77 ff       	sbrs	r23, 7
    1f80:	64 c1       	rjmp	.+712    	; 0x224a <acosf+0x312>
    1f82:	20 e0       	ldi	r18, 0x00	; 0
    1f84:	30 e0       	ldi	r19, 0x00	; 0
    1f86:	40 e8       	ldi	r20, 0x80	; 128
    1f88:	53 e0       	ldi	r21, 0x03	; 3
    1f8a:	6a ed       	ldi	r22, 0xDA	; 218
    1f8c:	7f e0       	ldi	r23, 0x0F	; 15
    1f8e:	89 e4       	ldi	r24, 0x49	; 73
    1f90:	90 e4       	ldi	r25, 0x40	; 64
    1f92:	58 c1       	rjmp	.+688    	; 0x2244 <acosf+0x30c>
    1f94:	81 e2       	ldi	r24, 0x21	; 33
    1f96:	90 e0       	ldi	r25, 0x00	; 0
    1f98:	90 93 65 00 	sts	0x0065, r25	; 0x800065 <__errno_val+0x1>
    1f9c:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__errno_val>
    1fa0:	a7 01       	movw	r20, r14
    1fa2:	96 01       	movw	r18, r12
    1fa4:	c7 01       	movw	r24, r14
    1fa6:	b6 01       	movw	r22, r12
    1fa8:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__subsf3>
    1fac:	9b 01       	movw	r18, r22
    1fae:	ac 01       	movw	r20, r24
    1fb0:	60 e0       	ldi	r22, 0x00	; 0
    1fb2:	70 e0       	ldi	r23, 0x00	; 0
    1fb4:	cb 01       	movw	r24, r22
    1fb6:	0e 94 3a 2e 	call	0x5c74	; 0x5c74 <__divsf3>
    1fba:	4a c1       	rjmp	.+660    	; 0x2250 <acosf+0x318>
    1fbc:	00 97       	sbiw	r24, 0x00	; 0
    1fbe:	a1 05       	cpc	r26, r1
    1fc0:	2f e3       	ldi	r18, 0x3F	; 63
    1fc2:	b2 07       	cpc	r27, r18
    1fc4:	08 f0       	brcs	.+2      	; 0x1fc8 <acosf+0x90>
    1fc6:	60 c0       	rjmp	.+192    	; 0x2088 <acosf+0x150>
    1fc8:	01 97       	sbiw	r24, 0x01	; 1
    1fca:	a0 48       	sbci	r26, 0x80	; 128
    1fcc:	b2 43       	sbci	r27, 0x32	; 50
    1fce:	48 f4       	brcc	.+18     	; 0x1fe2 <acosf+0xaa>
    1fd0:	20 e0       	ldi	r18, 0x00	; 0
    1fd2:	30 e0       	ldi	r19, 0x00	; 0
    1fd4:	40 e8       	ldi	r20, 0x80	; 128
    1fd6:	53 e0       	ldi	r21, 0x03	; 3
    1fd8:	6a ed       	ldi	r22, 0xDA	; 218
    1fda:	7f e0       	ldi	r23, 0x0F	; 15
    1fdc:	89 ec       	ldi	r24, 0xC9	; 201
    1fde:	9f e3       	ldi	r25, 0x3F	; 63
    1fe0:	31 c1       	rjmp	.+610    	; 0x2244 <acosf+0x30c>
    1fe2:	a7 01       	movw	r20, r14
    1fe4:	96 01       	movw	r18, r12
    1fe6:	c7 01       	movw	r24, r14
    1fe8:	b6 01       	movw	r22, r12
    1fea:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    1fee:	4b 01       	movw	r8, r22
    1ff0:	5c 01       	movw	r10, r24
    1ff2:	2b e6       	ldi	r18, 0x6B	; 107
    1ff4:	33 ed       	ldi	r19, 0xD3	; 211
    1ff6:	4d e0       	ldi	r20, 0x0D	; 13
    1ff8:	5c eb       	ldi	r21, 0xBC	; 188
    1ffa:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    1ffe:	2a eb       	ldi	r18, 0xBA	; 186
    2000:	33 e1       	ldi	r19, 0x13	; 19
    2002:	4f e2       	ldi	r20, 0x2F	; 47
    2004:	5d e3       	ldi	r21, 0x3D	; 61
    2006:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__subsf3>
    200a:	a5 01       	movw	r20, r10
    200c:	94 01       	movw	r18, r8
    200e:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    2012:	25 e7       	ldi	r18, 0x75	; 117
    2014:	3a ea       	ldi	r19, 0xAA	; 170
    2016:	4a e2       	ldi	r20, 0x2A	; 42
    2018:	5e e3       	ldi	r21, 0x3E	; 62
    201a:	0e 94 f0 2d 	call	0x5be0	; 0x5be0 <__addsf3>
    201e:	a5 01       	movw	r20, r10
    2020:	94 01       	movw	r18, r8
    2022:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    2026:	2b 01       	movw	r4, r22
    2028:	3c 01       	movw	r6, r24
    202a:	2e ea       	ldi	r18, 0xAE	; 174
    202c:	35 ee       	ldi	r19, 0xE5	; 229
    202e:	44 e3       	ldi	r20, 0x34	; 52
    2030:	5f eb       	ldi	r21, 0xBF	; 191
    2032:	c5 01       	movw	r24, r10
    2034:	b4 01       	movw	r22, r8
    2036:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    203a:	20 e0       	ldi	r18, 0x00	; 0
    203c:	30 e0       	ldi	r19, 0x00	; 0
    203e:	40 e8       	ldi	r20, 0x80	; 128
    2040:	5f e3       	ldi	r21, 0x3F	; 63
    2042:	0e 94 f0 2d 	call	0x5be0	; 0x5be0 <__addsf3>
    2046:	9b 01       	movw	r18, r22
    2048:	ac 01       	movw	r20, r24
    204a:	c3 01       	movw	r24, r6
    204c:	b2 01       	movw	r22, r4
    204e:	0e 94 3a 2e 	call	0x5c74	; 0x5c74 <__divsf3>
    2052:	a7 01       	movw	r20, r14
    2054:	96 01       	movw	r18, r12
    2056:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    205a:	9b 01       	movw	r18, r22
    205c:	ac 01       	movw	r20, r24
    205e:	68 e6       	ldi	r22, 0x68	; 104
    2060:	71 e2       	ldi	r23, 0x21	; 33
    2062:	82 ea       	ldi	r24, 0xA2	; 162
    2064:	93 e3       	ldi	r25, 0x33	; 51
    2066:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__subsf3>
    206a:	9b 01       	movw	r18, r22
    206c:	ac 01       	movw	r20, r24
    206e:	c7 01       	movw	r24, r14
    2070:	b6 01       	movw	r22, r12
    2072:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__subsf3>
    2076:	9b 01       	movw	r18, r22
    2078:	ac 01       	movw	r20, r24
    207a:	6a ed       	ldi	r22, 0xDA	; 218
    207c:	7f e0       	ldi	r23, 0x0F	; 15
    207e:	89 ec       	ldi	r24, 0xC9	; 201
    2080:	9f e3       	ldi	r25, 0x3F	; 63
    2082:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__subsf3>
    2086:	e4 c0       	rjmp	.+456    	; 0x2250 <acosf+0x318>
    2088:	77 ff       	sbrs	r23, 7
    208a:	5d c0       	rjmp	.+186    	; 0x2146 <acosf+0x20e>
    208c:	20 e0       	ldi	r18, 0x00	; 0
    208e:	30 e0       	ldi	r19, 0x00	; 0
    2090:	40 e8       	ldi	r20, 0x80	; 128
    2092:	5f e3       	ldi	r21, 0x3F	; 63
    2094:	c7 01       	movw	r24, r14
    2096:	b6 01       	movw	r22, r12
    2098:	0e 94 f0 2d 	call	0x5be0	; 0x5be0 <__addsf3>
    209c:	20 e0       	ldi	r18, 0x00	; 0
    209e:	30 e0       	ldi	r19, 0x00	; 0
    20a0:	40 e0       	ldi	r20, 0x00	; 0
    20a2:	5f e3       	ldi	r21, 0x3F	; 63
    20a4:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    20a8:	6b 01       	movw	r12, r22
    20aa:	7c 01       	movw	r14, r24
    20ac:	0e 94 b1 16 	call	0x2d62	; 0x2d62 <sqrt>
    20b0:	4b 01       	movw	r8, r22
    20b2:	5c 01       	movw	r10, r24
    20b4:	2b e6       	ldi	r18, 0x6B	; 107
    20b6:	33 ed       	ldi	r19, 0xD3	; 211
    20b8:	4d e0       	ldi	r20, 0x0D	; 13
    20ba:	5c eb       	ldi	r21, 0xBC	; 188
    20bc:	c7 01       	movw	r24, r14
    20be:	b6 01       	movw	r22, r12
    20c0:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    20c4:	2a eb       	ldi	r18, 0xBA	; 186
    20c6:	33 e1       	ldi	r19, 0x13	; 19
    20c8:	4f e2       	ldi	r20, 0x2F	; 47
    20ca:	5d e3       	ldi	r21, 0x3D	; 61
    20cc:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__subsf3>
    20d0:	a7 01       	movw	r20, r14
    20d2:	96 01       	movw	r18, r12
    20d4:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    20d8:	25 e7       	ldi	r18, 0x75	; 117
    20da:	3a ea       	ldi	r19, 0xAA	; 170
    20dc:	4a e2       	ldi	r20, 0x2A	; 42
    20de:	5e e3       	ldi	r21, 0x3E	; 62
    20e0:	0e 94 f0 2d 	call	0x5be0	; 0x5be0 <__addsf3>
    20e4:	a7 01       	movw	r20, r14
    20e6:	96 01       	movw	r18, r12
    20e8:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    20ec:	2b 01       	movw	r4, r22
    20ee:	3c 01       	movw	r6, r24
    20f0:	2e ea       	ldi	r18, 0xAE	; 174
    20f2:	35 ee       	ldi	r19, 0xE5	; 229
    20f4:	44 e3       	ldi	r20, 0x34	; 52
    20f6:	5f eb       	ldi	r21, 0xBF	; 191
    20f8:	c7 01       	movw	r24, r14
    20fa:	b6 01       	movw	r22, r12
    20fc:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    2100:	20 e0       	ldi	r18, 0x00	; 0
    2102:	30 e0       	ldi	r19, 0x00	; 0
    2104:	40 e8       	ldi	r20, 0x80	; 128
    2106:	5f e3       	ldi	r21, 0x3F	; 63
    2108:	0e 94 f0 2d 	call	0x5be0	; 0x5be0 <__addsf3>
    210c:	9b 01       	movw	r18, r22
    210e:	ac 01       	movw	r20, r24
    2110:	c3 01       	movw	r24, r6
    2112:	b2 01       	movw	r22, r4
    2114:	0e 94 3a 2e 	call	0x5c74	; 0x5c74 <__divsf3>
    2118:	a5 01       	movw	r20, r10
    211a:	94 01       	movw	r18, r8
    211c:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    2120:	28 e6       	ldi	r18, 0x68	; 104
    2122:	31 e2       	ldi	r19, 0x21	; 33
    2124:	42 ea       	ldi	r20, 0xA2	; 162
    2126:	53 e3       	ldi	r21, 0x33	; 51
    2128:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__subsf3>
    212c:	a5 01       	movw	r20, r10
    212e:	94 01       	movw	r18, r8
    2130:	0e 94 f0 2d 	call	0x5be0	; 0x5be0 <__addsf3>
    2134:	9b 01       	movw	r18, r22
    2136:	ac 01       	movw	r20, r24
    2138:	6a ed       	ldi	r22, 0xDA	; 218
    213a:	7f e0       	ldi	r23, 0x0F	; 15
    213c:	89 ec       	ldi	r24, 0xC9	; 201
    213e:	9f e3       	ldi	r25, 0x3F	; 63
    2140:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__subsf3>
    2144:	7d c0       	rjmp	.+250    	; 0x2240 <acosf+0x308>
    2146:	a7 01       	movw	r20, r14
    2148:	96 01       	movw	r18, r12
    214a:	60 e0       	ldi	r22, 0x00	; 0
    214c:	70 e0       	ldi	r23, 0x00	; 0
    214e:	80 e8       	ldi	r24, 0x80	; 128
    2150:	9f e3       	ldi	r25, 0x3F	; 63
    2152:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__subsf3>
    2156:	20 e0       	ldi	r18, 0x00	; 0
    2158:	30 e0       	ldi	r19, 0x00	; 0
    215a:	40 e0       	ldi	r20, 0x00	; 0
    215c:	5f e3       	ldi	r21, 0x3F	; 63
    215e:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    2162:	6b 01       	movw	r12, r22
    2164:	7c 01       	movw	r14, r24
    2166:	0e 94 b1 16 	call	0x2d62	; 0x2d62 <sqrt>
    216a:	69 83       	std	Y+1, r22	; 0x01
    216c:	7a 83       	std	Y+2, r23	; 0x02
    216e:	8b 83       	std	Y+3, r24	; 0x03
    2170:	9c 83       	std	Y+4, r25	; 0x04
    2172:	89 80       	ldd	r8, Y+1	; 0x01
    2174:	9a 80       	ldd	r9, Y+2	; 0x02
    2176:	ab 80       	ldd	r10, Y+3	; 0x03
    2178:	bc 80       	ldd	r11, Y+4	; 0x04
    217a:	88 24       	eor	r8, r8
    217c:	80 ef       	ldi	r24, 0xF0	; 240
    217e:	98 22       	and	r9, r24
    2180:	2b e6       	ldi	r18, 0x6B	; 107
    2182:	33 ed       	ldi	r19, 0xD3	; 211
    2184:	4d e0       	ldi	r20, 0x0D	; 13
    2186:	5c eb       	ldi	r21, 0xBC	; 188
    2188:	c7 01       	movw	r24, r14
    218a:	b6 01       	movw	r22, r12
    218c:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    2190:	2a eb       	ldi	r18, 0xBA	; 186
    2192:	33 e1       	ldi	r19, 0x13	; 19
    2194:	4f e2       	ldi	r20, 0x2F	; 47
    2196:	5d e3       	ldi	r21, 0x3D	; 61
    2198:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__subsf3>
    219c:	a7 01       	movw	r20, r14
    219e:	96 01       	movw	r18, r12
    21a0:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    21a4:	25 e7       	ldi	r18, 0x75	; 117
    21a6:	3a ea       	ldi	r19, 0xAA	; 170
    21a8:	4a e2       	ldi	r20, 0x2A	; 42
    21aa:	5e e3       	ldi	r21, 0x3E	; 62
    21ac:	0e 94 f0 2d 	call	0x5be0	; 0x5be0 <__addsf3>
    21b0:	a7 01       	movw	r20, r14
    21b2:	96 01       	movw	r18, r12
    21b4:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    21b8:	2b 01       	movw	r4, r22
    21ba:	3c 01       	movw	r6, r24
    21bc:	2e ea       	ldi	r18, 0xAE	; 174
    21be:	35 ee       	ldi	r19, 0xE5	; 229
    21c0:	44 e3       	ldi	r20, 0x34	; 52
    21c2:	5f eb       	ldi	r21, 0xBF	; 191
    21c4:	c7 01       	movw	r24, r14
    21c6:	b6 01       	movw	r22, r12
    21c8:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    21cc:	20 e0       	ldi	r18, 0x00	; 0
    21ce:	30 e0       	ldi	r19, 0x00	; 0
    21d0:	40 e8       	ldi	r20, 0x80	; 128
    21d2:	5f e3       	ldi	r21, 0x3F	; 63
    21d4:	0e 94 f0 2d 	call	0x5be0	; 0x5be0 <__addsf3>
    21d8:	9b 01       	movw	r18, r22
    21da:	ac 01       	movw	r20, r24
    21dc:	c3 01       	movw	r24, r6
    21de:	b2 01       	movw	r22, r4
    21e0:	0e 94 3a 2e 	call	0x5c74	; 0x5c74 <__divsf3>
    21e4:	29 81       	ldd	r18, Y+1	; 0x01
    21e6:	3a 81       	ldd	r19, Y+2	; 0x02
    21e8:	4b 81       	ldd	r20, Y+3	; 0x03
    21ea:	5c 81       	ldd	r21, Y+4	; 0x04
    21ec:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    21f0:	2b 01       	movw	r4, r22
    21f2:	3c 01       	movw	r6, r24
    21f4:	a5 01       	movw	r20, r10
    21f6:	94 01       	movw	r18, r8
    21f8:	c5 01       	movw	r24, r10
    21fa:	b4 01       	movw	r22, r8
    21fc:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    2200:	9b 01       	movw	r18, r22
    2202:	ac 01       	movw	r20, r24
    2204:	c7 01       	movw	r24, r14
    2206:	b6 01       	movw	r22, r12
    2208:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__subsf3>
    220c:	6b 01       	movw	r12, r22
    220e:	7c 01       	movw	r14, r24
    2210:	a5 01       	movw	r20, r10
    2212:	94 01       	movw	r18, r8
    2214:	69 81       	ldd	r22, Y+1	; 0x01
    2216:	7a 81       	ldd	r23, Y+2	; 0x02
    2218:	8b 81       	ldd	r24, Y+3	; 0x03
    221a:	9c 81       	ldd	r25, Y+4	; 0x04
    221c:	0e 94 f0 2d 	call	0x5be0	; 0x5be0 <__addsf3>
    2220:	9b 01       	movw	r18, r22
    2222:	ac 01       	movw	r20, r24
    2224:	c7 01       	movw	r24, r14
    2226:	b6 01       	movw	r22, r12
    2228:	0e 94 3a 2e 	call	0x5c74	; 0x5c74 <__divsf3>
    222c:	9b 01       	movw	r18, r22
    222e:	ac 01       	movw	r20, r24
    2230:	c3 01       	movw	r24, r6
    2232:	b2 01       	movw	r22, r4
    2234:	0e 94 f0 2d 	call	0x5be0	; 0x5be0 <__addsf3>
    2238:	a5 01       	movw	r20, r10
    223a:	94 01       	movw	r18, r8
    223c:	0e 94 f0 2d 	call	0x5be0	; 0x5be0 <__addsf3>
    2240:	9b 01       	movw	r18, r22
    2242:	ac 01       	movw	r20, r24
    2244:	0e 94 f0 2d 	call	0x5be0	; 0x5be0 <__addsf3>
    2248:	03 c0       	rjmp	.+6      	; 0x2250 <acosf+0x318>
    224a:	60 e0       	ldi	r22, 0x00	; 0
    224c:	70 e0       	ldi	r23, 0x00	; 0
    224e:	cb 01       	movw	r24, r22
    2250:	0f 90       	pop	r0
    2252:	0f 90       	pop	r0
    2254:	0f 90       	pop	r0
    2256:	0f 90       	pop	r0
    2258:	df 91       	pop	r29
    225a:	cf 91       	pop	r28
    225c:	ff 90       	pop	r15
    225e:	ef 90       	pop	r14
    2260:	df 90       	pop	r13
    2262:	cf 90       	pop	r12
    2264:	bf 90       	pop	r11
    2266:	af 90       	pop	r10
    2268:	9f 90       	pop	r9
    226a:	8f 90       	pop	r8
    226c:	7f 90       	pop	r7
    226e:	6f 90       	pop	r6
    2270:	5f 90       	pop	r5
    2272:	4f 90       	pop	r4
    2274:	08 95       	ret

Disassembly of section .text.asinf:

00002f8c <asinf>:
    2f8c:	4f 92       	push	r4
    2f8e:	5f 92       	push	r5
    2f90:	6f 92       	push	r6
    2f92:	7f 92       	push	r7
    2f94:	8f 92       	push	r8
    2f96:	9f 92       	push	r9
    2f98:	af 92       	push	r10
    2f9a:	bf 92       	push	r11
    2f9c:	cf 92       	push	r12
    2f9e:	df 92       	push	r13
    2fa0:	ef 92       	push	r14
    2fa2:	ff 92       	push	r15
    2fa4:	cf 93       	push	r28
    2fa6:	df 93       	push	r29
    2fa8:	00 d0       	rcall	.+0      	; 0x2faa <asinf+0x1e>
    2faa:	00 d0       	rcall	.+0      	; 0x2fac <asinf+0x20>
    2fac:	cd b7       	in	r28, 0x3d	; 61
    2fae:	de b7       	in	r29, 0x3e	; 62
    2fb0:	6b 01       	movw	r12, r22
    2fb2:	7c 01       	movw	r14, r24
    2fb4:	69 83       	std	Y+1, r22	; 0x01
    2fb6:	7a 83       	std	Y+2, r23	; 0x02
    2fb8:	8b 83       	std	Y+3, r24	; 0x03
    2fba:	9c 83       	std	Y+4, r25	; 0x04
    2fbc:	dc 01       	movw	r26, r24
    2fbe:	cb 01       	movw	r24, r22
    2fc0:	bf 77       	andi	r27, 0x7F	; 127
    2fc2:	00 97       	sbiw	r24, 0x00	; 0
    2fc4:	20 e8       	ldi	r18, 0x80	; 128
    2fc6:	a2 07       	cpc	r26, r18
    2fc8:	2f e3       	ldi	r18, 0x3F	; 63
    2fca:	b2 07       	cpc	r27, r18
    2fcc:	28 f1       	brcs	.+74     	; 0x3018 <asinf+0x8c>
    2fce:	00 97       	sbiw	r24, 0x00	; 0
    2fd0:	a0 48       	sbci	r26, 0x80	; 128
    2fd2:	bf 43       	sbci	r27, 0x3F	; 63
    2fd4:	69 f4       	brne	.+26     	; 0x2ff0 <asinf+0x64>
    2fd6:	2b ed       	ldi	r18, 0xDB	; 219
    2fd8:	3f e0       	ldi	r19, 0x0F	; 15
    2fda:	49 ec       	ldi	r20, 0xC9	; 201
    2fdc:	5f e3       	ldi	r21, 0x3F	; 63
    2fde:	c7 01       	movw	r24, r14
    2fe0:	b6 01       	movw	r22, r12
    2fe2:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    2fe6:	20 e0       	ldi	r18, 0x00	; 0
    2fe8:	30 e0       	ldi	r19, 0x00	; 0
    2fea:	40 e8       	ldi	r20, 0x80	; 128
    2fec:	53 e0       	ldi	r21, 0x03	; 3
    2fee:	5f c0       	rjmp	.+190    	; 0x30ae <asinf+0x122>
    2ff0:	81 e2       	ldi	r24, 0x21	; 33
    2ff2:	90 e0       	ldi	r25, 0x00	; 0
    2ff4:	90 93 65 00 	sts	0x0065, r25	; 0x800065 <__errno_val+0x1>
    2ff8:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__errno_val>
    2ffc:	a7 01       	movw	r20, r14
    2ffe:	96 01       	movw	r18, r12
    3000:	c7 01       	movw	r24, r14
    3002:	b6 01       	movw	r22, r12
    3004:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__subsf3>
    3008:	9b 01       	movw	r18, r22
    300a:	ac 01       	movw	r20, r24
    300c:	60 e0       	ldi	r22, 0x00	; 0
    300e:	70 e0       	ldi	r23, 0x00	; 0
    3010:	cb 01       	movw	r24, r22
    3012:	0e 94 3a 2e 	call	0x5c74	; 0x5c74 <__divsf3>
    3016:	b6 c0       	rjmp	.+364    	; 0x3184 <asinf+0x1f8>
    3018:	00 97       	sbiw	r24, 0x00	; 0
    301a:	a1 05       	cpc	r26, r1
    301c:	4f e3       	ldi	r20, 0x3F	; 63
    301e:	b4 07       	cpc	r27, r20
    3020:	08 f0       	brcs	.+2      	; 0x3024 <asinf+0x98>
    3022:	48 c0       	rjmp	.+144    	; 0x30b4 <asinf+0x128>
    3024:	a0 58       	subi	r26, 0x80	; 128
    3026:	b1 09       	sbc	r27, r1
    3028:	00 97       	sbiw	r24, 0x00	; 0
    302a:	a1 05       	cpc	r26, r1
    302c:	b9 43       	sbci	r27, 0x39	; 57
    302e:	08 f4       	brcc	.+2      	; 0x3032 <asinf+0xa6>
    3030:	a7 c0       	rjmp	.+334    	; 0x3180 <asinf+0x1f4>
    3032:	a7 01       	movw	r20, r14
    3034:	96 01       	movw	r18, r12
    3036:	c7 01       	movw	r24, r14
    3038:	b6 01       	movw	r22, r12
    303a:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    303e:	4b 01       	movw	r8, r22
    3040:	5c 01       	movw	r10, r24
    3042:	2b e6       	ldi	r18, 0x6B	; 107
    3044:	33 ed       	ldi	r19, 0xD3	; 211
    3046:	4d e0       	ldi	r20, 0x0D	; 13
    3048:	5c eb       	ldi	r21, 0xBC	; 188
    304a:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    304e:	2a eb       	ldi	r18, 0xBA	; 186
    3050:	33 e1       	ldi	r19, 0x13	; 19
    3052:	4f e2       	ldi	r20, 0x2F	; 47
    3054:	5d e3       	ldi	r21, 0x3D	; 61
    3056:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__subsf3>
    305a:	a5 01       	movw	r20, r10
    305c:	94 01       	movw	r18, r8
    305e:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    3062:	25 e7       	ldi	r18, 0x75	; 117
    3064:	3a ea       	ldi	r19, 0xAA	; 170
    3066:	4a e2       	ldi	r20, 0x2A	; 42
    3068:	5e e3       	ldi	r21, 0x3E	; 62
    306a:	0e 94 f0 2d 	call	0x5be0	; 0x5be0 <__addsf3>
    306e:	a5 01       	movw	r20, r10
    3070:	94 01       	movw	r18, r8
    3072:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    3076:	2b 01       	movw	r4, r22
    3078:	3c 01       	movw	r6, r24
    307a:	2e ea       	ldi	r18, 0xAE	; 174
    307c:	35 ee       	ldi	r19, 0xE5	; 229
    307e:	44 e3       	ldi	r20, 0x34	; 52
    3080:	5f eb       	ldi	r21, 0xBF	; 191
    3082:	c5 01       	movw	r24, r10
    3084:	b4 01       	movw	r22, r8
    3086:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    308a:	20 e0       	ldi	r18, 0x00	; 0
    308c:	30 e0       	ldi	r19, 0x00	; 0
    308e:	40 e8       	ldi	r20, 0x80	; 128
    3090:	5f e3       	ldi	r21, 0x3F	; 63
    3092:	0e 94 f0 2d 	call	0x5be0	; 0x5be0 <__addsf3>
    3096:	9b 01       	movw	r18, r22
    3098:	ac 01       	movw	r20, r24
    309a:	c3 01       	movw	r24, r6
    309c:	b2 01       	movw	r22, r4
    309e:	0e 94 3a 2e 	call	0x5c74	; 0x5c74 <__divsf3>
    30a2:	a7 01       	movw	r20, r14
    30a4:	96 01       	movw	r18, r12
    30a6:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    30aa:	a7 01       	movw	r20, r14
    30ac:	96 01       	movw	r18, r12
    30ae:	0e 94 f0 2d 	call	0x5be0	; 0x5be0 <__addsf3>
    30b2:	68 c0       	rjmp	.+208    	; 0x3184 <asinf+0x1f8>
    30b4:	c7 01       	movw	r24, r14
    30b6:	b6 01       	movw	r22, r12
    30b8:	0e 94 47 2e 	call	0x5c8e	; 0x5c8e <fabsf>
    30bc:	9b 01       	movw	r18, r22
    30be:	ac 01       	movw	r20, r24
    30c0:	60 e0       	ldi	r22, 0x00	; 0
    30c2:	70 e0       	ldi	r23, 0x00	; 0
    30c4:	80 e8       	ldi	r24, 0x80	; 128
    30c6:	9f e3       	ldi	r25, 0x3F	; 63
    30c8:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__subsf3>
    30cc:	20 e0       	ldi	r18, 0x00	; 0
    30ce:	30 e0       	ldi	r19, 0x00	; 0
    30d0:	40 e0       	ldi	r20, 0x00	; 0
    30d2:	5f e3       	ldi	r21, 0x3F	; 63
    30d4:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    30d8:	6b 01       	movw	r12, r22
    30da:	7c 01       	movw	r14, r24
    30dc:	0e 94 b1 16 	call	0x2d62	; 0x2d62 <sqrt>
    30e0:	4b 01       	movw	r8, r22
    30e2:	5c 01       	movw	r10, r24
    30e4:	2b e6       	ldi	r18, 0x6B	; 107
    30e6:	33 ed       	ldi	r19, 0xD3	; 211
    30e8:	4d e0       	ldi	r20, 0x0D	; 13
    30ea:	5c eb       	ldi	r21, 0xBC	; 188
    30ec:	c7 01       	movw	r24, r14
    30ee:	b6 01       	movw	r22, r12
    30f0:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    30f4:	2a eb       	ldi	r18, 0xBA	; 186
    30f6:	33 e1       	ldi	r19, 0x13	; 19
    30f8:	4f e2       	ldi	r20, 0x2F	; 47
    30fa:	5d e3       	ldi	r21, 0x3D	; 61
    30fc:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__subsf3>
    3100:	a7 01       	movw	r20, r14
    3102:	96 01       	movw	r18, r12
    3104:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    3108:	25 e7       	ldi	r18, 0x75	; 117
    310a:	3a ea       	ldi	r19, 0xAA	; 170
    310c:	4a e2       	ldi	r20, 0x2A	; 42
    310e:	5e e3       	ldi	r21, 0x3E	; 62
    3110:	0e 94 f0 2d 	call	0x5be0	; 0x5be0 <__addsf3>
    3114:	a7 01       	movw	r20, r14
    3116:	96 01       	movw	r18, r12
    3118:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    311c:	2b 01       	movw	r4, r22
    311e:	3c 01       	movw	r6, r24
    3120:	2e ea       	ldi	r18, 0xAE	; 174
    3122:	35 ee       	ldi	r19, 0xE5	; 229
    3124:	44 e3       	ldi	r20, 0x34	; 52
    3126:	5f eb       	ldi	r21, 0xBF	; 191
    3128:	c7 01       	movw	r24, r14
    312a:	b6 01       	movw	r22, r12
    312c:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    3130:	20 e0       	ldi	r18, 0x00	; 0
    3132:	30 e0       	ldi	r19, 0x00	; 0
    3134:	40 e8       	ldi	r20, 0x80	; 128
    3136:	5f e3       	ldi	r21, 0x3F	; 63
    3138:	0e 94 f0 2d 	call	0x5be0	; 0x5be0 <__addsf3>
    313c:	9b 01       	movw	r18, r22
    313e:	ac 01       	movw	r20, r24
    3140:	c3 01       	movw	r24, r6
    3142:	b2 01       	movw	r22, r4
    3144:	0e 94 3a 2e 	call	0x5c74	; 0x5c74 <__divsf3>
    3148:	a5 01       	movw	r20, r10
    314a:	94 01       	movw	r18, r8
    314c:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    3150:	a5 01       	movw	r20, r10
    3152:	94 01       	movw	r18, r8
    3154:	0e 94 f0 2d 	call	0x5be0	; 0x5be0 <__addsf3>
    3158:	9b 01       	movw	r18, r22
    315a:	ac 01       	movw	r20, r24
    315c:	0e 94 f0 2d 	call	0x5be0	; 0x5be0 <__addsf3>
    3160:	9b 01       	movw	r18, r22
    3162:	ac 01       	movw	r20, r24
    3164:	6b ed       	ldi	r22, 0xDB	; 219
    3166:	7f e0       	ldi	r23, 0x0F	; 15
    3168:	89 ec       	ldi	r24, 0xC9	; 201
    316a:	9f e3       	ldi	r25, 0x3F	; 63
    316c:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__subsf3>
    3170:	29 81       	ldd	r18, Y+1	; 0x01
    3172:	3a 81       	ldd	r19, Y+2	; 0x02
    3174:	4b 81       	ldd	r20, Y+3	; 0x03
    3176:	5c 81       	ldd	r21, Y+4	; 0x04
    3178:	57 ff       	sbrs	r21, 7
    317a:	04 c0       	rjmp	.+8      	; 0x3184 <asinf+0x1f8>
    317c:	90 58       	subi	r25, 0x80	; 128
    317e:	02 c0       	rjmp	.+4      	; 0x3184 <asinf+0x1f8>
    3180:	c7 01       	movw	r24, r14
    3182:	b6 01       	movw	r22, r12
    3184:	0f 90       	pop	r0
    3186:	0f 90       	pop	r0
    3188:	0f 90       	pop	r0
    318a:	0f 90       	pop	r0
    318c:	df 91       	pop	r29
    318e:	cf 91       	pop	r28
    3190:	ff 90       	pop	r15
    3192:	ef 90       	pop	r14
    3194:	df 90       	pop	r13
    3196:	cf 90       	pop	r12
    3198:	bf 90       	pop	r11
    319a:	af 90       	pop	r10
    319c:	9f 90       	pop	r9
    319e:	8f 90       	pop	r8
    31a0:	7f 90       	pop	r7
    31a2:	6f 90       	pop	r6
    31a4:	5f 90       	pop	r5
    31a6:	4f 90       	pop	r4
    31a8:	08 95       	ret

Disassembly of section .text.atan2f:

0000289c <atan2f>:
    289c:	ac e0       	ldi	r26, 0x0C	; 12
    289e:	b0 e0       	ldi	r27, 0x00	; 0
    28a0:	e4 e5       	ldi	r30, 0x54	; 84
    28a2:	f4 e1       	ldi	r31, 0x14	; 20
    28a4:	0c 94 5b 2c 	jmp	0x58b6	; 0x58b6 <__prologue_saves__+0x4>
    28a8:	49 01       	movw	r8, r18
    28aa:	5a 01       	movw	r10, r20
    28ac:	69 01       	movw	r12, r18
    28ae:	7a 01       	movw	r14, r20
    28b0:	5f 77       	andi	r21, 0x7F	; 127
    28b2:	2d 83       	std	Y+5, r18	; 0x05
    28b4:	3e 83       	std	Y+6, r19	; 0x06
    28b6:	4f 83       	std	Y+7, r20	; 0x07
    28b8:	58 87       	std	Y+8, r21	; 0x08
    28ba:	21 30       	cpi	r18, 0x01	; 1
    28bc:	31 05       	cpc	r19, r1
    28be:	40 48       	sbci	r20, 0x80	; 128
    28c0:	5f 47       	sbci	r21, 0x7F	; 127
    28c2:	60 f4       	brcc	.+24     	; 0x28dc <atan2f+0x40>
    28c4:	9b 01       	movw	r18, r22
    28c6:	ac 01       	movw	r20, r24
    28c8:	5f 77       	andi	r21, 0x7F	; 127
    28ca:	29 87       	std	Y+9, r18	; 0x09
    28cc:	3a 87       	std	Y+10, r19	; 0x0a
    28ce:	4b 87       	std	Y+11, r20	; 0x0b
    28d0:	5c 87       	std	Y+12, r21	; 0x0c
    28d2:	21 30       	cpi	r18, 0x01	; 1
    28d4:	31 05       	cpc	r19, r1
    28d6:	40 48       	sbci	r20, 0x80	; 128
    28d8:	5f 47       	sbci	r21, 0x7F	; 127
    28da:	38 f0       	brcs	.+14     	; 0x28ea <atan2f+0x4e>
    28dc:	9b 01       	movw	r18, r22
    28de:	ac 01       	movw	r20, r24
    28e0:	c5 01       	movw	r24, r10
    28e2:	b4 01       	movw	r22, r8
    28e4:	0e 94 f0 2d 	call	0x5be0	; 0x5be0 <__addsf3>
    28e8:	1b c1       	rjmp	.+566    	; 0x2b20 <atan2f+0x284>
    28ea:	81 14       	cp	r8, r1
    28ec:	91 04       	cpc	r9, r1
    28ee:	b0 e8       	ldi	r27, 0x80	; 128
    28f0:	ab 06       	cpc	r10, r27
    28f2:	bf e3       	ldi	r27, 0x3F	; 63
    28f4:	bb 06       	cpc	r11, r27
    28f6:	19 f4       	brne	.+6      	; 0x28fe <atan2f+0x62>
    28f8:	0e 94 d6 12 	call	0x25ac	; 0x25ac <atanf>
    28fc:	11 c1       	rjmp	.+546    	; 0x2b20 <atan2f+0x284>
    28fe:	75 01       	movw	r14, r10
    2900:	64 01       	movw	r12, r8
    2902:	2e e1       	ldi	r18, 0x1E	; 30
    2904:	f6 94       	lsr	r15
    2906:	e7 94       	ror	r14
    2908:	d7 94       	ror	r13
    290a:	c7 94       	ror	r12
    290c:	2a 95       	dec	r18
    290e:	d1 f7       	brne	.-12     	; 0x2904 <atan2f+0x68>
    2910:	97 01       	movw	r18, r14
    2912:	86 01       	movw	r16, r12
    2914:	02 70       	andi	r16, 0x02	; 2
    2916:	11 27       	eor	r17, r17
    2918:	22 27       	eor	r18, r18
    291a:	33 27       	eor	r19, r19
    291c:	2b 01       	movw	r4, r22
    291e:	3c 01       	movw	r6, r24
    2920:	44 24       	eor	r4, r4
    2922:	77 fc       	sbrc	r7, 7
    2924:	43 94       	inc	r4
    2926:	55 24       	eor	r5, r5
    2928:	66 24       	eor	r6, r6
    292a:	77 24       	eor	r7, r7
    292c:	73 01       	movw	r14, r6
    292e:	62 01       	movw	r12, r4
    2930:	c0 2a       	or	r12, r16
    2932:	d1 2a       	or	r13, r17
    2934:	e2 2a       	or	r14, r18
    2936:	f3 2a       	or	r15, r19
    2938:	29 85       	ldd	r18, Y+9	; 0x09
    293a:	3a 85       	ldd	r19, Y+10	; 0x0a
    293c:	4b 85       	ldd	r20, Y+11	; 0x0b
    293e:	5c 85       	ldd	r21, Y+12	; 0x0c
    2940:	23 2b       	or	r18, r19
    2942:	24 2b       	or	r18, r20
    2944:	25 2b       	or	r18, r21
    2946:	79 f4       	brne	.+30     	; 0x2966 <atan2f+0xca>
    2948:	32 e0       	ldi	r19, 0x02	; 2
    294a:	c3 16       	cp	r12, r19
    294c:	d1 04       	cpc	r13, r1
    294e:	e1 04       	cpc	r14, r1
    2950:	f1 04       	cpc	r15, r1
    2952:	09 f4       	brne	.+2      	; 0x2956 <atan2f+0xba>
    2954:	d3 c0       	rjmp	.+422    	; 0x2afc <atan2f+0x260>
    2956:	43 e0       	ldi	r20, 0x03	; 3
    2958:	c4 16       	cp	r12, r20
    295a:	d1 04       	cpc	r13, r1
    295c:	e1 04       	cpc	r14, r1
    295e:	f1 04       	cpc	r15, r1
    2960:	09 f0       	breq	.+2      	; 0x2964 <atan2f+0xc8>
    2962:	de c0       	rjmp	.+444    	; 0x2b20 <atan2f+0x284>
    2964:	66 c0       	rjmp	.+204    	; 0x2a32 <atan2f+0x196>
    2966:	4d 80       	ldd	r4, Y+5	; 0x05
    2968:	5e 80       	ldd	r5, Y+6	; 0x06
    296a:	6f 80       	ldd	r6, Y+7	; 0x07
    296c:	78 84       	ldd	r7, Y+8	; 0x08
    296e:	41 14       	cp	r4, r1
    2970:	51 04       	cpc	r5, r1
    2972:	61 04       	cpc	r6, r1
    2974:	71 04       	cpc	r7, r1
    2976:	09 f4       	brne	.+2      	; 0x297a <atan2f+0xde>
    2978:	75 c0       	rjmp	.+234    	; 0x2a64 <atan2f+0x1c8>
    297a:	2d 81       	ldd	r18, Y+5	; 0x05
    297c:	3e 81       	ldd	r19, Y+6	; 0x06
    297e:	4f 81       	ldd	r20, Y+7	; 0x07
    2980:	58 85       	ldd	r21, Y+8	; 0x08
    2982:	21 15       	cp	r18, r1
    2984:	31 05       	cpc	r19, r1
    2986:	40 48       	sbci	r20, 0x80	; 128
    2988:	5f 47       	sbci	r21, 0x7F	; 127
    298a:	09 f0       	breq	.+2      	; 0x298e <atan2f+0xf2>
    298c:	57 c0       	rjmp	.+174    	; 0x2a3c <atan2f+0x1a0>
    298e:	49 84       	ldd	r4, Y+9	; 0x09
    2990:	5a 84       	ldd	r5, Y+10	; 0x0a
    2992:	6b 84       	ldd	r6, Y+11	; 0x0b
    2994:	7c 84       	ldd	r7, Y+12	; 0x0c
    2996:	41 14       	cp	r4, r1
    2998:	51 04       	cpc	r5, r1
    299a:	20 e8       	ldi	r18, 0x80	; 128
    299c:	62 06       	cpc	r6, r18
    299e:	2f e7       	ldi	r18, 0x7F	; 127
    29a0:	72 06       	cpc	r7, r18
    29a2:	71 f5       	brne	.+92     	; 0x2a00 <atan2f+0x164>
    29a4:	32 e0       	ldi	r19, 0x02	; 2
    29a6:	c3 16       	cp	r12, r19
    29a8:	d1 04       	cpc	r13, r1
    29aa:	e1 04       	cpc	r14, r1
    29ac:	f1 04       	cpc	r15, r1
    29ae:	91 f0       	breq	.+36     	; 0x29d4 <atan2f+0x138>
    29b0:	43 e0       	ldi	r20, 0x03	; 3
    29b2:	c4 16       	cp	r12, r20
    29b4:	d1 04       	cpc	r13, r1
    29b6:	e1 04       	cpc	r14, r1
    29b8:	f1 04       	cpc	r15, r1
    29ba:	89 f0       	breq	.+34     	; 0x29de <atan2f+0x142>
    29bc:	51 e0       	ldi	r21, 0x01	; 1
    29be:	c5 16       	cp	r12, r21
    29c0:	d1 04       	cpc	r13, r1
    29c2:	e1 04       	cpc	r14, r1
    29c4:	f1 04       	cpc	r15, r1
    29c6:	09 f0       	breq	.+2      	; 0x29ca <atan2f+0x12e>
    29c8:	9e c0       	rjmp	.+316    	; 0x2b06 <atan2f+0x26a>
    29ca:	6b ed       	ldi	r22, 0xDB	; 219
    29cc:	7f e0       	ldi	r23, 0x0F	; 15
    29ce:	89 e4       	ldi	r24, 0x49	; 73
    29d0:	9f eb       	ldi	r25, 0xBF	; 191
    29d2:	a6 c0       	rjmp	.+332    	; 0x2b20 <atan2f+0x284>
    29d4:	20 e0       	ldi	r18, 0x00	; 0
    29d6:	30 e0       	ldi	r19, 0x00	; 0
    29d8:	40 e4       	ldi	r20, 0x40	; 64
    29da:	50 e4       	ldi	r21, 0x40	; 64
    29dc:	04 c0       	rjmp	.+8      	; 0x29e6 <atan2f+0x14a>
    29de:	20 e0       	ldi	r18, 0x00	; 0
    29e0:	30 e0       	ldi	r19, 0x00	; 0
    29e2:	40 e4       	ldi	r20, 0x40	; 64
    29e4:	50 ec       	ldi	r21, 0xC0	; 192
    29e6:	6b ed       	ldi	r22, 0xDB	; 219
    29e8:	7f e0       	ldi	r23, 0x0F	; 15
    29ea:	89 e4       	ldi	r24, 0x49	; 73
    29ec:	90 e4       	ldi	r25, 0x40	; 64
    29ee:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    29f2:	20 e0       	ldi	r18, 0x00	; 0
    29f4:	30 e0       	ldi	r19, 0x00	; 0
    29f6:	40 e8       	ldi	r20, 0x80	; 128
    29f8:	5e e3       	ldi	r21, 0x3E	; 62
    29fa:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    29fe:	90 c0       	rjmp	.+288    	; 0x2b20 <atan2f+0x284>
    2a00:	82 e0       	ldi	r24, 0x02	; 2
    2a02:	c8 16       	cp	r12, r24
    2a04:	d1 04       	cpc	r13, r1
    2a06:	e1 04       	cpc	r14, r1
    2a08:	f1 04       	cpc	r15, r1
    2a0a:	09 f4       	brne	.+2      	; 0x2a0e <atan2f+0x172>
    2a0c:	77 c0       	rjmp	.+238    	; 0x2afc <atan2f+0x260>
    2a0e:	93 e0       	ldi	r25, 0x03	; 3
    2a10:	c9 16       	cp	r12, r25
    2a12:	d1 04       	cpc	r13, r1
    2a14:	e1 04       	cpc	r14, r1
    2a16:	f1 04       	cpc	r15, r1
    2a18:	61 f0       	breq	.+24     	; 0x2a32 <atan2f+0x196>
    2a1a:	a1 e0       	ldi	r26, 0x01	; 1
    2a1c:	ca 16       	cp	r12, r26
    2a1e:	d1 04       	cpc	r13, r1
    2a20:	e1 04       	cpc	r14, r1
    2a22:	f1 04       	cpc	r15, r1
    2a24:	09 f0       	breq	.+2      	; 0x2a28 <atan2f+0x18c>
    2a26:	74 c0       	rjmp	.+232    	; 0x2b10 <atan2f+0x274>
    2a28:	60 e0       	ldi	r22, 0x00	; 0
    2a2a:	70 e0       	ldi	r23, 0x00	; 0
    2a2c:	80 e0       	ldi	r24, 0x00	; 0
    2a2e:	90 e8       	ldi	r25, 0x80	; 128
    2a30:	77 c0       	rjmp	.+238    	; 0x2b20 <atan2f+0x284>
    2a32:	6b ed       	ldi	r22, 0xDB	; 219
    2a34:	7f e0       	ldi	r23, 0x0F	; 15
    2a36:	89 e4       	ldi	r24, 0x49	; 73
    2a38:	90 ec       	ldi	r25, 0xC0	; 192
    2a3a:	72 c0       	rjmp	.+228    	; 0x2b20 <atan2f+0x284>
    2a3c:	4d 80       	ldd	r4, Y+5	; 0x05
    2a3e:	5e 80       	ldd	r5, Y+6	; 0x06
    2a40:	6f 80       	ldd	r6, Y+7	; 0x07
    2a42:	78 84       	ldd	r7, Y+8	; 0x08
    2a44:	b3 ef       	ldi	r27, 0xF3	; 243
    2a46:	7b 1a       	sub	r7, r27
    2a48:	29 85       	ldd	r18, Y+9	; 0x09
    2a4a:	3a 85       	ldd	r19, Y+10	; 0x0a
    2a4c:	4b 85       	ldd	r20, Y+11	; 0x0b
    2a4e:	5c 85       	ldd	r21, Y+12	; 0x0c
    2a50:	42 16       	cp	r4, r18
    2a52:	53 06       	cpc	r5, r19
    2a54:	64 06       	cpc	r6, r20
    2a56:	75 06       	cpc	r7, r21
    2a58:	28 f0       	brcs	.+10     	; 0x2a64 <atan2f+0x1c8>
    2a5a:	21 15       	cp	r18, r1
    2a5c:	31 05       	cpc	r19, r1
    2a5e:	40 48       	sbci	r20, 0x80	; 128
    2a60:	5f 47       	sbci	r21, 0x7F	; 127
    2a62:	39 f4       	brne	.+14     	; 0x2a72 <atan2f+0x1d6>
    2a64:	c0 fe       	sbrs	r12, 0
    2a66:	58 c0       	rjmp	.+176    	; 0x2b18 <atan2f+0x27c>
    2a68:	6b ed       	ldi	r22, 0xDB	; 219
    2a6a:	7f e0       	ldi	r23, 0x0F	; 15
    2a6c:	89 ec       	ldi	r24, 0xC9	; 201
    2a6e:	9f eb       	ldi	r25, 0xBF	; 191
    2a70:	57 c0       	rjmp	.+174    	; 0x2b20 <atan2f+0x284>
    2a72:	c1 fe       	sbrs	r12, 1
    2a74:	0e c0       	rjmp	.+28     	; 0x2a92 <atan2f+0x1f6>
    2a76:	09 85       	ldd	r16, Y+9	; 0x09
    2a78:	1a 85       	ldd	r17, Y+10	; 0x0a
    2a7a:	2b 85       	ldd	r18, Y+11	; 0x0b
    2a7c:	3c 85       	ldd	r19, Y+12	; 0x0c
    2a7e:	33 5f       	subi	r19, 0xF3	; 243
    2a80:	4d 80       	ldd	r4, Y+5	; 0x05
    2a82:	5e 80       	ldd	r5, Y+6	; 0x06
    2a84:	6f 80       	ldd	r6, Y+7	; 0x07
    2a86:	78 84       	ldd	r7, Y+8	; 0x08
    2a88:	04 15       	cp	r16, r4
    2a8a:	15 05       	cpc	r17, r5
    2a8c:	26 05       	cpc	r18, r6
    2a8e:	37 05       	cpc	r19, r7
    2a90:	48 f0       	brcs	.+18     	; 0x2aa4 <atan2f+0x208>
    2a92:	a5 01       	movw	r20, r10
    2a94:	94 01       	movw	r18, r8
    2a96:	0e 94 3a 2e 	call	0x5c74	; 0x5c74 <__divsf3>
    2a9a:	0e 94 47 2e 	call	0x5c8e	; 0x5c8e <fabsf>
    2a9e:	0e 94 d6 12 	call	0x25ac	; 0x25ac <atanf>
    2aa2:	03 c0       	rjmp	.+6      	; 0x2aaa <atan2f+0x20e>
    2aa4:	60 e0       	ldi	r22, 0x00	; 0
    2aa6:	70 e0       	ldi	r23, 0x00	; 0
    2aa8:	cb 01       	movw	r24, r22
    2aaa:	21 e0       	ldi	r18, 0x01	; 1
    2aac:	c2 16       	cp	r12, r18
    2aae:	d1 04       	cpc	r13, r1
    2ab0:	e1 04       	cpc	r14, r1
    2ab2:	f1 04       	cpc	r15, r1
    2ab4:	a1 f0       	breq	.+40     	; 0x2ade <atan2f+0x242>
    2ab6:	a0 f1       	brcs	.+104    	; 0x2b20 <atan2f+0x284>
    2ab8:	42 e0       	ldi	r20, 0x02	; 2
    2aba:	c4 16       	cp	r12, r20
    2abc:	d1 04       	cpc	r13, r1
    2abe:	e1 04       	cpc	r14, r1
    2ac0:	f1 04       	cpc	r15, r1
    2ac2:	79 f4       	brne	.+30     	; 0x2ae2 <atan2f+0x246>
    2ac4:	2e e2       	ldi	r18, 0x2E	; 46
    2ac6:	3d eb       	ldi	r19, 0xBD	; 189
    2ac8:	4b eb       	ldi	r20, 0xBB	; 187
    2aca:	53 e3       	ldi	r21, 0x33	; 51
    2acc:	0e 94 f0 2d 	call	0x5be0	; 0x5be0 <__addsf3>
    2ad0:	9b 01       	movw	r18, r22
    2ad2:	ac 01       	movw	r20, r24
    2ad4:	6b ed       	ldi	r22, 0xDB	; 219
    2ad6:	7f e0       	ldi	r23, 0x0F	; 15
    2ad8:	89 e4       	ldi	r24, 0x49	; 73
    2ada:	90 e4       	ldi	r25, 0x40	; 64
    2adc:	0c c0       	rjmp	.+24     	; 0x2af6 <atan2f+0x25a>
    2ade:	90 58       	subi	r25, 0x80	; 128
    2ae0:	1f c0       	rjmp	.+62     	; 0x2b20 <atan2f+0x284>
    2ae2:	2e e2       	ldi	r18, 0x2E	; 46
    2ae4:	3d eb       	ldi	r19, 0xBD	; 189
    2ae6:	4b eb       	ldi	r20, 0xBB	; 187
    2ae8:	53 e3       	ldi	r21, 0x33	; 51
    2aea:	0e 94 f0 2d 	call	0x5be0	; 0x5be0 <__addsf3>
    2aee:	2b ed       	ldi	r18, 0xDB	; 219
    2af0:	3f e0       	ldi	r19, 0x0F	; 15
    2af2:	49 e4       	ldi	r20, 0x49	; 73
    2af4:	50 e4       	ldi	r21, 0x40	; 64
    2af6:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__subsf3>
    2afa:	12 c0       	rjmp	.+36     	; 0x2b20 <atan2f+0x284>
    2afc:	6b ed       	ldi	r22, 0xDB	; 219
    2afe:	7f e0       	ldi	r23, 0x0F	; 15
    2b00:	89 e4       	ldi	r24, 0x49	; 73
    2b02:	90 e4       	ldi	r25, 0x40	; 64
    2b04:	0d c0       	rjmp	.+26     	; 0x2b20 <atan2f+0x284>
    2b06:	6b ed       	ldi	r22, 0xDB	; 219
    2b08:	7f e0       	ldi	r23, 0x0F	; 15
    2b0a:	89 e4       	ldi	r24, 0x49	; 73
    2b0c:	9f e3       	ldi	r25, 0x3F	; 63
    2b0e:	08 c0       	rjmp	.+16     	; 0x2b20 <atan2f+0x284>
    2b10:	60 e0       	ldi	r22, 0x00	; 0
    2b12:	70 e0       	ldi	r23, 0x00	; 0
    2b14:	cb 01       	movw	r24, r22
    2b16:	04 c0       	rjmp	.+8      	; 0x2b20 <atan2f+0x284>
    2b18:	6b ed       	ldi	r22, 0xDB	; 219
    2b1a:	7f e0       	ldi	r23, 0x0F	; 15
    2b1c:	89 ec       	ldi	r24, 0xC9	; 201
    2b1e:	9f e3       	ldi	r25, 0x3F	; 63
    2b20:	2c 96       	adiw	r28, 0x0c	; 12
    2b22:	e0 e1       	ldi	r30, 0x10	; 16
    2b24:	0c 94 77 2c 	jmp	0x58ee	; 0x58ee <__epilogue_restores__+0x4>

Disassembly of section .text.atanf:

000025ac <atanf>:
    25ac:	ab e0       	ldi	r26, 0x0B	; 11
    25ae:	b0 e0       	ldi	r27, 0x00	; 0
    25b0:	ec ed       	ldi	r30, 0xDC	; 220
    25b2:	f2 e1       	ldi	r31, 0x12	; 18
    25b4:	0c 94 5b 2c 	jmp	0x58b6	; 0x58b6 <__prologue_saves__+0x4>
    25b8:	6b 01       	movw	r12, r22
    25ba:	7c 01       	movw	r14, r24
    25bc:	9b 01       	movw	r18, r22
    25be:	ac 01       	movw	r20, r24
    25c0:	22 27       	eor	r18, r18
    25c2:	57 fd       	sbrc	r21, 7
    25c4:	23 95       	inc	r18
    25c6:	33 27       	eor	r19, r19
    25c8:	44 27       	eor	r20, r20
    25ca:	55 27       	eor	r21, r21
    25cc:	2d 83       	std	Y+5, r18	; 0x05
    25ce:	3e 83       	std	Y+6, r19	; 0x06
    25d0:	4f 83       	std	Y+7, r20	; 0x07
    25d2:	58 87       	std	Y+8, r21	; 0x08
    25d4:	46 01       	movw	r8, r12
    25d6:	57 01       	movw	r10, r14
    25d8:	e8 94       	clt
    25da:	b7 f8       	bld	r11, 7
    25dc:	81 14       	cp	r8, r1
    25de:	91 04       	cpc	r9, r1
    25e0:	30 e8       	ldi	r19, 0x80	; 128
    25e2:	a3 06       	cpc	r10, r19
    25e4:	3c e4       	ldi	r19, 0x4C	; 76
    25e6:	b3 06       	cpc	r11, r19
    25e8:	a0 f0       	brcs	.+40     	; 0x2612 <atanf+0x66>
    25ea:	41 e0       	ldi	r20, 0x01	; 1
    25ec:	84 16       	cp	r8, r20
    25ee:	91 04       	cpc	r9, r1
    25f0:	40 e8       	ldi	r20, 0x80	; 128
    25f2:	a4 06       	cpc	r10, r20
    25f4:	4f e7       	ldi	r20, 0x7F	; 127
    25f6:	b4 06       	cpc	r11, r20
    25f8:	08 f0       	brcs	.+2      	; 0x25fc <atanf+0x50>
    25fa:	4a c1       	rjmp	.+660    	; 0x2890 <atanf+0x2e4>
    25fc:	20 e0       	ldi	r18, 0x00	; 0
    25fe:	30 e0       	ldi	r19, 0x00	; 0
    2600:	40 e8       	ldi	r20, 0x80	; 128
    2602:	53 e0       	ldi	r21, 0x03	; 3
    2604:	6a ed       	ldi	r22, 0xDA	; 218
    2606:	7f e0       	ldi	r23, 0x0F	; 15
    2608:	89 ec       	ldi	r24, 0xC9	; 201
    260a:	9f e3       	ldi	r25, 0x3F	; 63
    260c:	0e 94 f0 2d 	call	0x5be0	; 0x5be0 <__addsf3>
    2610:	35 c1       	rjmp	.+618    	; 0x287c <atanf+0x2d0>
    2612:	81 14       	cp	r8, r1
    2614:	91 04       	cpc	r9, r1
    2616:	30 ee       	ldi	r19, 0xE0	; 224
    2618:	a3 06       	cpc	r10, r19
    261a:	3e e3       	ldi	r19, 0x3E	; 62
    261c:	b3 06       	cpc	r11, r19
    261e:	d0 f4       	brcc	.+52     	; 0x2654 <atanf+0xa8>
    2620:	81 14       	cp	r8, r1
    2622:	91 04       	cpc	r9, r1
    2624:	40 e8       	ldi	r20, 0x80	; 128
    2626:	a4 06       	cpc	r10, r20
    2628:	49 e3       	ldi	r20, 0x39	; 57
    262a:	b4 06       	cpc	r11, r20
    262c:	08 f0       	brcs	.+2      	; 0x2630 <atanf+0x84>
    262e:	9c c0       	rjmp	.+312    	; 0x2768 <atanf+0x1bc>
    2630:	81 14       	cp	r8, r1
    2632:	91 04       	cpc	r9, r1
    2634:	50 e8       	ldi	r21, 0x80	; 128
    2636:	a5 06       	cpc	r10, r21
    2638:	b1 04       	cpc	r11, r1
    263a:	08 f0       	brcs	.+2      	; 0x263e <atanf+0x92>
    263c:	29 c1       	rjmp	.+594    	; 0x2890 <atanf+0x2e4>
    263e:	a7 01       	movw	r20, r14
    2640:	96 01       	movw	r18, r12
    2642:	c7 01       	movw	r24, r14
    2644:	b6 01       	movw	r22, r12
    2646:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    264a:	69 83       	std	Y+1, r22	; 0x01
    264c:	7a 83       	std	Y+2, r23	; 0x02
    264e:	8b 83       	std	Y+3, r24	; 0x03
    2650:	9c 83       	std	Y+4, r25	; 0x04
    2652:	1e c1       	rjmp	.+572    	; 0x2890 <atanf+0x2e4>
    2654:	c7 01       	movw	r24, r14
    2656:	b6 01       	movw	r22, r12
    2658:	0e 94 47 2e 	call	0x5c8e	; 0x5c8e <fabsf>
    265c:	6b 01       	movw	r12, r22
    265e:	7c 01       	movw	r14, r24
    2660:	81 14       	cp	r8, r1
    2662:	91 04       	cpc	r9, r1
    2664:	88 e9       	ldi	r24, 0x98	; 152
    2666:	a8 06       	cpc	r10, r24
    2668:	8f e3       	ldi	r24, 0x3F	; 63
    266a:	b8 06       	cpc	r11, r24
    266c:	08 f0       	brcs	.+2      	; 0x2670 <atanf+0xc4>
    266e:	45 c0       	rjmp	.+138    	; 0x26fa <atanf+0x14e>
    2670:	81 14       	cp	r8, r1
    2672:	91 04       	cpc	r9, r1
    2674:	90 e3       	ldi	r25, 0x30	; 48
    2676:	a9 06       	cpc	r10, r25
    2678:	9f e3       	ldi	r25, 0x3F	; 63
    267a:	b9 06       	cpc	r11, r25
    267c:	08 f5       	brcc	.+66     	; 0x26c0 <atanf+0x114>
    267e:	a7 01       	movw	r20, r14
    2680:	96 01       	movw	r18, r12
    2682:	c7 01       	movw	r24, r14
    2684:	b6 01       	movw	r22, r12
    2686:	0e 94 f0 2d 	call	0x5be0	; 0x5be0 <__addsf3>
    268a:	20 e0       	ldi	r18, 0x00	; 0
    268c:	30 e0       	ldi	r19, 0x00	; 0
    268e:	40 e8       	ldi	r20, 0x80	; 128
    2690:	5f e3       	ldi	r21, 0x3F	; 63
    2692:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__subsf3>
    2696:	4b 01       	movw	r8, r22
    2698:	5c 01       	movw	r10, r24
    269a:	20 e0       	ldi	r18, 0x00	; 0
    269c:	30 e0       	ldi	r19, 0x00	; 0
    269e:	40 e0       	ldi	r20, 0x00	; 0
    26a0:	50 e4       	ldi	r21, 0x40	; 64
    26a2:	c7 01       	movw	r24, r14
    26a4:	b6 01       	movw	r22, r12
    26a6:	0e 94 f0 2d 	call	0x5be0	; 0x5be0 <__addsf3>
    26aa:	9b 01       	movw	r18, r22
    26ac:	ac 01       	movw	r20, r24
    26ae:	c5 01       	movw	r24, r10
    26b0:	b4 01       	movw	r22, r8
    26b2:	0e 94 3a 2e 	call	0x5c74	; 0x5c74 <__divsf3>
    26b6:	6b 01       	movw	r12, r22
    26b8:	7c 01       	movw	r14, r24
    26ba:	00 e0       	ldi	r16, 0x00	; 0
    26bc:	10 e0       	ldi	r17, 0x00	; 0
    26be:	56 c0       	rjmp	.+172    	; 0x276c <atanf+0x1c0>
    26c0:	20 e0       	ldi	r18, 0x00	; 0
    26c2:	30 e0       	ldi	r19, 0x00	; 0
    26c4:	40 e8       	ldi	r20, 0x80	; 128
    26c6:	5f e3       	ldi	r21, 0x3F	; 63
    26c8:	c7 01       	movw	r24, r14
    26ca:	b6 01       	movw	r22, r12
    26cc:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__subsf3>
    26d0:	4b 01       	movw	r8, r22
    26d2:	5c 01       	movw	r10, r24
    26d4:	20 e0       	ldi	r18, 0x00	; 0
    26d6:	30 e0       	ldi	r19, 0x00	; 0
    26d8:	40 e8       	ldi	r20, 0x80	; 128
    26da:	5f e3       	ldi	r21, 0x3F	; 63
    26dc:	c7 01       	movw	r24, r14
    26de:	b6 01       	movw	r22, r12
    26e0:	0e 94 f0 2d 	call	0x5be0	; 0x5be0 <__addsf3>
    26e4:	9b 01       	movw	r18, r22
    26e6:	ac 01       	movw	r20, r24
    26e8:	c5 01       	movw	r24, r10
    26ea:	b4 01       	movw	r22, r8
    26ec:	0e 94 3a 2e 	call	0x5c74	; 0x5c74 <__divsf3>
    26f0:	6b 01       	movw	r12, r22
    26f2:	7c 01       	movw	r14, r24
    26f4:	01 e0       	ldi	r16, 0x01	; 1
    26f6:	10 e0       	ldi	r17, 0x00	; 0
    26f8:	39 c0       	rjmp	.+114    	; 0x276c <atanf+0x1c0>
    26fa:	81 14       	cp	r8, r1
    26fc:	91 04       	cpc	r9, r1
    26fe:	ac e1       	ldi	r26, 0x1C	; 28
    2700:	aa 06       	cpc	r10, r26
    2702:	a0 e4       	ldi	r26, 0x40	; 64
    2704:	ba 06       	cpc	r11, r26
    2706:	18 f5       	brcc	.+70     	; 0x274e <atanf+0x1a2>
    2708:	20 e0       	ldi	r18, 0x00	; 0
    270a:	30 e0       	ldi	r19, 0x00	; 0
    270c:	40 ec       	ldi	r20, 0xC0	; 192
    270e:	5f e3       	ldi	r21, 0x3F	; 63
    2710:	c7 01       	movw	r24, r14
    2712:	b6 01       	movw	r22, r12
    2714:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__subsf3>
    2718:	4b 01       	movw	r8, r22
    271a:	5c 01       	movw	r10, r24
    271c:	20 e0       	ldi	r18, 0x00	; 0
    271e:	30 e0       	ldi	r19, 0x00	; 0
    2720:	40 ec       	ldi	r20, 0xC0	; 192
    2722:	5f e3       	ldi	r21, 0x3F	; 63
    2724:	c7 01       	movw	r24, r14
    2726:	b6 01       	movw	r22, r12
    2728:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    272c:	20 e0       	ldi	r18, 0x00	; 0
    272e:	30 e0       	ldi	r19, 0x00	; 0
    2730:	40 e8       	ldi	r20, 0x80	; 128
    2732:	5f e3       	ldi	r21, 0x3F	; 63
    2734:	0e 94 f0 2d 	call	0x5be0	; 0x5be0 <__addsf3>
    2738:	9b 01       	movw	r18, r22
    273a:	ac 01       	movw	r20, r24
    273c:	c5 01       	movw	r24, r10
    273e:	b4 01       	movw	r22, r8
    2740:	0e 94 3a 2e 	call	0x5c74	; 0x5c74 <__divsf3>
    2744:	6b 01       	movw	r12, r22
    2746:	7c 01       	movw	r14, r24
    2748:	02 e0       	ldi	r16, 0x02	; 2
    274a:	10 e0       	ldi	r17, 0x00	; 0
    274c:	0f c0       	rjmp	.+30     	; 0x276c <atanf+0x1c0>
    274e:	a7 01       	movw	r20, r14
    2750:	96 01       	movw	r18, r12
    2752:	60 e0       	ldi	r22, 0x00	; 0
    2754:	70 e0       	ldi	r23, 0x00	; 0
    2756:	80 e8       	ldi	r24, 0x80	; 128
    2758:	9f eb       	ldi	r25, 0xBF	; 191
    275a:	0e 94 3a 2e 	call	0x5c74	; 0x5c74 <__divsf3>
    275e:	6b 01       	movw	r12, r22
    2760:	7c 01       	movw	r14, r24
    2762:	03 e0       	ldi	r16, 0x03	; 3
    2764:	10 e0       	ldi	r17, 0x00	; 0
    2766:	02 c0       	rjmp	.+4      	; 0x276c <atanf+0x1c0>
    2768:	0f ef       	ldi	r16, 0xFF	; 255
    276a:	1f ef       	ldi	r17, 0xFF	; 255
    276c:	a7 01       	movw	r20, r14
    276e:	96 01       	movw	r18, r12
    2770:	c7 01       	movw	r24, r14
    2772:	b6 01       	movw	r22, r12
    2774:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    2778:	2b 01       	movw	r4, r22
    277a:	3c 01       	movw	r6, r24
    277c:	9b 01       	movw	r18, r22
    277e:	ac 01       	movw	r20, r24
    2780:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    2784:	4b 01       	movw	r8, r22
    2786:	5c 01       	movw	r10, r24
    2788:	25 e2       	ldi	r18, 0x25	; 37
    278a:	3c ea       	ldi	r19, 0xAC	; 172
    278c:	4c e7       	ldi	r20, 0x7C	; 124
    278e:	5d e3       	ldi	r21, 0x3D	; 61
    2790:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    2794:	2d e0       	ldi	r18, 0x0D	; 13
    2796:	35 ef       	ldi	r19, 0xF5	; 245
    2798:	41 e1       	ldi	r20, 0x11	; 17
    279a:	5e e3       	ldi	r21, 0x3E	; 62
    279c:	0e 94 f0 2d 	call	0x5be0	; 0x5be0 <__addsf3>
    27a0:	a5 01       	movw	r20, r10
    27a2:	94 01       	movw	r18, r8
    27a4:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    27a8:	29 ea       	ldi	r18, 0xA9	; 169
    27aa:	3a ea       	ldi	r19, 0xAA	; 170
    27ac:	4a ea       	ldi	r20, 0xAA	; 170
    27ae:	5e e3       	ldi	r21, 0x3E	; 62
    27b0:	0e 94 f0 2d 	call	0x5be0	; 0x5be0 <__addsf3>
    27b4:	a3 01       	movw	r20, r6
    27b6:	92 01       	movw	r18, r4
    27b8:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    27bc:	2b 01       	movw	r4, r22
    27be:	3c 01       	movw	r6, r24
    27c0:	27 e4       	ldi	r18, 0x47	; 71
    27c2:	32 e1       	ldi	r19, 0x12	; 18
    27c4:	4a ed       	ldi	r20, 0xDA	; 218
    27c6:	5d eb       	ldi	r21, 0xBD	; 189
    27c8:	c5 01       	movw	r24, r10
    27ca:	b4 01       	movw	r22, r8
    27cc:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    27d0:	28 e9       	ldi	r18, 0x98	; 152
    27d2:	3a ec       	ldi	r19, 0xCA	; 202
    27d4:	4c e4       	ldi	r20, 0x4C	; 76
    27d6:	5e e3       	ldi	r21, 0x3E	; 62
    27d8:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__subsf3>
    27dc:	a5 01       	movw	r20, r10
    27de:	94 01       	movw	r18, r8
    27e0:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    27e4:	9b 01       	movw	r18, r22
    27e6:	ac 01       	movw	r20, r24
    27e8:	0f 3f       	cpi	r16, 0xFF	; 255
    27ea:	bf ef       	ldi	r27, 0xFF	; 255
    27ec:	1b 07       	cpc	r17, r27
    27ee:	79 f4       	brne	.+30     	; 0x280e <atanf+0x262>
    27f0:	c3 01       	movw	r24, r6
    27f2:	b2 01       	movw	r22, r4
    27f4:	0e 94 f0 2d 	call	0x5be0	; 0x5be0 <__addsf3>
    27f8:	a7 01       	movw	r20, r14
    27fa:	96 01       	movw	r18, r12
    27fc:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    2800:	9b 01       	movw	r18, r22
    2802:	ac 01       	movw	r20, r24
    2804:	c7 01       	movw	r24, r14
    2806:	b6 01       	movw	r22, r12
    2808:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__subsf3>
    280c:	43 c0       	rjmp	.+134    	; 0x2894 <atanf+0x2e8>
    280e:	00 0f       	add	r16, r16
    2810:	11 1f       	adc	r17, r17
    2812:	00 0f       	add	r16, r16
    2814:	11 1f       	adc	r17, r17
    2816:	48 01       	movw	r8, r16
    2818:	11 0f       	add	r17, r17
    281a:	aa 08       	sbc	r10, r10
    281c:	aa 2d       	mov	r26, r10
    281e:	c4 01       	movw	r24, r8
    2820:	88 5e       	subi	r24, 0xE8	; 232
    2822:	9d 4f       	sbci	r25, 0xFD	; 253
    2824:	af 4f       	sbci	r26, 0xFF	; 255
    2826:	89 87       	std	Y+9, r24	; 0x09
    2828:	9a 87       	std	Y+10, r25	; 0x0a
    282a:	ab 87       	std	Y+11, r26	; 0x0b
    282c:	c3 01       	movw	r24, r6
    282e:	b2 01       	movw	r22, r4
    2830:	0e 94 f0 2d 	call	0x5be0	; 0x5be0 <__addsf3>
    2834:	a7 01       	movw	r20, r14
    2836:	96 01       	movw	r18, r12
    2838:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    283c:	2b 01       	movw	r4, r22
    283e:	3c 01       	movw	r6, r24
    2840:	aa 2d       	mov	r26, r10
    2842:	c4 01       	movw	r24, r8
    2844:	88 5f       	subi	r24, 0xF8	; 248
    2846:	9d 4f       	sbci	r25, 0xFD	; 253
    2848:	af 4f       	sbci	r26, 0xFF	; 255
    284a:	fc 01       	movw	r30, r24
    284c:	5a 2f       	mov	r21, r26
    284e:	0e 94 a4 2d 	call	0x5b48	; 0x5b48 <__xload_4>
    2852:	9b 01       	movw	r18, r22
    2854:	ac 01       	movw	r20, r24
    2856:	c3 01       	movw	r24, r6
    2858:	b2 01       	movw	r22, r4
    285a:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__subsf3>
    285e:	a7 01       	movw	r20, r14
    2860:	96 01       	movw	r18, r12
    2862:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__subsf3>
    2866:	8b 01       	movw	r16, r22
    2868:	9c 01       	movw	r18, r24
    286a:	e9 85       	ldd	r30, Y+9	; 0x09
    286c:	fa 85       	ldd	r31, Y+10	; 0x0a
    286e:	5b 85       	ldd	r21, Y+11	; 0x0b
    2870:	0e 94 a4 2d 	call	0x5b48	; 0x5b48 <__xload_4>
    2874:	a9 01       	movw	r20, r18
    2876:	98 01       	movw	r18, r16
    2878:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__subsf3>
    287c:	2d 81       	ldd	r18, Y+5	; 0x05
    287e:	3e 81       	ldd	r19, Y+6	; 0x06
    2880:	4f 81       	ldd	r20, Y+7	; 0x07
    2882:	58 85       	ldd	r21, Y+8	; 0x08
    2884:	23 2b       	or	r18, r19
    2886:	24 2b       	or	r18, r20
    2888:	25 2b       	or	r18, r21
    288a:	21 f0       	breq	.+8      	; 0x2894 <atanf+0x2e8>
    288c:	90 58       	subi	r25, 0x80	; 128
    288e:	02 c0       	rjmp	.+4      	; 0x2894 <atanf+0x2e8>
    2890:	c7 01       	movw	r24, r14
    2892:	b6 01       	movw	r22, r12
    2894:	2b 96       	adiw	r28, 0x0b	; 11
    2896:	e0 e1       	ldi	r30, 0x10	; 16
    2898:	0c 94 77 2c 	jmp	0x58ee	; 0x58ee <__epilogue_restores__+0x4>

Disassembly of section .text:

00005bde <__subsf3>:
    5bde:	50 58       	subi	r21, 0x80	; 128

00005be0 <__addsf3>:
    5be0:	bb 27       	eor	r27, r27
    5be2:	aa 27       	eor	r26, r26
    5be4:	0e 94 ac 27 	call	0x4f58	; 0x4f58 <__addsf3x>
    5be8:	0c 94 57 2d 	jmp	0x5aae	; 0x5aae <__fp_round>

Disassembly of section .text:

00004f58 <__addsf3x>:
    4f58:	11 c0       	rjmp	.+34     	; 0x4f7c <__addsf3x+0x24>
    4f5a:	0e 94 fd 2d 	call	0x5bfa	; 0x5bfa <__fp_pscA>
    4f5e:	38 f0       	brcs	.+14     	; 0x4f6e <__addsf3x+0x16>
    4f60:	0e 94 04 2e 	call	0x5c08	; 0x5c08 <__fp_pscB>
    4f64:	20 f0       	brcs	.+8      	; 0x4f6e <__addsf3x+0x16>
    4f66:	39 f4       	brne	.+14     	; 0x4f76 <__addsf3x+0x1e>
    4f68:	9f 3f       	cpi	r25, 0xFF	; 255
    4f6a:	19 f4       	brne	.+6      	; 0x4f72 <__addsf3x+0x1a>
    4f6c:	26 f4       	brtc	.+8      	; 0x4f76 <__addsf3x+0x1e>
    4f6e:	0c 94 42 2e 	jmp	0x5c84	; 0x5c84 <__fp_nan>
    4f72:	0e f4       	brtc	.+2      	; 0x4f76 <__addsf3x+0x1e>
    4f74:	e0 95       	com	r30
    4f76:	e7 fb       	bst	r30, 7
    4f78:	0c 94 1f 2e 	jmp	0x5c3e	; 0x5c3e <__fp_inf>
    4f7c:	e9 2f       	mov	r30, r25
    4f7e:	0e 94 c0 2b 	call	0x5780	; 0x5780 <__fp_split3>
    4f82:	58 f3       	brcs	.-42     	; 0x4f5a <__addsf3x+0x2>
    4f84:	ba 17       	cp	r27, r26
    4f86:	62 07       	cpc	r22, r18
    4f88:	73 07       	cpc	r23, r19
    4f8a:	84 07       	cpc	r24, r20
    4f8c:	95 07       	cpc	r25, r21
    4f8e:	20 f0       	brcs	.+8      	; 0x4f98 <__addsf3x+0x40>
    4f90:	79 f4       	brne	.+30     	; 0x4fb0 <__addsf3x+0x58>
    4f92:	a6 f5       	brtc	.+104    	; 0x4ffc <__addsf3x+0xa4>
    4f94:	0c 94 0b 2e 	jmp	0x5c16	; 0x5c16 <__fp_zero>
    4f98:	0e f4       	brtc	.+2      	; 0x4f9c <__addsf3x+0x44>
    4f9a:	e0 95       	com	r30
    4f9c:	0b 2e       	mov	r0, r27
    4f9e:	ba 2f       	mov	r27, r26
    4fa0:	a0 2d       	mov	r26, r0
    4fa2:	0b 01       	movw	r0, r22
    4fa4:	b9 01       	movw	r22, r18
    4fa6:	90 01       	movw	r18, r0
    4fa8:	0c 01       	movw	r0, r24
    4faa:	ca 01       	movw	r24, r20
    4fac:	a0 01       	movw	r20, r0
    4fae:	11 24       	eor	r1, r1
    4fb0:	ff 27       	eor	r31, r31
    4fb2:	59 1b       	sub	r21, r25
    4fb4:	99 f0       	breq	.+38     	; 0x4fdc <__addsf3x+0x84>
    4fb6:	59 3f       	cpi	r21, 0xF9	; 249
    4fb8:	50 f4       	brcc	.+20     	; 0x4fce <__addsf3x+0x76>
    4fba:	50 3e       	cpi	r21, 0xE0	; 224
    4fbc:	68 f1       	brcs	.+90     	; 0x5018 <__addsf3x+0xc0>
    4fbe:	1a 16       	cp	r1, r26
    4fc0:	f0 40       	sbci	r31, 0x00	; 0
    4fc2:	a2 2f       	mov	r26, r18
    4fc4:	23 2f       	mov	r18, r19
    4fc6:	34 2f       	mov	r19, r20
    4fc8:	44 27       	eor	r20, r20
    4fca:	58 5f       	subi	r21, 0xF8	; 248
    4fcc:	f3 cf       	rjmp	.-26     	; 0x4fb4 <__addsf3x+0x5c>
    4fce:	46 95       	lsr	r20
    4fd0:	37 95       	ror	r19
    4fd2:	27 95       	ror	r18
    4fd4:	a7 95       	ror	r26
    4fd6:	f0 40       	sbci	r31, 0x00	; 0
    4fd8:	53 95       	inc	r21
    4fda:	c9 f7       	brne	.-14     	; 0x4fce <__addsf3x+0x76>
    4fdc:	7e f4       	brtc	.+30     	; 0x4ffc <__addsf3x+0xa4>
    4fde:	1f 16       	cp	r1, r31
    4fe0:	ba 0b       	sbc	r27, r26
    4fe2:	62 0b       	sbc	r22, r18
    4fe4:	73 0b       	sbc	r23, r19
    4fe6:	84 0b       	sbc	r24, r20
    4fe8:	ba f0       	brmi	.+46     	; 0x5018 <__addsf3x+0xc0>
    4fea:	91 50       	subi	r25, 0x01	; 1
    4fec:	a1 f0       	breq	.+40     	; 0x5016 <__addsf3x+0xbe>
    4fee:	ff 0f       	add	r31, r31
    4ff0:	bb 1f       	adc	r27, r27
    4ff2:	66 1f       	adc	r22, r22
    4ff4:	77 1f       	adc	r23, r23
    4ff6:	88 1f       	adc	r24, r24
    4ff8:	c2 f7       	brpl	.-16     	; 0x4fea <__addsf3x+0x92>
    4ffa:	0e c0       	rjmp	.+28     	; 0x5018 <__addsf3x+0xc0>
    4ffc:	ba 0f       	add	r27, r26
    4ffe:	62 1f       	adc	r22, r18
    5000:	73 1f       	adc	r23, r19
    5002:	84 1f       	adc	r24, r20
    5004:	48 f4       	brcc	.+18     	; 0x5018 <__addsf3x+0xc0>
    5006:	87 95       	ror	r24
    5008:	77 95       	ror	r23
    500a:	67 95       	ror	r22
    500c:	b7 95       	ror	r27
    500e:	f7 95       	ror	r31
    5010:	9e 3f       	cpi	r25, 0xFE	; 254
    5012:	08 f0       	brcs	.+2      	; 0x5016 <__addsf3x+0xbe>
    5014:	b0 cf       	rjmp	.-160    	; 0x4f76 <__addsf3x+0x1e>
    5016:	93 95       	inc	r25
    5018:	88 0f       	add	r24, r24
    501a:	08 f0       	brcs	.+2      	; 0x501e <__addsf3x+0xc6>
    501c:	99 27       	eor	r25, r25
    501e:	ee 0f       	add	r30, r30
    5020:	97 95       	ror	r25
    5022:	87 95       	ror	r24
    5024:	08 95       	ret

Disassembly of section .text:

00005c74 <__divsf3>:
    5c74:	0e 94 d3 26 	call	0x4da6	; 0x4da6 <__divsf3x>
    5c78:	0c 94 57 2d 	jmp	0x5aae	; 0x5aae <__fp_round>

Disassembly of section .text:

00004da6 <__divsf3x>:
    4da6:	10 c0       	rjmp	.+32     	; 0x4dc8 <__divsf3x+0x22>
    4da8:	0e 94 04 2e 	call	0x5c08	; 0x5c08 <__fp_pscB>
    4dac:	58 f0       	brcs	.+22     	; 0x4dc4 <__divsf3x+0x1e>
    4dae:	0e 94 fd 2d 	call	0x5bfa	; 0x5bfa <__fp_pscA>
    4db2:	40 f0       	brcs	.+16     	; 0x4dc4 <__divsf3x+0x1e>
    4db4:	29 f4       	brne	.+10     	; 0x4dc0 <__divsf3x+0x1a>
    4db6:	5f 3f       	cpi	r21, 0xFF	; 255
    4db8:	29 f0       	breq	.+10     	; 0x4dc4 <__divsf3x+0x1e>
    4dba:	0c 94 1f 2e 	jmp	0x5c3e	; 0x5c3e <__fp_inf>
    4dbe:	51 11       	cpse	r21, r1
    4dc0:	0c 94 0c 2e 	jmp	0x5c18	; 0x5c18 <__fp_szero>
    4dc4:	0c 94 42 2e 	jmp	0x5c84	; 0x5c84 <__fp_nan>
    4dc8:	0e 94 c0 2b 	call	0x5780	; 0x5780 <__fp_split3>
    4dcc:	68 f3       	brcs	.-38     	; 0x4da8 <__divsf3x+0x2>

00004dce <__divsf3_pse>:
    4dce:	99 23       	and	r25, r25
    4dd0:	b1 f3       	breq	.-20     	; 0x4dbe <__divsf3x+0x18>
    4dd2:	55 23       	and	r21, r21
    4dd4:	91 f3       	breq	.-28     	; 0x4dba <__divsf3x+0x14>
    4dd6:	95 1b       	sub	r25, r21
    4dd8:	55 0b       	sbc	r21, r21
    4dda:	bb 27       	eor	r27, r27
    4ddc:	aa 27       	eor	r26, r26
    4dde:	62 17       	cp	r22, r18
    4de0:	73 07       	cpc	r23, r19
    4de2:	84 07       	cpc	r24, r20
    4de4:	38 f0       	brcs	.+14     	; 0x4df4 <__divsf3_pse+0x26>
    4de6:	9f 5f       	subi	r25, 0xFF	; 255
    4de8:	5f 4f       	sbci	r21, 0xFF	; 255
    4dea:	22 0f       	add	r18, r18
    4dec:	33 1f       	adc	r19, r19
    4dee:	44 1f       	adc	r20, r20
    4df0:	aa 1f       	adc	r26, r26
    4df2:	a9 f3       	breq	.-22     	; 0x4dde <__divsf3_pse+0x10>
    4df4:	35 d0       	rcall	.+106    	; 0x4e60 <__divsf3_pse+0x92>
    4df6:	0e 2e       	mov	r0, r30
    4df8:	3a f0       	brmi	.+14     	; 0x4e08 <__divsf3_pse+0x3a>
    4dfa:	e0 e8       	ldi	r30, 0x80	; 128
    4dfc:	32 d0       	rcall	.+100    	; 0x4e62 <__divsf3_pse+0x94>
    4dfe:	91 50       	subi	r25, 0x01	; 1
    4e00:	50 40       	sbci	r21, 0x00	; 0
    4e02:	e6 95       	lsr	r30
    4e04:	00 1c       	adc	r0, r0
    4e06:	ca f7       	brpl	.-14     	; 0x4dfa <__divsf3_pse+0x2c>
    4e08:	2b d0       	rcall	.+86     	; 0x4e60 <__divsf3_pse+0x92>
    4e0a:	fe 2f       	mov	r31, r30
    4e0c:	29 d0       	rcall	.+82     	; 0x4e60 <__divsf3_pse+0x92>
    4e0e:	66 0f       	add	r22, r22
    4e10:	77 1f       	adc	r23, r23
    4e12:	88 1f       	adc	r24, r24
    4e14:	bb 1f       	adc	r27, r27
    4e16:	26 17       	cp	r18, r22
    4e18:	37 07       	cpc	r19, r23
    4e1a:	48 07       	cpc	r20, r24
    4e1c:	ab 07       	cpc	r26, r27
    4e1e:	b0 e8       	ldi	r27, 0x80	; 128
    4e20:	09 f0       	breq	.+2      	; 0x4e24 <__divsf3_pse+0x56>
    4e22:	bb 0b       	sbc	r27, r27
    4e24:	80 2d       	mov	r24, r0
    4e26:	bf 01       	movw	r22, r30
    4e28:	ff 27       	eor	r31, r31
    4e2a:	93 58       	subi	r25, 0x83	; 131
    4e2c:	5f 4f       	sbci	r21, 0xFF	; 255
    4e2e:	3a f0       	brmi	.+14     	; 0x4e3e <__divsf3_pse+0x70>
    4e30:	9e 3f       	cpi	r25, 0xFE	; 254
    4e32:	51 05       	cpc	r21, r1
    4e34:	78 f0       	brcs	.+30     	; 0x4e54 <__divsf3_pse+0x86>
    4e36:	0c 94 1f 2e 	jmp	0x5c3e	; 0x5c3e <__fp_inf>
    4e3a:	0c 94 0c 2e 	jmp	0x5c18	; 0x5c18 <__fp_szero>
    4e3e:	5f 3f       	cpi	r21, 0xFF	; 255
    4e40:	e4 f3       	brlt	.-8      	; 0x4e3a <__divsf3_pse+0x6c>
    4e42:	98 3e       	cpi	r25, 0xE8	; 232
    4e44:	d4 f3       	brlt	.-12     	; 0x4e3a <__divsf3_pse+0x6c>
    4e46:	86 95       	lsr	r24
    4e48:	77 95       	ror	r23
    4e4a:	67 95       	ror	r22
    4e4c:	b7 95       	ror	r27
    4e4e:	f7 95       	ror	r31
    4e50:	9f 5f       	subi	r25, 0xFF	; 255
    4e52:	c9 f7       	brne	.-14     	; 0x4e46 <__divsf3_pse+0x78>
    4e54:	88 0f       	add	r24, r24
    4e56:	91 1d       	adc	r25, r1
    4e58:	96 95       	lsr	r25
    4e5a:	87 95       	ror	r24
    4e5c:	97 f9       	bld	r25, 7
    4e5e:	08 95       	ret
    4e60:	e1 e0       	ldi	r30, 0x01	; 1
    4e62:	66 0f       	add	r22, r22
    4e64:	77 1f       	adc	r23, r23
    4e66:	88 1f       	adc	r24, r24
    4e68:	bb 1f       	adc	r27, r27
    4e6a:	62 17       	cp	r22, r18
    4e6c:	73 07       	cpc	r23, r19
    4e6e:	84 07       	cpc	r24, r20
    4e70:	ba 07       	cpc	r27, r26
    4e72:	20 f0       	brcs	.+8      	; 0x4e7c <__divsf3_pse+0xae>
    4e74:	62 1b       	sub	r22, r18
    4e76:	73 0b       	sbc	r23, r19
    4e78:	84 0b       	sbc	r24, r20
    4e7a:	ba 0b       	sbc	r27, r26
    4e7c:	ee 1f       	adc	r30, r30
    4e7e:	88 f7       	brcc	.-30     	; 0x4e62 <__divsf3_pse+0x94>
    4e80:	e0 95       	com	r30
    4e82:	08 95       	ret

Disassembly of section .text:

00005bec <__fixsfsi>:
    5bec:	0e 94 fd 2a 	call	0x55fa	; 0x55fa <__fixunssfsi>
    5bf0:	68 94       	set
    5bf2:	b1 11       	cpse	r27, r1
    5bf4:	0c 94 0c 2e 	jmp	0x5c18	; 0x5c18 <__fp_szero>
    5bf8:	08 95       	ret

Disassembly of section .text:

000055fa <__fixunssfsi>:
    55fa:	0e 94 c8 2b 	call	0x5790	; 0x5790 <__fp_splitA>
    55fe:	88 f0       	brcs	.+34     	; 0x5622 <__fixunssfsi+0x28>
    5600:	9f 57       	subi	r25, 0x7F	; 127
    5602:	98 f0       	brcs	.+38     	; 0x562a <__fixunssfsi+0x30>
    5604:	b9 2f       	mov	r27, r25
    5606:	99 27       	eor	r25, r25
    5608:	b7 51       	subi	r27, 0x17	; 23
    560a:	b0 f0       	brcs	.+44     	; 0x5638 <__fixunssfsi+0x3e>
    560c:	e1 f0       	breq	.+56     	; 0x5646 <__fixunssfsi+0x4c>
    560e:	66 0f       	add	r22, r22
    5610:	77 1f       	adc	r23, r23
    5612:	88 1f       	adc	r24, r24
    5614:	99 1f       	adc	r25, r25
    5616:	1a f0       	brmi	.+6      	; 0x561e <__fixunssfsi+0x24>
    5618:	ba 95       	dec	r27
    561a:	c9 f7       	brne	.-14     	; 0x560e <__fixunssfsi+0x14>
    561c:	14 c0       	rjmp	.+40     	; 0x5646 <__fixunssfsi+0x4c>
    561e:	b1 30       	cpi	r27, 0x01	; 1
    5620:	91 f0       	breq	.+36     	; 0x5646 <__fixunssfsi+0x4c>
    5622:	0e 94 0b 2e 	call	0x5c16	; 0x5c16 <__fp_zero>
    5626:	b1 e0       	ldi	r27, 0x01	; 1
    5628:	08 95       	ret
    562a:	0c 94 0b 2e 	jmp	0x5c16	; 0x5c16 <__fp_zero>
    562e:	67 2f       	mov	r22, r23
    5630:	78 2f       	mov	r23, r24
    5632:	88 27       	eor	r24, r24
    5634:	b8 5f       	subi	r27, 0xF8	; 248
    5636:	39 f0       	breq	.+14     	; 0x5646 <__fixunssfsi+0x4c>
    5638:	b9 3f       	cpi	r27, 0xF9	; 249
    563a:	cc f3       	brlt	.-14     	; 0x562e <__fixunssfsi+0x34>
    563c:	86 95       	lsr	r24
    563e:	77 95       	ror	r23
    5640:	67 95       	ror	r22
    5642:	b3 95       	inc	r27
    5644:	d9 f7       	brne	.-10     	; 0x563c <__fixunssfsi+0x42>
    5646:	3e f4       	brtc	.+14     	; 0x5656 <__fixunssfsi+0x5c>
    5648:	90 95       	com	r25
    564a:	80 95       	com	r24
    564c:	70 95       	com	r23
    564e:	61 95       	neg	r22
    5650:	7f 4f       	sbci	r23, 0xFF	; 255
    5652:	8f 4f       	sbci	r24, 0xFF	; 255
    5654:	9f 4f       	sbci	r25, 0xFF	; 255
    5656:	08 95       	ret

Disassembly of section .text:

000052f4 <__floatunsisf>:
    52f4:	e8 94       	clt
    52f6:	09 c0       	rjmp	.+18     	; 0x530a <__floatsisf+0x12>

000052f8 <__floatsisf>:
    52f8:	97 fb       	bst	r25, 7
    52fa:	3e f4       	brtc	.+14     	; 0x530a <__floatsisf+0x12>
    52fc:	90 95       	com	r25
    52fe:	80 95       	com	r24
    5300:	70 95       	com	r23
    5302:	61 95       	neg	r22
    5304:	7f 4f       	sbci	r23, 0xFF	; 255
    5306:	8f 4f       	sbci	r24, 0xFF	; 255
    5308:	9f 4f       	sbci	r25, 0xFF	; 255
    530a:	99 23       	and	r25, r25
    530c:	a9 f0       	breq	.+42     	; 0x5338 <__floatsisf+0x40>
    530e:	f9 2f       	mov	r31, r25
    5310:	96 e9       	ldi	r25, 0x96	; 150
    5312:	bb 27       	eor	r27, r27
    5314:	93 95       	inc	r25
    5316:	f6 95       	lsr	r31
    5318:	87 95       	ror	r24
    531a:	77 95       	ror	r23
    531c:	67 95       	ror	r22
    531e:	b7 95       	ror	r27
    5320:	f1 11       	cpse	r31, r1
    5322:	f8 cf       	rjmp	.-16     	; 0x5314 <__floatsisf+0x1c>
    5324:	fa f4       	brpl	.+62     	; 0x5364 <__floatsisf+0x6c>
    5326:	bb 0f       	add	r27, r27
    5328:	11 f4       	brne	.+4      	; 0x532e <__floatsisf+0x36>
    532a:	60 ff       	sbrs	r22, 0
    532c:	1b c0       	rjmp	.+54     	; 0x5364 <__floatsisf+0x6c>
    532e:	6f 5f       	subi	r22, 0xFF	; 255
    5330:	7f 4f       	sbci	r23, 0xFF	; 255
    5332:	8f 4f       	sbci	r24, 0xFF	; 255
    5334:	9f 4f       	sbci	r25, 0xFF	; 255
    5336:	16 c0       	rjmp	.+44     	; 0x5364 <__floatsisf+0x6c>
    5338:	88 23       	and	r24, r24
    533a:	11 f0       	breq	.+4      	; 0x5340 <__floatsisf+0x48>
    533c:	96 e9       	ldi	r25, 0x96	; 150
    533e:	11 c0       	rjmp	.+34     	; 0x5362 <__floatsisf+0x6a>
    5340:	77 23       	and	r23, r23
    5342:	21 f0       	breq	.+8      	; 0x534c <__floatsisf+0x54>
    5344:	9e e8       	ldi	r25, 0x8E	; 142
    5346:	87 2f       	mov	r24, r23
    5348:	76 2f       	mov	r23, r22
    534a:	05 c0       	rjmp	.+10     	; 0x5356 <__floatsisf+0x5e>
    534c:	66 23       	and	r22, r22
    534e:	71 f0       	breq	.+28     	; 0x536c <__floatsisf+0x74>
    5350:	96 e8       	ldi	r25, 0x86	; 134
    5352:	86 2f       	mov	r24, r22
    5354:	70 e0       	ldi	r23, 0x00	; 0
    5356:	60 e0       	ldi	r22, 0x00	; 0
    5358:	2a f0       	brmi	.+10     	; 0x5364 <__floatsisf+0x6c>
    535a:	9a 95       	dec	r25
    535c:	66 0f       	add	r22, r22
    535e:	77 1f       	adc	r23, r23
    5360:	88 1f       	adc	r24, r24
    5362:	da f7       	brpl	.-10     	; 0x535a <__floatsisf+0x62>
    5364:	88 0f       	add	r24, r24
    5366:	96 95       	lsr	r25
    5368:	87 95       	ror	r24
    536a:	97 f9       	bld	r25, 7
    536c:	08 95       	ret

Disassembly of section .text:

00005c3e <__fp_inf>:
    5c3e:	97 f9       	bld	r25, 7
    5c40:	9f 67       	ori	r25, 0x7F	; 127
    5c42:	80 e8       	ldi	r24, 0x80	; 128
    5c44:	70 e0       	ldi	r23, 0x00	; 0
    5c46:	60 e0       	ldi	r22, 0x00	; 0
    5c48:	08 95       	ret

Disassembly of section .text:

00005c84 <__fp_nan>:
    5c84:	9f ef       	ldi	r25, 0xFF	; 255
    5c86:	80 ec       	ldi	r24, 0xC0	; 192
    5c88:	08 95       	ret

Disassembly of section .text:

00005bfa <__fp_pscA>:
    5bfa:	00 24       	eor	r0, r0
    5bfc:	0a 94       	dec	r0
    5bfe:	16 16       	cp	r1, r22
    5c00:	17 06       	cpc	r1, r23
    5c02:	18 06       	cpc	r1, r24
    5c04:	09 06       	cpc	r0, r25
    5c06:	08 95       	ret

Disassembly of section .text:

00005c08 <__fp_pscB>:
    5c08:	00 24       	eor	r0, r0
    5c0a:	0a 94       	dec	r0
    5c0c:	12 16       	cp	r1, r18
    5c0e:	13 06       	cpc	r1, r19
    5c10:	14 06       	cpc	r1, r20
    5c12:	05 06       	cpc	r0, r21
    5c14:	08 95       	ret

Disassembly of section .text:

00005aae <__fp_round>:
    5aae:	09 2e       	mov	r0, r25
    5ab0:	03 94       	inc	r0
    5ab2:	00 0c       	add	r0, r0
    5ab4:	11 f4       	brne	.+4      	; 0x5aba <__fp_round+0xc>
    5ab6:	88 23       	and	r24, r24
    5ab8:	52 f0       	brmi	.+20     	; 0x5ace <__fp_round+0x20>
    5aba:	bb 0f       	add	r27, r27
    5abc:	40 f4       	brcc	.+16     	; 0x5ace <__fp_round+0x20>
    5abe:	bf 2b       	or	r27, r31
    5ac0:	11 f4       	brne	.+4      	; 0x5ac6 <__fp_round+0x18>
    5ac2:	60 ff       	sbrs	r22, 0
    5ac4:	04 c0       	rjmp	.+8      	; 0x5ace <__fp_round+0x20>
    5ac6:	6f 5f       	subi	r22, 0xFF	; 255
    5ac8:	7f 4f       	sbci	r23, 0xFF	; 255
    5aca:	8f 4f       	sbci	r24, 0xFF	; 255
    5acc:	9f 4f       	sbci	r25, 0xFF	; 255
    5ace:	08 95       	ret

Disassembly of section .text:

00005780 <__fp_split3>:
    5780:	57 fd       	sbrc	r21, 7
    5782:	90 58       	subi	r25, 0x80	; 128
    5784:	44 0f       	add	r20, r20
    5786:	55 1f       	adc	r21, r21
    5788:	59 f0       	breq	.+22     	; 0x57a0 <__fp_splitA+0x10>
    578a:	5f 3f       	cpi	r21, 0xFF	; 255
    578c:	71 f0       	breq	.+28     	; 0x57aa <__fp_splitA+0x1a>
    578e:	47 95       	ror	r20

00005790 <__fp_splitA>:
    5790:	88 0f       	add	r24, r24
    5792:	97 fb       	bst	r25, 7
    5794:	99 1f       	adc	r25, r25
    5796:	61 f0       	breq	.+24     	; 0x57b0 <__fp_splitA+0x20>
    5798:	9f 3f       	cpi	r25, 0xFF	; 255
    579a:	79 f0       	breq	.+30     	; 0x57ba <__fp_splitA+0x2a>
    579c:	87 95       	ror	r24
    579e:	08 95       	ret
    57a0:	12 16       	cp	r1, r18
    57a2:	13 06       	cpc	r1, r19
    57a4:	14 06       	cpc	r1, r20
    57a6:	55 1f       	adc	r21, r21
    57a8:	f2 cf       	rjmp	.-28     	; 0x578e <__fp_split3+0xe>
    57aa:	46 95       	lsr	r20
    57ac:	f1 df       	rcall	.-30     	; 0x5790 <__fp_splitA>
    57ae:	08 c0       	rjmp	.+16     	; 0x57c0 <__fp_splitA+0x30>
    57b0:	16 16       	cp	r1, r22
    57b2:	17 06       	cpc	r1, r23
    57b4:	18 06       	cpc	r1, r24
    57b6:	99 1f       	adc	r25, r25
    57b8:	f1 cf       	rjmp	.-30     	; 0x579c <__fp_splitA+0xc>
    57ba:	86 95       	lsr	r24
    57bc:	71 05       	cpc	r23, r1
    57be:	61 05       	cpc	r22, r1
    57c0:	08 94       	sec
    57c2:	08 95       	ret

Disassembly of section .text:

00005c16 <__fp_zero>:
    5c16:	e8 94       	clt

00005c18 <__fp_szero>:
    5c18:	bb 27       	eor	r27, r27
    5c1a:	66 27       	eor	r22, r22
    5c1c:	77 27       	eor	r23, r23
    5c1e:	cb 01       	movw	r24, r22
    5c20:	97 f9       	bld	r25, 7
    5c22:	08 95       	ret

Disassembly of section .text:

00005c7c <__mulsf3>:
    5c7c:	0e 94 42 27 	call	0x4e84	; 0x4e84 <__mulsf3x>
    5c80:	0c 94 57 2d 	jmp	0x5aae	; 0x5aae <__fp_round>

Disassembly of section .text:

00004e84 <__mulsf3x>:
    4e84:	0f c0       	rjmp	.+30     	; 0x4ea4 <__mulsf3x+0x20>
    4e86:	0e 94 fd 2d 	call	0x5bfa	; 0x5bfa <__fp_pscA>
    4e8a:	38 f0       	brcs	.+14     	; 0x4e9a <__mulsf3x+0x16>
    4e8c:	0e 94 04 2e 	call	0x5c08	; 0x5c08 <__fp_pscB>
    4e90:	20 f0       	brcs	.+8      	; 0x4e9a <__mulsf3x+0x16>
    4e92:	95 23       	and	r25, r21
    4e94:	11 f0       	breq	.+4      	; 0x4e9a <__mulsf3x+0x16>
    4e96:	0c 94 1f 2e 	jmp	0x5c3e	; 0x5c3e <__fp_inf>
    4e9a:	0c 94 42 2e 	jmp	0x5c84	; 0x5c84 <__fp_nan>
    4e9e:	11 24       	eor	r1, r1
    4ea0:	0c 94 0c 2e 	jmp	0x5c18	; 0x5c18 <__fp_szero>
    4ea4:	0e 94 c0 2b 	call	0x5780	; 0x5780 <__fp_split3>
    4ea8:	70 f3       	brcs	.-36     	; 0x4e86 <__mulsf3x+0x2>

00004eaa <__mulsf3_pse>:
    4eaa:	95 9f       	mul	r25, r21
    4eac:	c1 f3       	breq	.-16     	; 0x4e9e <__mulsf3x+0x1a>
    4eae:	95 0f       	add	r25, r21
    4eb0:	50 e0       	ldi	r21, 0x00	; 0
    4eb2:	55 1f       	adc	r21, r21
    4eb4:	62 9f       	mul	r22, r18
    4eb6:	f0 01       	movw	r30, r0
    4eb8:	72 9f       	mul	r23, r18
    4eba:	bb 27       	eor	r27, r27
    4ebc:	f0 0d       	add	r31, r0
    4ebe:	b1 1d       	adc	r27, r1
    4ec0:	63 9f       	mul	r22, r19
    4ec2:	aa 27       	eor	r26, r26
    4ec4:	f0 0d       	add	r31, r0
    4ec6:	b1 1d       	adc	r27, r1
    4ec8:	aa 1f       	adc	r26, r26
    4eca:	64 9f       	mul	r22, r20
    4ecc:	66 27       	eor	r22, r22
    4ece:	b0 0d       	add	r27, r0
    4ed0:	a1 1d       	adc	r26, r1
    4ed2:	66 1f       	adc	r22, r22
    4ed4:	82 9f       	mul	r24, r18
    4ed6:	22 27       	eor	r18, r18
    4ed8:	b0 0d       	add	r27, r0
    4eda:	a1 1d       	adc	r26, r1
    4edc:	62 1f       	adc	r22, r18
    4ede:	73 9f       	mul	r23, r19
    4ee0:	b0 0d       	add	r27, r0
    4ee2:	a1 1d       	adc	r26, r1
    4ee4:	62 1f       	adc	r22, r18
    4ee6:	83 9f       	mul	r24, r19
    4ee8:	a0 0d       	add	r26, r0
    4eea:	61 1d       	adc	r22, r1
    4eec:	22 1f       	adc	r18, r18
    4eee:	74 9f       	mul	r23, r20
    4ef0:	33 27       	eor	r19, r19
    4ef2:	a0 0d       	add	r26, r0
    4ef4:	61 1d       	adc	r22, r1
    4ef6:	23 1f       	adc	r18, r19
    4ef8:	84 9f       	mul	r24, r20
    4efa:	60 0d       	add	r22, r0
    4efc:	21 1d       	adc	r18, r1
    4efe:	82 2f       	mov	r24, r18
    4f00:	76 2f       	mov	r23, r22
    4f02:	6a 2f       	mov	r22, r26
    4f04:	11 24       	eor	r1, r1
    4f06:	9f 57       	subi	r25, 0x7F	; 127
    4f08:	50 40       	sbci	r21, 0x00	; 0
    4f0a:	9a f0       	brmi	.+38     	; 0x4f32 <__mulsf3_pse+0x88>
    4f0c:	f1 f0       	breq	.+60     	; 0x4f4a <__mulsf3_pse+0xa0>
    4f0e:	88 23       	and	r24, r24
    4f10:	4a f0       	brmi	.+18     	; 0x4f24 <__mulsf3_pse+0x7a>
    4f12:	ee 0f       	add	r30, r30
    4f14:	ff 1f       	adc	r31, r31
    4f16:	bb 1f       	adc	r27, r27
    4f18:	66 1f       	adc	r22, r22
    4f1a:	77 1f       	adc	r23, r23
    4f1c:	88 1f       	adc	r24, r24
    4f1e:	91 50       	subi	r25, 0x01	; 1
    4f20:	50 40       	sbci	r21, 0x00	; 0
    4f22:	a9 f7       	brne	.-22     	; 0x4f0e <__mulsf3_pse+0x64>
    4f24:	9e 3f       	cpi	r25, 0xFE	; 254
    4f26:	51 05       	cpc	r21, r1
    4f28:	80 f0       	brcs	.+32     	; 0x4f4a <__mulsf3_pse+0xa0>
    4f2a:	0c 94 1f 2e 	jmp	0x5c3e	; 0x5c3e <__fp_inf>
    4f2e:	0c 94 0c 2e 	jmp	0x5c18	; 0x5c18 <__fp_szero>
    4f32:	5f 3f       	cpi	r21, 0xFF	; 255
    4f34:	e4 f3       	brlt	.-8      	; 0x4f2e <__mulsf3_pse+0x84>
    4f36:	98 3e       	cpi	r25, 0xE8	; 232
    4f38:	d4 f3       	brlt	.-12     	; 0x4f2e <__mulsf3_pse+0x84>
    4f3a:	86 95       	lsr	r24
    4f3c:	77 95       	ror	r23
    4f3e:	67 95       	ror	r22
    4f40:	b7 95       	ror	r27
    4f42:	f7 95       	ror	r31
    4f44:	e7 95       	ror	r30
    4f46:	9f 5f       	subi	r25, 0xFF	; 255
    4f48:	c1 f7       	brne	.-16     	; 0x4f3a <__mulsf3_pse+0x90>
    4f4a:	fe 2b       	or	r31, r30
    4f4c:	88 0f       	add	r24, r24
    4f4e:	91 1d       	adc	r25, r1
    4f50:	96 95       	lsr	r25
    4f52:	87 95       	ror	r24
    4f54:	97 f9       	bld	r25, 7
    4f56:	08 95       	ret

Disassembly of section .text.sqrtf:

00002d62 <sqrt>:
    2d62:	4f 92       	push	r4
    2d64:	5f 92       	push	r5
    2d66:	6f 92       	push	r6
    2d68:	7f 92       	push	r7
    2d6a:	8f 92       	push	r8
    2d6c:	9f 92       	push	r9
    2d6e:	af 92       	push	r10
    2d70:	bf 92       	push	r11
    2d72:	cf 92       	push	r12
    2d74:	df 92       	push	r13
    2d76:	ef 92       	push	r14
    2d78:	ff 92       	push	r15
    2d7a:	0f 93       	push	r16
    2d7c:	1f 93       	push	r17
    2d7e:	6b 01       	movw	r12, r22
    2d80:	7c 01       	movw	r14, r24
    2d82:	dc 01       	movw	r26, r24
    2d84:	cb 01       	movw	r24, r22
    2d86:	b7 01       	movw	r22, r14
    2d88:	a6 01       	movw	r20, r12
    2d8a:	44 27       	eor	r20, r20
    2d8c:	55 27       	eor	r21, r21
    2d8e:	60 78       	andi	r22, 0x80	; 128
    2d90:	7f 77       	andi	r23, 0x7F	; 127
    2d92:	41 15       	cp	r20, r1
    2d94:	51 05       	cpc	r21, r1
    2d96:	60 48       	sbci	r22, 0x80	; 128
    2d98:	7f 47       	sbci	r23, 0x7F	; 127
    2d9a:	59 f4       	brne	.+22     	; 0x2db2 <sqrt+0x50>
    2d9c:	a7 01       	movw	r20, r14
    2d9e:	96 01       	movw	r18, r12
    2da0:	c7 01       	movw	r24, r14
    2da2:	b6 01       	movw	r22, r12
    2da4:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    2da8:	a7 01       	movw	r20, r14
    2daa:	96 01       	movw	r18, r12
    2dac:	0e 94 f0 2d 	call	0x5be0	; 0x5be0 <__addsf3>
    2db0:	1a c0       	rjmp	.+52     	; 0x2de6 <sqrt+0x84>
    2db2:	18 16       	cp	r1, r24
    2db4:	19 06       	cpc	r1, r25
    2db6:	1a 06       	cpc	r1, r26
    2db8:	1b 06       	cpc	r1, r27
    2dba:	d4 f0       	brlt	.+52     	; 0x2df0 <sqrt+0x8e>
    2dbc:	89 2b       	or	r24, r25
    2dbe:	8a 2b       	or	r24, r26
    2dc0:	8b 2b       	or	r24, r27
    2dc2:	09 f4       	brne	.+2      	; 0x2dc6 <sqrt+0x64>
    2dc4:	cc c0       	rjmp	.+408    	; 0x2f5e <sqrt+0x1fc>
    2dc6:	81 e2       	ldi	r24, 0x21	; 33
    2dc8:	90 e0       	ldi	r25, 0x00	; 0
    2dca:	90 93 65 00 	sts	0x0065, r25	; 0x800065 <__errno_val+0x1>
    2dce:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__errno_val>
    2dd2:	a7 01       	movw	r20, r14
    2dd4:	96 01       	movw	r18, r12
    2dd6:	c7 01       	movw	r24, r14
    2dd8:	b6 01       	movw	r22, r12
    2dda:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__subsf3>
    2dde:	9b 01       	movw	r18, r22
    2de0:	ac 01       	movw	r20, r24
    2de2:	0e 94 3a 2e 	call	0x5c74	; 0x5c74 <__divsf3>
    2de6:	56 2f       	mov	r21, r22
    2de8:	47 2f       	mov	r20, r23
    2dea:	38 2f       	mov	r19, r24
    2dec:	29 2f       	mov	r18, r25
    2dee:	bb c0       	rjmp	.+374    	; 0x2f66 <sqrt+0x204>
    2df0:	67 e1       	ldi	r22, 0x17	; 23
    2df2:	f5 94       	asr	r15
    2df4:	e7 94       	ror	r14
    2df6:	d7 94       	ror	r13
    2df8:	c7 94       	ror	r12
    2dfa:	6a 95       	dec	r22
    2dfc:	d1 f7       	brne	.-12     	; 0x2df2 <sqrt+0x90>
    2dfe:	c1 14       	cp	r12, r1
    2e00:	d1 04       	cpc	r13, r1
    2e02:	e1 04       	cpc	r14, r1
    2e04:	f1 04       	cpc	r15, r1
    2e06:	e1 f4       	brne	.+56     	; 0x2e40 <sqrt+0xde>
    2e08:	c1 2c       	mov	r12, r1
    2e0a:	d1 2c       	mov	r13, r1
    2e0c:	76 01       	movw	r14, r12
    2e0e:	a7 fd       	sbrc	r26, 7
    2e10:	0a c0       	rjmp	.+20     	; 0x2e26 <sqrt+0xc4>
    2e12:	88 0f       	add	r24, r24
    2e14:	99 1f       	adc	r25, r25
    2e16:	aa 1f       	adc	r26, r26
    2e18:	bb 1f       	adc	r27, r27
    2e1a:	2f ef       	ldi	r18, 0xFF	; 255
    2e1c:	c2 1a       	sub	r12, r18
    2e1e:	d2 0a       	sbc	r13, r18
    2e20:	e2 0a       	sbc	r14, r18
    2e22:	f2 0a       	sbc	r15, r18
    2e24:	f4 cf       	rjmp	.-24     	; 0x2e0e <sqrt+0xac>
    2e26:	21 e0       	ldi	r18, 0x01	; 1
    2e28:	c2 1a       	sub	r12, r18
    2e2a:	d1 08       	sbc	r13, r1
    2e2c:	e1 08       	sbc	r14, r1
    2e2e:	f1 08       	sbc	r15, r1
    2e30:	f0 94       	com	r15
    2e32:	e0 94       	com	r14
    2e34:	d0 94       	com	r13
    2e36:	c0 94       	com	r12
    2e38:	c1 1c       	adc	r12, r1
    2e3a:	d1 1c       	adc	r13, r1
    2e3c:	e1 1c       	adc	r14, r1
    2e3e:	f1 1c       	adc	r15, r1
    2e40:	2f e7       	ldi	r18, 0x7F	; 127
    2e42:	c2 1a       	sub	r12, r18
    2e44:	d1 08       	sbc	r13, r1
    2e46:	e1 08       	sbc	r14, r1
    2e48:	f1 08       	sbc	r15, r1
    2e4a:	af 77       	andi	r26, 0x7F	; 127
    2e4c:	bb 27       	eor	r27, r27
    2e4e:	a0 68       	ori	r26, 0x80	; 128
    2e50:	c0 fe       	sbrs	r12, 0
    2e52:	04 c0       	rjmp	.+8      	; 0x2e5c <sqrt+0xfa>
    2e54:	88 0f       	add	r24, r24
    2e56:	99 1f       	adc	r25, r25
    2e58:	aa 1f       	adc	r26, r26
    2e5a:	bb 1f       	adc	r27, r27
    2e5c:	f5 94       	asr	r15
    2e5e:	e7 94       	ror	r14
    2e60:	d7 94       	ror	r13
    2e62:	c7 94       	ror	r12
    2e64:	88 0f       	add	r24, r24
    2e66:	99 1f       	adc	r25, r25
    2e68:	aa 1f       	adc	r26, r26
    2e6a:	bb 1f       	adc	r27, r27
    2e6c:	e9 e1       	ldi	r30, 0x19	; 25
    2e6e:	f0 e0       	ldi	r31, 0x00	; 0
    2e70:	40 e0       	ldi	r20, 0x00	; 0
    2e72:	50 e0       	ldi	r21, 0x00	; 0
    2e74:	60 e0       	ldi	r22, 0x00	; 0
    2e76:	71 e0       	ldi	r23, 0x01	; 1
    2e78:	81 2c       	mov	r8, r1
    2e7a:	91 2c       	mov	r9, r1
    2e7c:	54 01       	movw	r10, r8
    2e7e:	00 e0       	ldi	r16, 0x00	; 0
    2e80:	10 e0       	ldi	r17, 0x00	; 0
    2e82:	98 01       	movw	r18, r16
    2e84:	28 01       	movw	r4, r16
    2e86:	39 01       	movw	r6, r18
    2e88:	44 0e       	add	r4, r20
    2e8a:	55 1e       	adc	r5, r21
    2e8c:	66 1e       	adc	r6, r22
    2e8e:	77 1e       	adc	r7, r23
    2e90:	84 15       	cp	r24, r4
    2e92:	95 05       	cpc	r25, r5
    2e94:	a6 05       	cpc	r26, r6
    2e96:	b7 05       	cpc	r27, r7
    2e98:	74 f0       	brlt	.+28     	; 0x2eb6 <sqrt+0x154>
    2e9a:	93 01       	movw	r18, r6
    2e9c:	82 01       	movw	r16, r4
    2e9e:	04 0f       	add	r16, r20
    2ea0:	15 1f       	adc	r17, r21
    2ea2:	26 1f       	adc	r18, r22
    2ea4:	37 1f       	adc	r19, r23
    2ea6:	84 19       	sub	r24, r4
    2ea8:	95 09       	sbc	r25, r5
    2eaa:	a6 09       	sbc	r26, r6
    2eac:	b7 09       	sbc	r27, r7
    2eae:	84 0e       	add	r8, r20
    2eb0:	95 1e       	adc	r9, r21
    2eb2:	a6 1e       	adc	r10, r22
    2eb4:	b7 1e       	adc	r11, r23
    2eb6:	88 0f       	add	r24, r24
    2eb8:	99 1f       	adc	r25, r25
    2eba:	aa 1f       	adc	r26, r26
    2ebc:	bb 1f       	adc	r27, r27
    2ebe:	76 95       	lsr	r23
    2ec0:	67 95       	ror	r22
    2ec2:	57 95       	ror	r21
    2ec4:	47 95       	ror	r20
    2ec6:	31 97       	sbiw	r30, 0x01	; 1
    2ec8:	e9 f6       	brne	.-70     	; 0x2e84 <sqrt+0x122>
    2eca:	89 2b       	or	r24, r25
    2ecc:	8a 2b       	or	r24, r26
    2ece:	8b 2b       	or	r24, r27
    2ed0:	a1 f1       	breq	.+104    	; 0x2f3a <sqrt+0x1d8>
    2ed2:	20 e6       	ldi	r18, 0x60	; 96
    2ed4:	32 e4       	ldi	r19, 0x42	; 66
    2ed6:	42 ea       	ldi	r20, 0xA2	; 162
    2ed8:	5d e0       	ldi	r21, 0x0D	; 13
    2eda:	60 e0       	ldi	r22, 0x00	; 0
    2edc:	70 e0       	ldi	r23, 0x00	; 0
    2ede:	80 e8       	ldi	r24, 0x80	; 128
    2ee0:	9f e3       	ldi	r25, 0x3F	; 63
    2ee2:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__subsf3>
    2ee6:	20 e0       	ldi	r18, 0x00	; 0
    2ee8:	30 e0       	ldi	r19, 0x00	; 0
    2eea:	40 e8       	ldi	r20, 0x80	; 128
    2eec:	5f e3       	ldi	r21, 0x3F	; 63
    2eee:	0e 94 30 2e 	call	0x5c60	; 0x5c60 <__gesf2>
    2ef2:	87 fd       	sbrc	r24, 7
    2ef4:	22 c0       	rjmp	.+68     	; 0x2f3a <sqrt+0x1d8>
    2ef6:	20 e6       	ldi	r18, 0x60	; 96
    2ef8:	32 e4       	ldi	r19, 0x42	; 66
    2efa:	42 ea       	ldi	r20, 0xA2	; 162
    2efc:	5d e0       	ldi	r21, 0x0D	; 13
    2efe:	60 e0       	ldi	r22, 0x00	; 0
    2f00:	70 e0       	ldi	r23, 0x00	; 0
    2f02:	80 e8       	ldi	r24, 0x80	; 128
    2f04:	9f e3       	ldi	r25, 0x3F	; 63
    2f06:	0e 94 f0 2d 	call	0x5be0	; 0x5be0 <__addsf3>
    2f0a:	20 e0       	ldi	r18, 0x00	; 0
    2f0c:	30 e0       	ldi	r19, 0x00	; 0
    2f0e:	40 e8       	ldi	r20, 0x80	; 128
    2f10:	5f e3       	ldi	r21, 0x3F	; 63
    2f12:	0e 94 30 2e 	call	0x5c60	; 0x5c60 <__gesf2>
    2f16:	18 16       	cp	r1, r24
    2f18:	34 f4       	brge	.+12     	; 0x2f26 <sqrt+0x1c4>
    2f1a:	82 e0       	ldi	r24, 0x02	; 2
    2f1c:	88 0e       	add	r8, r24
    2f1e:	91 1c       	adc	r9, r1
    2f20:	a1 1c       	adc	r10, r1
    2f22:	b1 1c       	adc	r11, r1
    2f24:	0a c0       	rjmp	.+20     	; 0x2f3a <sqrt+0x1d8>
    2f26:	d5 01       	movw	r26, r10
    2f28:	c4 01       	movw	r24, r8
    2f2a:	81 70       	andi	r24, 0x01	; 1
    2f2c:	99 27       	eor	r25, r25
    2f2e:	aa 27       	eor	r26, r26
    2f30:	bb 27       	eor	r27, r27
    2f32:	88 0e       	add	r8, r24
    2f34:	99 1e       	adc	r9, r25
    2f36:	aa 1e       	adc	r10, r26
    2f38:	bb 1e       	adc	r11, r27
    2f3a:	d5 01       	movw	r26, r10
    2f3c:	c4 01       	movw	r24, r8
    2f3e:	b5 95       	asr	r27
    2f40:	a7 95       	ror	r26
    2f42:	97 95       	ror	r25
    2f44:	87 95       	ror	r24
    2f46:	b1 5c       	subi	r27, 0xC1	; 193
    2f48:	37 e1       	ldi	r19, 0x17	; 23
    2f4a:	cc 0c       	add	r12, r12
    2f4c:	dd 1c       	adc	r13, r13
    2f4e:	ee 1c       	adc	r14, r14
    2f50:	ff 1c       	adc	r15, r15
    2f52:	3a 95       	dec	r19
    2f54:	d1 f7       	brne	.-12     	; 0x2f4a <sqrt+0x1e8>
    2f56:	c8 0e       	add	r12, r24
    2f58:	d9 1e       	adc	r13, r25
    2f5a:	ea 1e       	adc	r14, r26
    2f5c:	fb 1e       	adc	r15, r27
    2f5e:	5c 2d       	mov	r21, r12
    2f60:	4d 2d       	mov	r20, r13
    2f62:	3e 2d       	mov	r19, r14
    2f64:	2f 2d       	mov	r18, r15
    2f66:	65 2f       	mov	r22, r21
    2f68:	74 2f       	mov	r23, r20
    2f6a:	83 2f       	mov	r24, r19
    2f6c:	92 2f       	mov	r25, r18
    2f6e:	1f 91       	pop	r17
    2f70:	0f 91       	pop	r16
    2f72:	ff 90       	pop	r15
    2f74:	ef 90       	pop	r14
    2f76:	df 90       	pop	r13
    2f78:	cf 90       	pop	r12
    2f7a:	bf 90       	pop	r11
    2f7c:	af 90       	pop	r10
    2f7e:	9f 90       	pop	r9
    2f80:	8f 90       	pop	r8
    2f82:	7f 90       	pop	r7
    2f84:	6f 90       	pop	r6
    2f86:	5f 90       	pop	r5
    2f88:	4f 90       	pop	r4
    2f8a:	08 95       	ret

Disassembly of section .text.cosf:

00004338 <cosf>:
    4338:	a4 e0       	ldi	r26, 0x04	; 4
    433a:	b0 e0       	ldi	r27, 0x00	; 0
    433c:	e2 ea       	ldi	r30, 0xA2	; 162
    433e:	f1 e2       	ldi	r31, 0x21	; 33
    4340:	0c 94 63 2c 	jmp	0x58c6	; 0x58c6 <__prologue_saves__+0x14>
    4344:	8b 01       	movw	r16, r22
    4346:	9c 01       	movw	r18, r24
    4348:	3f 77       	andi	r19, 0x7F	; 127
    434a:	0b 3d       	cpi	r16, 0xDB	; 219
    434c:	4f e0       	ldi	r20, 0x0F	; 15
    434e:	14 07       	cpc	r17, r20
    4350:	49 e4       	ldi	r20, 0x49	; 73
    4352:	24 07       	cpc	r18, r20
    4354:	4f e3       	ldi	r20, 0x3F	; 63
    4356:	34 07       	cpc	r19, r20
    4358:	b8 f4       	brcc	.+46     	; 0x4388 <cosf+0x50>
    435a:	01 15       	cp	r16, r1
    435c:	11 05       	cpc	r17, r1
    435e:	40 e8       	ldi	r20, 0x80	; 128
    4360:	24 07       	cpc	r18, r20
    4362:	49 e3       	ldi	r20, 0x39	; 57
    4364:	34 07       	cpc	r19, r20
    4366:	08 f0       	brcs	.+2      	; 0x436a <cosf+0x32>
    4368:	8d c0       	rjmp	.+282    	; 0x4484 <cosf+0x14c>
    436a:	20 e0       	ldi	r18, 0x00	; 0
    436c:	30 e0       	ldi	r19, 0x00	; 0
    436e:	40 e8       	ldi	r20, 0x80	; 128
    4370:	5b e7       	ldi	r21, 0x7B	; 123
    4372:	0e 94 f0 2d 	call	0x5be0	; 0x5be0 <__addsf3>
    4376:	69 83       	std	Y+1, r22	; 0x01
    4378:	7a 83       	std	Y+2, r23	; 0x02
    437a:	8b 83       	std	Y+3, r24	; 0x03
    437c:	9c 83       	std	Y+4, r25	; 0x04
    437e:	60 e0       	ldi	r22, 0x00	; 0
    4380:	70 e0       	ldi	r23, 0x00	; 0
    4382:	80 e8       	ldi	r24, 0x80	; 128
    4384:	9f e3       	ldi	r25, 0x3F	; 63
    4386:	89 c0       	rjmp	.+274    	; 0x449a <cosf+0x162>
    4388:	6b 01       	movw	r12, r22
    438a:	7c 01       	movw	r14, r24
    438c:	cc 24       	eor	r12, r12
    438e:	f7 fc       	sbrc	r15, 7
    4390:	c3 94       	inc	r12
    4392:	dd 24       	eor	r13, r13
    4394:	ee 24       	eor	r14, r14
    4396:	ff 24       	eor	r15, r15
    4398:	02 3d       	cpi	r16, 0xD2	; 210
    439a:	43 e5       	ldi	r20, 0x53	; 83
    439c:	14 07       	cpc	r17, r20
    439e:	4b e7       	ldi	r20, 0x7B	; 123
    43a0:	24 07       	cpc	r18, r20
    43a2:	40 e4       	ldi	r20, 0x40	; 64
    43a4:	34 07       	cpc	r19, r20
    43a6:	30 f5       	brcc	.+76     	; 0x43f4 <cosf+0xbc>
    43a8:	04 3e       	cpi	r16, 0xE4	; 228
    43aa:	4b ec       	ldi	r20, 0xCB	; 203
    43ac:	14 07       	cpc	r17, r20
    43ae:	46 e1       	ldi	r20, 0x16	; 22
    43b0:	24 07       	cpc	r18, r20
    43b2:	40 e4       	ldi	r20, 0x40	; 64
    43b4:	34 07       	cpc	r19, r20
    43b6:	68 f0       	brcs	.+26     	; 0x43d2 <cosf+0x9a>
    43b8:	2b ed       	ldi	r18, 0xDB	; 219
    43ba:	3f e0       	ldi	r19, 0x0F	; 15
    43bc:	49 e4       	ldi	r20, 0x49	; 73
    43be:	50 e4       	ldi	r21, 0x40	; 64
    43c0:	c1 14       	cp	r12, r1
    43c2:	d1 04       	cpc	r13, r1
    43c4:	19 f0       	breq	.+6      	; 0x43cc <cosf+0x94>
    43c6:	0e 94 f0 2d 	call	0x5be0	; 0x5be0 <__addsf3>
    43ca:	61 c0       	rjmp	.+194    	; 0x448e <cosf+0x156>
    43cc:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__subsf3>
    43d0:	5e c0       	rjmp	.+188    	; 0x448e <cosf+0x156>
    43d2:	c1 14       	cp	r12, r1
    43d4:	d1 04       	cpc	r13, r1
    43d6:	39 f0       	breq	.+14     	; 0x43e6 <cosf+0xae>
    43d8:	2b ed       	ldi	r18, 0xDB	; 219
    43da:	3f e0       	ldi	r19, 0x0F	; 15
    43dc:	49 ec       	ldi	r20, 0xC9	; 201
    43de:	5f e3       	ldi	r21, 0x3F	; 63
    43e0:	0e 94 f0 2d 	call	0x5be0	; 0x5be0 <__addsf3>
    43e4:	58 c0       	rjmp	.+176    	; 0x4496 <cosf+0x15e>
    43e6:	9b 01       	movw	r18, r22
    43e8:	ac 01       	movw	r20, r24
    43ea:	6b ed       	ldi	r22, 0xDB	; 219
    43ec:	7f e0       	ldi	r23, 0x0F	; 15
    43ee:	89 ec       	ldi	r24, 0xC9	; 201
    43f0:	9f e3       	ldi	r25, 0x3F	; 63
    43f2:	25 c0       	rjmp	.+74     	; 0x443e <cosf+0x106>
    43f4:	06 3d       	cpi	r16, 0xD6	; 214
    43f6:	41 e3       	ldi	r20, 0x31	; 49
    43f8:	14 07       	cpc	r17, r20
    43fa:	42 ee       	ldi	r20, 0xE2	; 226
    43fc:	24 07       	cpc	r18, r20
    43fe:	40 e4       	ldi	r20, 0x40	; 64
    4400:	34 07       	cpc	r19, r20
    4402:	00 f5       	brcc	.+64     	; 0x4444 <cosf+0x10c>
    4404:	00 3e       	cpi	r16, 0xE0	; 224
    4406:	4d ee       	ldi	r20, 0xED	; 237
    4408:	14 07       	cpc	r17, r20
    440a:	4f ea       	ldi	r20, 0xAF	; 175
    440c:	24 07       	cpc	r18, r20
    440e:	40 e4       	ldi	r20, 0x40	; 64
    4410:	34 07       	cpc	r19, r20
    4412:	68 f0       	brcs	.+26     	; 0x442e <cosf+0xf6>
    4414:	2b ed       	ldi	r18, 0xDB	; 219
    4416:	3f e0       	ldi	r19, 0x0F	; 15
    4418:	49 ec       	ldi	r20, 0xC9	; 201
    441a:	50 e4       	ldi	r21, 0x40	; 64
    441c:	c1 14       	cp	r12, r1
    441e:	d1 04       	cpc	r13, r1
    4420:	19 f0       	breq	.+6      	; 0x4428 <cosf+0xf0>
    4422:	0e 94 f0 2d 	call	0x5be0	; 0x5be0 <__addsf3>
    4426:	2e c0       	rjmp	.+92     	; 0x4484 <cosf+0x14c>
    4428:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__subsf3>
    442c:	2b c0       	rjmp	.+86     	; 0x4484 <cosf+0x14c>
    442e:	c1 14       	cp	r12, r1
    4430:	d1 04       	cpc	r13, r1
    4432:	09 f0       	breq	.+2      	; 0x4436 <cosf+0xfe>
    4434:	90 58       	subi	r25, 0x80	; 128
    4436:	24 ee       	ldi	r18, 0xE4	; 228
    4438:	3b ec       	ldi	r19, 0xCB	; 203
    443a:	46 e9       	ldi	r20, 0x96	; 150
    443c:	50 e4       	ldi	r21, 0x40	; 64
    443e:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__subsf3>
    4442:	29 c0       	rjmp	.+82     	; 0x4496 <cosf+0x15e>
    4444:	01 15       	cp	r16, r1
    4446:	11 05       	cpc	r17, r1
    4448:	40 e8       	ldi	r20, 0x80	; 128
    444a:	24 07       	cpc	r18, r20
    444c:	4f e7       	ldi	r20, 0x7F	; 127
    444e:	34 07       	cpc	r19, r20
    4450:	28 f0       	brcs	.+10     	; 0x445c <cosf+0x124>
    4452:	9b 01       	movw	r18, r22
    4454:	ac 01       	movw	r20, r24
    4456:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__subsf3>
    445a:	1f c0       	rjmp	.+62     	; 0x449a <cosf+0x162>
    445c:	ae 01       	movw	r20, r28
    445e:	4f 5f       	subi	r20, 0xFF	; 255
    4460:	5f 4f       	sbci	r21, 0xFF	; 255
    4462:	0e 94 0f 20 	call	0x401e	; 0x401e <__rem_pio2f>
    4466:	9c 01       	movw	r18, r24
    4468:	23 70       	andi	r18, 0x03	; 3
    446a:	33 27       	eor	r19, r19
    446c:	69 81       	ldd	r22, Y+1	; 0x01
    446e:	7a 81       	ldd	r23, Y+2	; 0x02
    4470:	8b 81       	ldd	r24, Y+3	; 0x03
    4472:	9c 81       	ldd	r25, Y+4	; 0x04
    4474:	21 30       	cpi	r18, 0x01	; 1
    4476:	31 05       	cpc	r19, r1
    4478:	41 f0       	breq	.+16     	; 0x448a <cosf+0x152>
    447a:	22 30       	cpi	r18, 0x02	; 2
    447c:	31 05       	cpc	r19, r1
    447e:	39 f0       	breq	.+14     	; 0x448e <cosf+0x156>
    4480:	23 2b       	or	r18, r19
    4482:	49 f4       	brne	.+18     	; 0x4496 <cosf+0x15e>
    4484:	0e 94 03 25 	call	0x4a06	; 0x4a06 <__cosdf>
    4488:	08 c0       	rjmp	.+16     	; 0x449a <cosf+0x162>
    448a:	90 58       	subi	r25, 0x80	; 128
    448c:	04 c0       	rjmp	.+8      	; 0x4496 <cosf+0x15e>
    448e:	0e 94 03 25 	call	0x4a06	; 0x4a06 <__cosdf>
    4492:	90 58       	subi	r25, 0x80	; 128
    4494:	02 c0       	rjmp	.+4      	; 0x449a <cosf+0x162>
    4496:	0e 94 13 24 	call	0x4826	; 0x4826 <__sindf>
    449a:	24 96       	adiw	r28, 0x04	; 4
    449c:	e8 e0       	ldi	r30, 0x08	; 8
    449e:	0c 94 7f 2c 	jmp	0x58fe	; 0x58fe <__epilogue_restores__+0x14>

Disassembly of section .text.fabsf:

00005c8e <fabsf>:
    5c8e:	9f 77       	andi	r25, 0x7F	; 127
    5c90:	08 95       	ret

Disassembly of section .text.sinf:

00003b1c <sinf>:
    3b1c:	cf 92       	push	r12
    3b1e:	df 92       	push	r13
    3b20:	ef 92       	push	r14
    3b22:	ff 92       	push	r15
    3b24:	cf 93       	push	r28
    3b26:	df 93       	push	r29
    3b28:	00 d0       	rcall	.+0      	; 0x3b2a <sinf+0xe>
    3b2a:	00 d0       	rcall	.+0      	; 0x3b2c <sinf+0x10>
    3b2c:	cd b7       	in	r28, 0x3d	; 61
    3b2e:	de b7       	in	r29, 0x3e	; 62
    3b30:	6b 01       	movw	r12, r22
    3b32:	7c 01       	movw	r14, r24
    3b34:	dc 01       	movw	r26, r24
    3b36:	cb 01       	movw	r24, r22
    3b38:	bf 77       	andi	r27, 0x7F	; 127
    3b3a:	8b 3d       	cpi	r24, 0xDB	; 219
    3b3c:	2f e0       	ldi	r18, 0x0F	; 15
    3b3e:	92 07       	cpc	r25, r18
    3b40:	29 e4       	ldi	r18, 0x49	; 73
    3b42:	a2 07       	cpc	r26, r18
    3b44:	2f e3       	ldi	r18, 0x3F	; 63
    3b46:	b2 07       	cpc	r27, r18
    3b48:	28 f5       	brcc	.+74     	; 0x3b94 <sinf+0x78>
    3b4a:	00 97       	sbiw	r24, 0x00	; 0
    3b4c:	20 e8       	ldi	r18, 0x80	; 128
    3b4e:	a2 07       	cpc	r26, r18
    3b50:	29 e3       	ldi	r18, 0x39	; 57
    3b52:	b2 07       	cpc	r27, r18
    3b54:	e0 f4       	brcc	.+56     	; 0x3b8e <sinf+0x72>
    3b56:	00 97       	sbiw	r24, 0x00	; 0
    3b58:	a0 48       	sbci	r26, 0x80	; 128
    3b5a:	b1 05       	cpc	r27, r1
    3b5c:	48 f4       	brcc	.+18     	; 0x3b70 <sinf+0x54>
    3b5e:	20 e0       	ldi	r18, 0x00	; 0
    3b60:	30 e0       	ldi	r19, 0x00	; 0
    3b62:	40 e8       	ldi	r20, 0x80	; 128
    3b64:	53 e0       	ldi	r21, 0x03	; 3
    3b66:	c7 01       	movw	r24, r14
    3b68:	b6 01       	movw	r22, r12
    3b6a:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    3b6e:	08 c0       	rjmp	.+16     	; 0x3b80 <sinf+0x64>
    3b70:	20 e0       	ldi	r18, 0x00	; 0
    3b72:	30 e0       	ldi	r19, 0x00	; 0
    3b74:	40 e8       	ldi	r20, 0x80	; 128
    3b76:	5b e7       	ldi	r21, 0x7B	; 123
    3b78:	c7 01       	movw	r24, r14
    3b7a:	b6 01       	movw	r22, r12
    3b7c:	0e 94 f0 2d 	call	0x5be0	; 0x5be0 <__addsf3>
    3b80:	69 83       	std	Y+1, r22	; 0x01
    3b82:	7a 83       	std	Y+2, r23	; 0x02
    3b84:	8b 83       	std	Y+3, r24	; 0x03
    3b86:	9c 83       	std	Y+4, r25	; 0x04
    3b88:	c7 01       	movw	r24, r14
    3b8a:	b6 01       	movw	r22, r12
    3b8c:	a1 c0       	rjmp	.+322    	; 0x3cd0 <sinf+0x1b4>
    3b8e:	c7 01       	movw	r24, r14
    3b90:	b6 01       	movw	r22, r12
    3b92:	98 c0       	rjmp	.+304    	; 0x3cc4 <sinf+0x1a8>
    3b94:	b7 01       	movw	r22, r14
    3b96:	a6 01       	movw	r20, r12
    3b98:	44 27       	eor	r20, r20
    3b9a:	77 fd       	sbrc	r23, 7
    3b9c:	43 95       	inc	r20
    3b9e:	55 27       	eor	r21, r21
    3ba0:	66 27       	eor	r22, r22
    3ba2:	77 27       	eor	r23, r23
    3ba4:	82 3d       	cpi	r24, 0xD2	; 210
    3ba6:	23 e5       	ldi	r18, 0x53	; 83
    3ba8:	92 07       	cpc	r25, r18
    3baa:	2b e7       	ldi	r18, 0x7B	; 123
    3bac:	a2 07       	cpc	r26, r18
    3bae:	20 e4       	ldi	r18, 0x40	; 64
    3bb0:	b2 07       	cpc	r27, r18
    3bb2:	68 f5       	brcc	.+90     	; 0x3c0e <sinf+0xf2>
    3bb4:	84 3e       	cpi	r24, 0xE4	; 228
    3bb6:	9b 4c       	sbci	r25, 0xCB	; 203
    3bb8:	a6 41       	sbci	r26, 0x16	; 22
    3bba:	b0 44       	sbci	r27, 0x40	; 64
    3bbc:	a0 f4       	brcc	.+40     	; 0x3be6 <sinf+0xca>
    3bbe:	45 2b       	or	r20, r21
    3bc0:	49 f0       	breq	.+18     	; 0x3bd4 <sinf+0xb8>
    3bc2:	2b ed       	ldi	r18, 0xDB	; 219
    3bc4:	3f e0       	ldi	r19, 0x0F	; 15
    3bc6:	49 ec       	ldi	r20, 0xC9	; 201
    3bc8:	5f e3       	ldi	r21, 0x3F	; 63
    3bca:	c7 01       	movw	r24, r14
    3bcc:	b6 01       	movw	r22, r12
    3bce:	0e 94 f0 2d 	call	0x5be0	; 0x5be0 <__addsf3>
    3bd2:	7b c0       	rjmp	.+246    	; 0x3cca <sinf+0x1ae>
    3bd4:	2b ed       	ldi	r18, 0xDB	; 219
    3bd6:	3f e0       	ldi	r19, 0x0F	; 15
    3bd8:	49 ec       	ldi	r20, 0xC9	; 201
    3bda:	5f e3       	ldi	r21, 0x3F	; 63
    3bdc:	c7 01       	movw	r24, r14
    3bde:	b6 01       	movw	r22, r12
    3be0:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__subsf3>
    3be4:	6b c0       	rjmp	.+214    	; 0x3cbc <sinf+0x1a0>
    3be6:	45 2b       	or	r20, r21
    3be8:	49 f0       	breq	.+18     	; 0x3bfc <sinf+0xe0>
    3bea:	2b ed       	ldi	r18, 0xDB	; 219
    3bec:	3f e0       	ldi	r19, 0x0F	; 15
    3bee:	49 e4       	ldi	r20, 0x49	; 73
    3bf0:	50 e4       	ldi	r21, 0x40	; 64
    3bf2:	c7 01       	movw	r24, r14
    3bf4:	b6 01       	movw	r22, r12
    3bf6:	0e 94 f0 2d 	call	0x5be0	; 0x5be0 <__addsf3>
    3bfa:	63 c0       	rjmp	.+198    	; 0x3cc2 <sinf+0x1a6>
    3bfc:	2b ed       	ldi	r18, 0xDB	; 219
    3bfe:	3f e0       	ldi	r19, 0x0F	; 15
    3c00:	49 e4       	ldi	r20, 0x49	; 73
    3c02:	50 e4       	ldi	r21, 0x40	; 64
    3c04:	c7 01       	movw	r24, r14
    3c06:	b6 01       	movw	r22, r12
    3c08:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__subsf3>
    3c0c:	5a c0       	rjmp	.+180    	; 0x3cc2 <sinf+0x1a6>
    3c0e:	86 3d       	cpi	r24, 0xD6	; 214
    3c10:	21 e3       	ldi	r18, 0x31	; 49
    3c12:	92 07       	cpc	r25, r18
    3c14:	22 ee       	ldi	r18, 0xE2	; 226
    3c16:	a2 07       	cpc	r26, r18
    3c18:	20 e4       	ldi	r18, 0x40	; 64
    3c1a:	b2 07       	cpc	r27, r18
    3c1c:	68 f5       	brcc	.+90     	; 0x3c78 <sinf+0x15c>
    3c1e:	80 3e       	cpi	r24, 0xE0	; 224
    3c20:	9d 4e       	sbci	r25, 0xED	; 237
    3c22:	af 4a       	sbci	r26, 0xAF	; 175
    3c24:	b0 44       	sbci	r27, 0x40	; 64
    3c26:	a0 f4       	brcc	.+40     	; 0x3c50 <sinf+0x134>
    3c28:	45 2b       	or	r20, r21
    3c2a:	49 f0       	breq	.+18     	; 0x3c3e <sinf+0x122>
    3c2c:	24 ee       	ldi	r18, 0xE4	; 228
    3c2e:	3b ec       	ldi	r19, 0xCB	; 203
    3c30:	46 e9       	ldi	r20, 0x96	; 150
    3c32:	50 e4       	ldi	r21, 0x40	; 64
    3c34:	c7 01       	movw	r24, r14
    3c36:	b6 01       	movw	r22, r12
    3c38:	0e 94 f0 2d 	call	0x5be0	; 0x5be0 <__addsf3>
    3c3c:	3f c0       	rjmp	.+126    	; 0x3cbc <sinf+0x1a0>
    3c3e:	24 ee       	ldi	r18, 0xE4	; 228
    3c40:	3b ec       	ldi	r19, 0xCB	; 203
    3c42:	46 e9       	ldi	r20, 0x96	; 150
    3c44:	50 e4       	ldi	r21, 0x40	; 64
    3c46:	c7 01       	movw	r24, r14
    3c48:	b6 01       	movw	r22, r12
    3c4a:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__subsf3>
    3c4e:	3d c0       	rjmp	.+122    	; 0x3cca <sinf+0x1ae>
    3c50:	45 2b       	or	r20, r21
    3c52:	49 f0       	breq	.+18     	; 0x3c66 <sinf+0x14a>
    3c54:	2b ed       	ldi	r18, 0xDB	; 219
    3c56:	3f e0       	ldi	r19, 0x0F	; 15
    3c58:	49 ec       	ldi	r20, 0xC9	; 201
    3c5a:	50 e4       	ldi	r21, 0x40	; 64
    3c5c:	c7 01       	movw	r24, r14
    3c5e:	b6 01       	movw	r22, r12
    3c60:	0e 94 f0 2d 	call	0x5be0	; 0x5be0 <__addsf3>
    3c64:	2f c0       	rjmp	.+94     	; 0x3cc4 <sinf+0x1a8>
    3c66:	2b ed       	ldi	r18, 0xDB	; 219
    3c68:	3f e0       	ldi	r19, 0x0F	; 15
    3c6a:	49 ec       	ldi	r20, 0xC9	; 201
    3c6c:	50 e4       	ldi	r21, 0x40	; 64
    3c6e:	c7 01       	movw	r24, r14
    3c70:	b6 01       	movw	r22, r12
    3c72:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__subsf3>
    3c76:	26 c0       	rjmp	.+76     	; 0x3cc4 <sinf+0x1a8>
    3c78:	00 97       	sbiw	r24, 0x00	; 0
    3c7a:	a0 48       	sbci	r26, 0x80	; 128
    3c7c:	bf 47       	sbci	r27, 0x7F	; 127
    3c7e:	38 f0       	brcs	.+14     	; 0x3c8e <sinf+0x172>
    3c80:	a7 01       	movw	r20, r14
    3c82:	96 01       	movw	r18, r12
    3c84:	c7 01       	movw	r24, r14
    3c86:	b6 01       	movw	r22, r12
    3c88:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__subsf3>
    3c8c:	21 c0       	rjmp	.+66     	; 0x3cd0 <sinf+0x1b4>
    3c8e:	ae 01       	movw	r20, r28
    3c90:	4f 5f       	subi	r20, 0xFF	; 255
    3c92:	5f 4f       	sbci	r21, 0xFF	; 255
    3c94:	c7 01       	movw	r24, r14
    3c96:	b6 01       	movw	r22, r12
    3c98:	0e 94 0f 20 	call	0x401e	; 0x401e <__rem_pio2f>
    3c9c:	9c 01       	movw	r18, r24
    3c9e:	23 70       	andi	r18, 0x03	; 3
    3ca0:	33 27       	eor	r19, r19
    3ca2:	69 81       	ldd	r22, Y+1	; 0x01
    3ca4:	7a 81       	ldd	r23, Y+2	; 0x02
    3ca6:	8b 81       	ldd	r24, Y+3	; 0x03
    3ca8:	9c 81       	ldd	r25, Y+4	; 0x04
    3caa:	21 30       	cpi	r18, 0x01	; 1
    3cac:	31 05       	cpc	r19, r1
    3cae:	31 f0       	breq	.+12     	; 0x3cbc <sinf+0x1a0>
    3cb0:	22 30       	cpi	r18, 0x02	; 2
    3cb2:	31 05       	cpc	r19, r1
    3cb4:	31 f0       	breq	.+12     	; 0x3cc2 <sinf+0x1a6>
    3cb6:	23 2b       	or	r18, r19
    3cb8:	41 f4       	brne	.+16     	; 0x3cca <sinf+0x1ae>
    3cba:	04 c0       	rjmp	.+8      	; 0x3cc4 <sinf+0x1a8>
    3cbc:	0e 94 03 25 	call	0x4a06	; 0x4a06 <__cosdf>
    3cc0:	07 c0       	rjmp	.+14     	; 0x3cd0 <sinf+0x1b4>
    3cc2:	90 58       	subi	r25, 0x80	; 128
    3cc4:	0e 94 13 24 	call	0x4826	; 0x4826 <__sindf>
    3cc8:	03 c0       	rjmp	.+6      	; 0x3cd0 <sinf+0x1b4>
    3cca:	0e 94 03 25 	call	0x4a06	; 0x4a06 <__cosdf>
    3cce:	90 58       	subi	r25, 0x80	; 128
    3cd0:	0f 90       	pop	r0
    3cd2:	0f 90       	pop	r0
    3cd4:	0f 90       	pop	r0
    3cd6:	0f 90       	pop	r0
    3cd8:	df 91       	pop	r29
    3cda:	cf 91       	pop	r28
    3cdc:	ff 90       	pop	r15
    3cde:	ef 90       	pop	r14
    3ce0:	df 90       	pop	r13
    3ce2:	cf 90       	pop	r12
    3ce4:	08 95       	ret

Disassembly of section .text.tanf:

00003e82 <tanf>:
    3e82:	cf 92       	push	r12
    3e84:	df 92       	push	r13
    3e86:	ef 92       	push	r14
    3e88:	ff 92       	push	r15
    3e8a:	cf 93       	push	r28
    3e8c:	df 93       	push	r29
    3e8e:	00 d0       	rcall	.+0      	; 0x3e90 <tanf+0xe>
    3e90:	00 d0       	rcall	.+0      	; 0x3e92 <tanf+0x10>
    3e92:	cd b7       	in	r28, 0x3d	; 61
    3e94:	de b7       	in	r29, 0x3e	; 62
    3e96:	6b 01       	movw	r12, r22
    3e98:	7c 01       	movw	r14, r24
    3e9a:	dc 01       	movw	r26, r24
    3e9c:	cb 01       	movw	r24, r22
    3e9e:	bf 77       	andi	r27, 0x7F	; 127
    3ea0:	8b 3d       	cpi	r24, 0xDB	; 219
    3ea2:	2f e0       	ldi	r18, 0x0F	; 15
    3ea4:	92 07       	cpc	r25, r18
    3ea6:	29 e4       	ldi	r18, 0x49	; 73
    3ea8:	a2 07       	cpc	r26, r18
    3eaa:	2f e3       	ldi	r18, 0x3F	; 63
    3eac:	b2 07       	cpc	r27, r18
    3eae:	38 f5       	brcc	.+78     	; 0x3efe <tanf+0x7c>
    3eb0:	00 97       	sbiw	r24, 0x00	; 0
    3eb2:	20 e8       	ldi	r18, 0x80	; 128
    3eb4:	a2 07       	cpc	r26, r18
    3eb6:	29 e3       	ldi	r18, 0x39	; 57
    3eb8:	b2 07       	cpc	r27, r18
    3eba:	e0 f4       	brcc	.+56     	; 0x3ef4 <tanf+0x72>
    3ebc:	00 97       	sbiw	r24, 0x00	; 0
    3ebe:	a0 48       	sbci	r26, 0x80	; 128
    3ec0:	b1 05       	cpc	r27, r1
    3ec2:	48 f4       	brcc	.+18     	; 0x3ed6 <tanf+0x54>
    3ec4:	20 e0       	ldi	r18, 0x00	; 0
    3ec6:	30 e0       	ldi	r19, 0x00	; 0
    3ec8:	40 e8       	ldi	r20, 0x80	; 128
    3eca:	53 e0       	ldi	r21, 0x03	; 3
    3ecc:	c7 01       	movw	r24, r14
    3ece:	b6 01       	movw	r22, r12
    3ed0:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    3ed4:	08 c0       	rjmp	.+16     	; 0x3ee6 <tanf+0x64>
    3ed6:	20 e0       	ldi	r18, 0x00	; 0
    3ed8:	30 e0       	ldi	r19, 0x00	; 0
    3eda:	40 e8       	ldi	r20, 0x80	; 128
    3edc:	5b e7       	ldi	r21, 0x7B	; 123
    3ede:	c7 01       	movw	r24, r14
    3ee0:	b6 01       	movw	r22, r12
    3ee2:	0e 94 f0 2d 	call	0x5be0	; 0x5be0 <__addsf3>
    3ee6:	69 83       	std	Y+1, r22	; 0x01
    3ee8:	7a 83       	std	Y+2, r23	; 0x02
    3eea:	8b 83       	std	Y+3, r24	; 0x03
    3eec:	9c 83       	std	Y+4, r25	; 0x04
    3eee:	b6 01       	movw	r22, r12
    3ef0:	c7 01       	movw	r24, r14
    3ef2:	86 c0       	rjmp	.+268    	; 0x4000 <tanf+0x17e>
    3ef4:	40 e0       	ldi	r20, 0x00	; 0
    3ef6:	50 e0       	ldi	r21, 0x00	; 0
    3ef8:	c7 01       	movw	r24, r14
    3efa:	b6 01       	movw	r22, r12
    3efc:	7f c0       	rjmp	.+254    	; 0x3ffc <tanf+0x17a>
    3efe:	b7 01       	movw	r22, r14
    3f00:	a6 01       	movw	r20, r12
    3f02:	44 27       	eor	r20, r20
    3f04:	77 fd       	sbrc	r23, 7
    3f06:	43 95       	inc	r20
    3f08:	55 27       	eor	r21, r21
    3f0a:	66 27       	eor	r22, r22
    3f0c:	77 27       	eor	r23, r23
    3f0e:	82 3d       	cpi	r24, 0xD2	; 210
    3f10:	23 e5       	ldi	r18, 0x53	; 83
    3f12:	92 07       	cpc	r25, r18
    3f14:	2b e7       	ldi	r18, 0x7B	; 123
    3f16:	a2 07       	cpc	r26, r18
    3f18:	20 e4       	ldi	r18, 0x40	; 64
    3f1a:	b2 07       	cpc	r27, r18
    3f1c:	e8 f4       	brcc	.+58     	; 0x3f58 <tanf+0xd6>
    3f1e:	84 3e       	cpi	r24, 0xE4	; 228
    3f20:	9b 4c       	sbci	r25, 0xCB	; 203
    3f22:	a6 41       	sbci	r26, 0x16	; 22
    3f24:	b0 44       	sbci	r27, 0x40	; 64
    3f26:	60 f4       	brcc	.+24     	; 0x3f40 <tanf+0xbe>
    3f28:	45 2b       	or	r20, r21
    3f2a:	29 f0       	breq	.+10     	; 0x3f36 <tanf+0xb4>
    3f2c:	2b ed       	ldi	r18, 0xDB	; 219
    3f2e:	3f e0       	ldi	r19, 0x0F	; 15
    3f30:	49 ec       	ldi	r20, 0xC9	; 201
    3f32:	5f e3       	ldi	r21, 0x3F	; 63
    3f34:	24 c0       	rjmp	.+72     	; 0x3f7e <tanf+0xfc>
    3f36:	2b ed       	ldi	r18, 0xDB	; 219
    3f38:	3f e0       	ldi	r19, 0x0F	; 15
    3f3a:	49 ec       	ldi	r20, 0xC9	; 201
    3f3c:	5f e3       	ldi	r21, 0x3F	; 63
    3f3e:	28 c0       	rjmp	.+80     	; 0x3f90 <tanf+0x10e>
    3f40:	45 2b       	or	r20, r21
    3f42:	29 f0       	breq	.+10     	; 0x3f4e <tanf+0xcc>
    3f44:	2b ed       	ldi	r18, 0xDB	; 219
    3f46:	3f e0       	ldi	r19, 0x0F	; 15
    3f48:	49 e4       	ldi	r20, 0x49	; 73
    3f4a:	50 e4       	ldi	r21, 0x40	; 64
    3f4c:	2e c0       	rjmp	.+92     	; 0x3faa <tanf+0x128>
    3f4e:	2b ed       	ldi	r18, 0xDB	; 219
    3f50:	3f e0       	ldi	r19, 0x0F	; 15
    3f52:	49 e4       	ldi	r20, 0x49	; 73
    3f54:	50 e4       	ldi	r21, 0x40	; 64
    3f56:	32 c0       	rjmp	.+100    	; 0x3fbc <tanf+0x13a>
    3f58:	86 3d       	cpi	r24, 0xD6	; 214
    3f5a:	21 e3       	ldi	r18, 0x31	; 49
    3f5c:	92 07       	cpc	r25, r18
    3f5e:	22 ee       	ldi	r18, 0xE2	; 226
    3f60:	a2 07       	cpc	r26, r18
    3f62:	20 e4       	ldi	r18, 0x40	; 64
    3f64:	b2 07       	cpc	r27, r18
    3f66:	88 f5       	brcc	.+98     	; 0x3fca <tanf+0x148>
    3f68:	80 3e       	cpi	r24, 0xE0	; 224
    3f6a:	9d 4e       	sbci	r25, 0xED	; 237
    3f6c:	af 4a       	sbci	r26, 0xAF	; 175
    3f6e:	b0 44       	sbci	r27, 0x40	; 64
    3f70:	b0 f4       	brcc	.+44     	; 0x3f9e <tanf+0x11c>
    3f72:	45 2b       	or	r20, r21
    3f74:	49 f0       	breq	.+18     	; 0x3f88 <tanf+0x106>
    3f76:	24 ee       	ldi	r18, 0xE4	; 228
    3f78:	3b ec       	ldi	r19, 0xCB	; 203
    3f7a:	46 e9       	ldi	r20, 0x96	; 150
    3f7c:	50 e4       	ldi	r21, 0x40	; 64
    3f7e:	c7 01       	movw	r24, r14
    3f80:	b6 01       	movw	r22, r12
    3f82:	0e 94 f0 2d 	call	0x5be0	; 0x5be0 <__addsf3>
    3f86:	08 c0       	rjmp	.+16     	; 0x3f98 <tanf+0x116>
    3f88:	24 ee       	ldi	r18, 0xE4	; 228
    3f8a:	3b ec       	ldi	r19, 0xCB	; 203
    3f8c:	46 e9       	ldi	r20, 0x96	; 150
    3f8e:	50 e4       	ldi	r21, 0x40	; 64
    3f90:	c7 01       	movw	r24, r14
    3f92:	b6 01       	movw	r22, r12
    3f94:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__subsf3>
    3f98:	41 e0       	ldi	r20, 0x01	; 1
    3f9a:	50 e0       	ldi	r21, 0x00	; 0
    3f9c:	2f c0       	rjmp	.+94     	; 0x3ffc <tanf+0x17a>
    3f9e:	45 2b       	or	r20, r21
    3fa0:	49 f0       	breq	.+18     	; 0x3fb4 <tanf+0x132>
    3fa2:	2b ed       	ldi	r18, 0xDB	; 219
    3fa4:	3f e0       	ldi	r19, 0x0F	; 15
    3fa6:	49 ec       	ldi	r20, 0xC9	; 201
    3fa8:	50 e4       	ldi	r21, 0x40	; 64
    3faa:	c7 01       	movw	r24, r14
    3fac:	b6 01       	movw	r22, r12
    3fae:	0e 94 f0 2d 	call	0x5be0	; 0x5be0 <__addsf3>
    3fb2:	08 c0       	rjmp	.+16     	; 0x3fc4 <tanf+0x142>
    3fb4:	2b ed       	ldi	r18, 0xDB	; 219
    3fb6:	3f e0       	ldi	r19, 0x0F	; 15
    3fb8:	49 ec       	ldi	r20, 0xC9	; 201
    3fba:	50 e4       	ldi	r21, 0x40	; 64
    3fbc:	c7 01       	movw	r24, r14
    3fbe:	b6 01       	movw	r22, r12
    3fc0:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__subsf3>
    3fc4:	40 e0       	ldi	r20, 0x00	; 0
    3fc6:	50 e0       	ldi	r21, 0x00	; 0
    3fc8:	19 c0       	rjmp	.+50     	; 0x3ffc <tanf+0x17a>
    3fca:	00 97       	sbiw	r24, 0x00	; 0
    3fcc:	a0 48       	sbci	r26, 0x80	; 128
    3fce:	bf 47       	sbci	r27, 0x7F	; 127
    3fd0:	38 f0       	brcs	.+14     	; 0x3fe0 <tanf+0x15e>
    3fd2:	a7 01       	movw	r20, r14
    3fd4:	96 01       	movw	r18, r12
    3fd6:	c7 01       	movw	r24, r14
    3fd8:	b6 01       	movw	r22, r12
    3fda:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__subsf3>
    3fde:	10 c0       	rjmp	.+32     	; 0x4000 <tanf+0x17e>
    3fe0:	ae 01       	movw	r20, r28
    3fe2:	4f 5f       	subi	r20, 0xFF	; 255
    3fe4:	5f 4f       	sbci	r21, 0xFF	; 255
    3fe6:	c7 01       	movw	r24, r14
    3fe8:	b6 01       	movw	r22, r12
    3fea:	0e 94 0f 20 	call	0x401e	; 0x401e <__rem_pio2f>
    3fee:	ac 01       	movw	r20, r24
    3ff0:	41 70       	andi	r20, 0x01	; 1
    3ff2:	55 27       	eor	r21, r21
    3ff4:	69 81       	ldd	r22, Y+1	; 0x01
    3ff6:	7a 81       	ldd	r23, Y+2	; 0x02
    3ff8:	8b 81       	ldd	r24, Y+3	; 0x03
    3ffa:	9c 81       	ldd	r25, Y+4	; 0x04
    3ffc:	0e 94 51 22 	call	0x44a2	; 0x44a2 <__tandf>
    4000:	6b 01       	movw	r12, r22
    4002:	7c 01       	movw	r14, r24
    4004:	c7 01       	movw	r24, r14
    4006:	b6 01       	movw	r22, r12
    4008:	0f 90       	pop	r0
    400a:	0f 90       	pop	r0
    400c:	0f 90       	pop	r0
    400e:	0f 90       	pop	r0
    4010:	df 91       	pop	r29
    4012:	cf 91       	pop	r28
    4014:	ff 90       	pop	r15
    4016:	ef 90       	pop	r14
    4018:	df 90       	pop	r13
    401a:	cf 90       	pop	r12
    401c:	08 95       	ret

Disassembly of section .text.__cosdf:

00004a06 <__cosdf>:
    4a06:	4f 92       	push	r4
    4a08:	5f 92       	push	r5
    4a0a:	6f 92       	push	r6
    4a0c:	7f 92       	push	r7
    4a0e:	8f 92       	push	r8
    4a10:	9f 92       	push	r9
    4a12:	af 92       	push	r10
    4a14:	bf 92       	push	r11
    4a16:	cf 92       	push	r12
    4a18:	df 92       	push	r13
    4a1a:	ef 92       	push	r14
    4a1c:	ff 92       	push	r15
    4a1e:	cf 93       	push	r28
    4a20:	df 93       	push	r29
    4a22:	00 d0       	rcall	.+0      	; 0x4a24 <__cosdf+0x1e>
    4a24:	00 d0       	rcall	.+0      	; 0x4a26 <__cosdf+0x20>
    4a26:	cd b7       	in	r28, 0x3d	; 61
    4a28:	de b7       	in	r29, 0x3e	; 62
    4a2a:	9b 01       	movw	r18, r22
    4a2c:	ac 01       	movw	r20, r24
    4a2e:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    4a32:	6b 01       	movw	r12, r22
    4a34:	7c 01       	movw	r14, r24
    4a36:	9b 01       	movw	r18, r22
    4a38:	ac 01       	movw	r20, r24
    4a3a:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    4a3e:	2b 01       	movw	r4, r22
    4a40:	3c 01       	movw	r6, r24
    4a42:	20 e0       	ldi	r18, 0x00	; 0
    4a44:	30 e0       	ldi	r19, 0x00	; 0
    4a46:	40 e0       	ldi	r20, 0x00	; 0
    4a48:	5f eb       	ldi	r21, 0xBF	; 191
    4a4a:	c7 01       	movw	r24, r14
    4a4c:	b6 01       	movw	r22, r12
    4a4e:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    4a52:	20 e0       	ldi	r18, 0x00	; 0
    4a54:	30 e0       	ldi	r19, 0x00	; 0
    4a56:	40 e8       	ldi	r20, 0x80	; 128
    4a58:	5f e3       	ldi	r21, 0x3F	; 63
    4a5a:	0e 94 f0 2d 	call	0x5be0	; 0x5be0 <__addsf3>
    4a5e:	4b 01       	movw	r8, r22
    4a60:	5c 01       	movw	r10, r24
    4a62:	2f e9       	ldi	r18, 0x9F	; 159
    4a64:	3a ea       	ldi	r19, 0xAA	; 170
    4a66:	4a e2       	ldi	r20, 0x2A	; 42
    4a68:	5d e3       	ldi	r21, 0x3D	; 61
    4a6a:	c3 01       	movw	r24, r6
    4a6c:	b2 01       	movw	r22, r4
    4a6e:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    4a72:	9b 01       	movw	r18, r22
    4a74:	ac 01       	movw	r20, r24
    4a76:	c5 01       	movw	r24, r10
    4a78:	b4 01       	movw	r22, r8
    4a7a:	0e 94 f0 2d 	call	0x5be0	; 0x5be0 <__addsf3>
    4a7e:	4b 01       	movw	r8, r22
    4a80:	5c 01       	movw	r10, r24
    4a82:	27 e1       	ldi	r18, 0x17	; 23
    4a84:	3a e9       	ldi	r19, 0x9A	; 154
    4a86:	4c ec       	ldi	r20, 0xCC	; 204
    4a88:	57 e3       	ldi	r21, 0x37	; 55
    4a8a:	c7 01       	movw	r24, r14
    4a8c:	b6 01       	movw	r22, r12
    4a8e:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    4a92:	2f e3       	ldi	r18, 0x3F	; 63
    4a94:	34 e0       	ldi	r19, 0x04	; 4
    4a96:	46 eb       	ldi	r20, 0xB6	; 182
    4a98:	5a e3       	ldi	r21, 0x3A	; 58
    4a9a:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__subsf3>
    4a9e:	69 83       	std	Y+1, r22	; 0x01
    4aa0:	7a 83       	std	Y+2, r23	; 0x02
    4aa2:	8b 83       	std	Y+3, r24	; 0x03
    4aa4:	9c 83       	std	Y+4, r25	; 0x04
    4aa6:	a3 01       	movw	r20, r6
    4aa8:	92 01       	movw	r18, r4
    4aaa:	c7 01       	movw	r24, r14
    4aac:	b6 01       	movw	r22, r12
    4aae:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    4ab2:	9b 01       	movw	r18, r22
    4ab4:	ac 01       	movw	r20, r24
    4ab6:	69 81       	ldd	r22, Y+1	; 0x01
    4ab8:	7a 81       	ldd	r23, Y+2	; 0x02
    4aba:	8b 81       	ldd	r24, Y+3	; 0x03
    4abc:	9c 81       	ldd	r25, Y+4	; 0x04
    4abe:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    4ac2:	9b 01       	movw	r18, r22
    4ac4:	ac 01       	movw	r20, r24
    4ac6:	c5 01       	movw	r24, r10
    4ac8:	b4 01       	movw	r22, r8
    4aca:	0e 94 f0 2d 	call	0x5be0	; 0x5be0 <__addsf3>
    4ace:	0f 90       	pop	r0
    4ad0:	0f 90       	pop	r0
    4ad2:	0f 90       	pop	r0
    4ad4:	0f 90       	pop	r0
    4ad6:	df 91       	pop	r29
    4ad8:	cf 91       	pop	r28
    4ada:	ff 90       	pop	r15
    4adc:	ef 90       	pop	r14
    4ade:	df 90       	pop	r13
    4ae0:	cf 90       	pop	r12
    4ae2:	bf 90       	pop	r11
    4ae4:	af 90       	pop	r10
    4ae6:	9f 90       	pop	r9
    4ae8:	8f 90       	pop	r8
    4aea:	7f 90       	pop	r7
    4aec:	6f 90       	pop	r6
    4aee:	5f 90       	pop	r5
    4af0:	4f 90       	pop	r4
    4af2:	08 95       	ret

Disassembly of section .text.__rem_pio2f:

0000401e <__rem_pio2f>:
    401e:	4f 92       	push	r4
    4020:	5f 92       	push	r5
    4022:	6f 92       	push	r6
    4024:	7f 92       	push	r7
    4026:	af 92       	push	r10
    4028:	bf 92       	push	r11
    402a:	cf 92       	push	r12
    402c:	df 92       	push	r13
    402e:	ef 92       	push	r14
    4030:	ff 92       	push	r15
    4032:	0f 93       	push	r16
    4034:	1f 93       	push	r17
    4036:	cf 93       	push	r28
    4038:	df 93       	push	r29
    403a:	cd b7       	in	r28, 0x3d	; 61
    403c:	de b7       	in	r29, 0x3e	; 62
    403e:	2c 97       	sbiw	r28, 0x0c	; 12
    4040:	0f b6       	in	r0, 0x3f	; 63
    4042:	f8 94       	cli
    4044:	de bf       	out	0x3e, r29	; 62
    4046:	0f be       	out	0x3f, r0	; 63
    4048:	cd bf       	out	0x3d, r28	; 61
    404a:	2b 01       	movw	r4, r22
    404c:	3c 01       	movw	r6, r24
    404e:	5a 01       	movw	r10, r20
    4050:	dc 01       	movw	r26, r24
    4052:	cb 01       	movw	r24, r22
    4054:	bf 77       	andi	r27, 0x7F	; 127
    4056:	8b 3d       	cpi	r24, 0xDB	; 219
    4058:	2f e0       	ldi	r18, 0x0F	; 15
    405a:	92 07       	cpc	r25, r18
    405c:	29 ec       	ldi	r18, 0xC9	; 201
    405e:	a2 07       	cpc	r26, r18
    4060:	2d e4       	ldi	r18, 0x4D	; 77
    4062:	b2 07       	cpc	r27, r18
    4064:	08 f0       	brcs	.+2      	; 0x4068 <__rem_pio2f+0x4a>
    4066:	42 c0       	rjmp	.+132    	; 0x40ec <__rem_pio2f+0xce>
    4068:	23 e8       	ldi	r18, 0x83	; 131
    406a:	39 ef       	ldi	r19, 0xF9	; 249
    406c:	42 e2       	ldi	r20, 0x22	; 34
    406e:	5f e3       	ldi	r21, 0x3F	; 63
    4070:	c3 01       	movw	r24, r6
    4072:	b2 01       	movw	r22, r4
    4074:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    4078:	20 e0       	ldi	r18, 0x00	; 0
    407a:	30 e0       	ldi	r19, 0x00	; 0
    407c:	40 e4       	ldi	r20, 0x40	; 64
    407e:	5b e4       	ldi	r21, 0x4B	; 75
    4080:	0e 94 f0 2d 	call	0x5be0	; 0x5be0 <__addsf3>
    4084:	20 e0       	ldi	r18, 0x00	; 0
    4086:	30 e0       	ldi	r19, 0x00	; 0
    4088:	40 e4       	ldi	r20, 0x40	; 64
    408a:	5b e4       	ldi	r21, 0x4B	; 75
    408c:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__subsf3>
    4090:	6b 01       	movw	r12, r22
    4092:	7c 01       	movw	r14, r24
    4094:	0e 94 f6 2d 	call	0x5bec	; 0x5bec <__fixsfsi>
    4098:	69 87       	std	Y+9, r22	; 0x09
    409a:	7a 87       	std	Y+10, r23	; 0x0a
    409c:	8b 87       	std	Y+11, r24	; 0x0b
    409e:	9c 87       	std	Y+12, r25	; 0x0c
    40a0:	2a ed       	ldi	r18, 0xDA	; 218
    40a2:	3f e0       	ldi	r19, 0x0F	; 15
    40a4:	49 ec       	ldi	r20, 0xC9	; 201
    40a6:	5f e3       	ldi	r21, 0x3F	; 63
    40a8:	c7 01       	movw	r24, r14
    40aa:	b6 01       	movw	r22, r12
    40ac:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    40b0:	9b 01       	movw	r18, r22
    40b2:	ac 01       	movw	r20, r24
    40b4:	c3 01       	movw	r24, r6
    40b6:	b2 01       	movw	r22, r4
    40b8:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__subsf3>
    40bc:	2b 01       	movw	r4, r22
    40be:	3c 01       	movw	r6, r24
    40c0:	23 ea       	ldi	r18, 0xA3	; 163
    40c2:	35 e8       	ldi	r19, 0x85	; 133
    40c4:	48 e8       	ldi	r20, 0x88	; 136
    40c6:	52 e3       	ldi	r21, 0x32	; 50
    40c8:	c7 01       	movw	r24, r14
    40ca:	b6 01       	movw	r22, r12
    40cc:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    40d0:	9b 01       	movw	r18, r22
    40d2:	ac 01       	movw	r20, r24
    40d4:	c3 01       	movw	r24, r6
    40d6:	b2 01       	movw	r22, r4
    40d8:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__subsf3>
    40dc:	f5 01       	movw	r30, r10
    40de:	60 83       	st	Z, r22
    40e0:	71 83       	std	Z+1, r23	; 0x01
    40e2:	82 83       	std	Z+2, r24	; 0x02
    40e4:	93 83       	std	Z+3, r25	; 0x03
    40e6:	89 85       	ldd	r24, Y+9	; 0x09
    40e8:	9a 85       	ldd	r25, Y+10	; 0x0a
    40ea:	52 c0       	rjmp	.+164    	; 0x4190 <__rem_pio2f+0x172>
    40ec:	00 97       	sbiw	r24, 0x00	; 0
    40ee:	f0 e8       	ldi	r31, 0x80	; 128
    40f0:	af 07       	cpc	r26, r31
    40f2:	ff e7       	ldi	r31, 0x7F	; 127
    40f4:	bf 07       	cpc	r27, r31
    40f6:	70 f0       	brcs	.+28     	; 0x4114 <__rem_pio2f+0xf6>
    40f8:	a3 01       	movw	r20, r6
    40fa:	92 01       	movw	r18, r4
    40fc:	c3 01       	movw	r24, r6
    40fe:	b2 01       	movw	r22, r4
    4100:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__subsf3>
    4104:	f5 01       	movw	r30, r10
    4106:	60 83       	st	Z, r22
    4108:	71 83       	std	Z+1, r23	; 0x01
    410a:	82 83       	std	Z+2, r24	; 0x02
    410c:	93 83       	std	Z+3, r25	; 0x03
    410e:	80 e0       	ldi	r24, 0x00	; 0
    4110:	90 e0       	ldi	r25, 0x00	; 0
    4112:	3e c0       	rjmp	.+124    	; 0x4190 <__rem_pio2f+0x172>
    4114:	ac 01       	movw	r20, r24
    4116:	bd 01       	movw	r22, r26
    4118:	27 e1       	ldi	r18, 0x17	; 23
    411a:	76 95       	lsr	r23
    411c:	67 95       	ror	r22
    411e:	57 95       	ror	r21
    4120:	47 95       	ror	r20
    4122:	2a 95       	dec	r18
    4124:	d1 f7       	brne	.-12     	; 0x411a <__rem_pio2f+0xfc>
    4126:	46 59       	subi	r20, 0x96	; 150
    4128:	51 09       	sbc	r21, r1
    412a:	61 09       	sbc	r22, r1
    412c:	71 09       	sbc	r23, r1
    412e:	6a 01       	movw	r12, r20
    4130:	7b 01       	movw	r14, r22
    4132:	37 e1       	ldi	r19, 0x17	; 23
    4134:	cc 0c       	add	r12, r12
    4136:	dd 1c       	adc	r13, r13
    4138:	ee 1c       	adc	r14, r14
    413a:	ff 1c       	adc	r15, r15
    413c:	3a 95       	dec	r19
    413e:	d1 f7       	brne	.-12     	; 0x4134 <__rem_pio2f+0x116>
    4140:	8c 19       	sub	r24, r12
    4142:	9d 09       	sbc	r25, r13
    4144:	ae 09       	sbc	r26, r14
    4146:	bf 09       	sbc	r27, r15
    4148:	8d 83       	std	Y+5, r24	; 0x05
    414a:	9e 83       	std	Y+6, r25	; 0x06
    414c:	af 83       	std	Y+7, r26	; 0x07
    414e:	b8 87       	std	Y+8, r27	; 0x08
    4150:	00 e0       	ldi	r16, 0x00	; 0
    4152:	10 e0       	ldi	r17, 0x00	; 0
    4154:	21 e0       	ldi	r18, 0x01	; 1
    4156:	30 e0       	ldi	r19, 0x00	; 0
    4158:	be 01       	movw	r22, r28
    415a:	6f 5f       	subi	r22, 0xFF	; 255
    415c:	7f 4f       	sbci	r23, 0xFF	; 255
    415e:	ce 01       	movw	r24, r28
    4160:	05 96       	adiw	r24, 0x05	; 5
    4162:	0e 94 18 01 	call	0x230	; 0x230 <__rem_pio2_large>
    4166:	49 81       	ldd	r20, Y+1	; 0x01
    4168:	5a 81       	ldd	r21, Y+2	; 0x02
    416a:	6b 81       	ldd	r22, Y+3	; 0x03
    416c:	7c 81       	ldd	r23, Y+4	; 0x04
    416e:	77 fe       	sbrs	r7, 7
    4170:	0a c0       	rjmp	.+20     	; 0x4186 <__rem_pio2f+0x168>
    4172:	70 58       	subi	r23, 0x80	; 128
    4174:	f5 01       	movw	r30, r10
    4176:	40 83       	st	Z, r20
    4178:	51 83       	std	Z+1, r21	; 0x01
    417a:	62 83       	std	Z+2, r22	; 0x02
    417c:	73 83       	std	Z+3, r23	; 0x03
    417e:	91 95       	neg	r25
    4180:	81 95       	neg	r24
    4182:	91 09       	sbc	r25, r1
    4184:	05 c0       	rjmp	.+10     	; 0x4190 <__rem_pio2f+0x172>
    4186:	f5 01       	movw	r30, r10
    4188:	40 83       	st	Z, r20
    418a:	51 83       	std	Z+1, r21	; 0x01
    418c:	62 83       	std	Z+2, r22	; 0x02
    418e:	73 83       	std	Z+3, r23	; 0x03
    4190:	2c 96       	adiw	r28, 0x0c	; 12
    4192:	0f b6       	in	r0, 0x3f	; 63
    4194:	f8 94       	cli
    4196:	de bf       	out	0x3e, r29	; 62
    4198:	0f be       	out	0x3f, r0	; 63
    419a:	cd bf       	out	0x3d, r28	; 61
    419c:	df 91       	pop	r29
    419e:	cf 91       	pop	r28
    41a0:	1f 91       	pop	r17
    41a2:	0f 91       	pop	r16
    41a4:	ff 90       	pop	r15
    41a6:	ef 90       	pop	r14
    41a8:	df 90       	pop	r13
    41aa:	cf 90       	pop	r12
    41ac:	bf 90       	pop	r11
    41ae:	af 90       	pop	r10
    41b0:	7f 90       	pop	r7
    41b2:	6f 90       	pop	r6
    41b4:	5f 90       	pop	r5
    41b6:	4f 90       	pop	r4
    41b8:	08 95       	ret

Disassembly of section .text.__sindf:

00004826 <__sindf>:
    4826:	4f 92       	push	r4
    4828:	5f 92       	push	r5
    482a:	6f 92       	push	r6
    482c:	7f 92       	push	r7
    482e:	8f 92       	push	r8
    4830:	9f 92       	push	r9
    4832:	af 92       	push	r10
    4834:	bf 92       	push	r11
    4836:	cf 92       	push	r12
    4838:	df 92       	push	r13
    483a:	ef 92       	push	r14
    483c:	ff 92       	push	r15
    483e:	cf 93       	push	r28
    4840:	df 93       	push	r29
    4842:	00 d0       	rcall	.+0      	; 0x4844 <__sindf+0x1e>
    4844:	00 d0       	rcall	.+0      	; 0x4846 <__sindf+0x20>
    4846:	cd b7       	in	r28, 0x3d	; 61
    4848:	de b7       	in	r29, 0x3e	; 62
    484a:	4b 01       	movw	r8, r22
    484c:	5c 01       	movw	r10, r24
    484e:	9b 01       	movw	r18, r22
    4850:	ac 01       	movw	r20, r24
    4852:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    4856:	6b 01       	movw	r12, r22
    4858:	7c 01       	movw	r14, r24
    485a:	9b 01       	movw	r18, r22
    485c:	ac 01       	movw	r20, r24
    485e:	c5 01       	movw	r24, r10
    4860:	b4 01       	movw	r22, r8
    4862:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    4866:	69 83       	std	Y+1, r22	; 0x01
    4868:	7a 83       	std	Y+2, r23	; 0x02
    486a:	8b 83       	std	Y+3, r24	; 0x03
    486c:	9c 83       	std	Y+4, r25	; 0x04
    486e:	2c e3       	ldi	r18, 0x3C	; 60
    4870:	3c e6       	ldi	r19, 0x6C	; 108
    4872:	46 e3       	ldi	r20, 0x36	; 54
    4874:	56 e3       	ldi	r21, 0x36	; 54
    4876:	c7 01       	movw	r24, r14
    4878:	b6 01       	movw	r22, r12
    487a:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    487e:	2f ec       	ldi	r18, 0xCF	; 207
    4880:	37 e0       	ldi	r19, 0x07	; 7
    4882:	40 e5       	ldi	r20, 0x50	; 80
    4884:	59 e3       	ldi	r21, 0x39	; 57
    4886:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__subsf3>
    488a:	2b 01       	movw	r4, r22
    488c:	3c 01       	movw	r6, r24
    488e:	a7 01       	movw	r20, r14
    4890:	96 01       	movw	r18, r12
    4892:	c7 01       	movw	r24, r14
    4894:	b6 01       	movw	r22, r12
    4896:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    489a:	29 81       	ldd	r18, Y+1	; 0x01
    489c:	3a 81       	ldd	r19, Y+2	; 0x02
    489e:	4b 81       	ldd	r20, Y+3	; 0x03
    48a0:	5c 81       	ldd	r21, Y+4	; 0x04
    48a2:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    48a6:	9b 01       	movw	r18, r22
    48a8:	ac 01       	movw	r20, r24
    48aa:	c3 01       	movw	r24, r6
    48ac:	b2 01       	movw	r22, r4
    48ae:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    48b2:	2b 01       	movw	r4, r22
    48b4:	3c 01       	movw	r6, r24
    48b6:	24 e8       	ldi	r18, 0x84	; 132
    48b8:	38 e8       	ldi	r19, 0x88	; 136
    48ba:	48 e0       	ldi	r20, 0x08	; 8
    48bc:	5c e3       	ldi	r21, 0x3C	; 60
    48be:	c7 01       	movw	r24, r14
    48c0:	b6 01       	movw	r22, r12
    48c2:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    48c6:	2b ea       	ldi	r18, 0xAB	; 171
    48c8:	3a ea       	ldi	r19, 0xAA	; 170
    48ca:	4a e2       	ldi	r20, 0x2A	; 42
    48cc:	5e e3       	ldi	r21, 0x3E	; 62
    48ce:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__subsf3>
    48d2:	29 81       	ldd	r18, Y+1	; 0x01
    48d4:	3a 81       	ldd	r19, Y+2	; 0x02
    48d6:	4b 81       	ldd	r20, Y+3	; 0x03
    48d8:	5c 81       	ldd	r21, Y+4	; 0x04
    48da:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    48de:	a5 01       	movw	r20, r10
    48e0:	94 01       	movw	r18, r8
    48e2:	0e 94 f0 2d 	call	0x5be0	; 0x5be0 <__addsf3>
    48e6:	9b 01       	movw	r18, r22
    48e8:	ac 01       	movw	r20, r24
    48ea:	c3 01       	movw	r24, r6
    48ec:	b2 01       	movw	r22, r4
    48ee:	0e 94 f0 2d 	call	0x5be0	; 0x5be0 <__addsf3>
    48f2:	0f 90       	pop	r0
    48f4:	0f 90       	pop	r0
    48f6:	0f 90       	pop	r0
    48f8:	0f 90       	pop	r0
    48fa:	df 91       	pop	r29
    48fc:	cf 91       	pop	r28
    48fe:	ff 90       	pop	r15
    4900:	ef 90       	pop	r14
    4902:	df 90       	pop	r13
    4904:	cf 90       	pop	r12
    4906:	bf 90       	pop	r11
    4908:	af 90       	pop	r10
    490a:	9f 90       	pop	r9
    490c:	8f 90       	pop	r8
    490e:	7f 90       	pop	r7
    4910:	6f 90       	pop	r6
    4912:	5f 90       	pop	r5
    4914:	4f 90       	pop	r4
    4916:	08 95       	ret

Disassembly of section .text.__tandf:

000044a2 <__tandf>:
    44a2:	4f 92       	push	r4
    44a4:	5f 92       	push	r5
    44a6:	6f 92       	push	r6
    44a8:	7f 92       	push	r7
    44aa:	8f 92       	push	r8
    44ac:	9f 92       	push	r9
    44ae:	af 92       	push	r10
    44b0:	bf 92       	push	r11
    44b2:	cf 92       	push	r12
    44b4:	df 92       	push	r13
    44b6:	ef 92       	push	r14
    44b8:	ff 92       	push	r15
    44ba:	cf 93       	push	r28
    44bc:	df 93       	push	r29
    44be:	cd b7       	in	r28, 0x3d	; 61
    44c0:	de b7       	in	r29, 0x3e	; 62
    44c2:	2a 97       	sbiw	r28, 0x0a	; 10
    44c4:	0f b6       	in	r0, 0x3f	; 63
    44c6:	f8 94       	cli
    44c8:	de bf       	out	0x3e, r29	; 62
    44ca:	0f be       	out	0x3f, r0	; 63
    44cc:	cd bf       	out	0x3d, r28	; 61
    44ce:	4b 01       	movw	r8, r22
    44d0:	5c 01       	movw	r10, r24
    44d2:	5a 87       	std	Y+10, r21	; 0x0a
    44d4:	49 87       	std	Y+9, r20	; 0x09
    44d6:	9b 01       	movw	r18, r22
    44d8:	ac 01       	movw	r20, r24
    44da:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    44de:	6b 01       	movw	r12, r22
    44e0:	7c 01       	movw	r14, r24
    44e2:	9b 01       	movw	r18, r22
    44e4:	ac 01       	movw	r20, r24
    44e6:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    44ea:	2b 01       	movw	r4, r22
    44ec:	3c 01       	movw	r6, r24
    44ee:	a7 01       	movw	r20, r14
    44f0:	96 01       	movw	r18, r12
    44f2:	c5 01       	movw	r24, r10
    44f4:	b4 01       	movw	r22, r8
    44f6:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    44fa:	6d 83       	std	Y+5, r22	; 0x05
    44fc:	7e 83       	std	Y+6, r23	; 0x06
    44fe:	8f 83       	std	Y+7, r24	; 0x07
    4500:	98 87       	std	Y+8, r25	; 0x08
    4502:	2e ec       	ldi	r18, 0xCE	; 206
    4504:	35 e1       	ldi	r19, 0x15	; 21
    4506:	4b e1       	ldi	r20, 0x1B	; 27
    4508:	5c e3       	ldi	r21, 0x3C	; 60
    450a:	c7 01       	movw	r24, r14
    450c:	b6 01       	movw	r22, r12
    450e:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    4512:	20 e7       	ldi	r18, 0x70	; 112
    4514:	3d ee       	ldi	r19, 0xED	; 237
    4516:	42 e4       	ldi	r20, 0x42	; 66
    4518:	5b e3       	ldi	r21, 0x3B	; 59
    451a:	0e 94 f0 2d 	call	0x5be0	; 0x5be0 <__addsf3>
    451e:	a3 01       	movw	r20, r6
    4520:	92 01       	movw	r18, r4
    4522:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    4526:	69 83       	std	Y+1, r22	; 0x01
    4528:	7a 83       	std	Y+2, r23	; 0x02
    452a:	8b 83       	std	Y+3, r24	; 0x03
    452c:	9c 83       	std	Y+4, r25	; 0x04
    452e:	2d e9       	ldi	r18, 0x9D	; 157
    4530:	3f ee       	ldi	r19, 0xEF	; 239
    4532:	48 ec       	ldi	r20, 0xC8	; 200
    4534:	5c e3       	ldi	r21, 0x3C	; 60
    4536:	c7 01       	movw	r24, r14
    4538:	b6 01       	movw	r22, r12
    453a:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    453e:	29 e4       	ldi	r18, 0x49	; 73
    4540:	36 ea       	ldi	r19, 0xA6	; 166
    4542:	4a e5       	ldi	r20, 0x5A	; 90
    4544:	5d e3       	ldi	r21, 0x3D	; 61
    4546:	0e 94 f0 2d 	call	0x5be0	; 0x5be0 <__addsf3>
    454a:	9b 01       	movw	r18, r22
    454c:	ac 01       	movw	r20, r24
    454e:	69 81       	ldd	r22, Y+1	; 0x01
    4550:	7a 81       	ldd	r23, Y+2	; 0x02
    4552:	8b 81       	ldd	r24, Y+3	; 0x03
    4554:	9c 81       	ldd	r25, Y+4	; 0x04
    4556:	0e 94 f0 2d 	call	0x5be0	; 0x5be0 <__addsf3>
    455a:	69 83       	std	Y+1, r22	; 0x01
    455c:	7a 83       	std	Y+2, r23	; 0x02
    455e:	8b 83       	std	Y+3, r24	; 0x03
    4560:	9c 83       	std	Y+4, r25	; 0x04
    4562:	2d 81       	ldd	r18, Y+5	; 0x05
    4564:	3e 81       	ldd	r19, Y+6	; 0x06
    4566:	4f 81       	ldd	r20, Y+7	; 0x07
    4568:	58 85       	ldd	r21, Y+8	; 0x08
    456a:	c3 01       	movw	r24, r6
    456c:	b2 01       	movw	r22, r4
    456e:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    4572:	9b 01       	movw	r18, r22
    4574:	ac 01       	movw	r20, r24
    4576:	69 81       	ldd	r22, Y+1	; 0x01
    4578:	7a 81       	ldd	r23, Y+2	; 0x02
    457a:	8b 81       	ldd	r24, Y+3	; 0x03
    457c:	9c 81       	ldd	r25, Y+4	; 0x04
    457e:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    4582:	2b 01       	movw	r4, r22
    4584:	3c 01       	movw	r6, r24
    4586:	2a ee       	ldi	r18, 0xEA	; 234
    4588:	37 e9       	ldi	r19, 0x97	; 151
    458a:	48 e0       	ldi	r20, 0x08	; 8
    458c:	5e e3       	ldi	r21, 0x3E	; 62
    458e:	c7 01       	movw	r24, r14
    4590:	b6 01       	movw	r22, r12
    4592:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    4596:	2a e6       	ldi	r18, 0x6A	; 106
    4598:	3a ea       	ldi	r19, 0xAA	; 170
    459a:	4a ea       	ldi	r20, 0xAA	; 170
    459c:	5e e3       	ldi	r21, 0x3E	; 62
    459e:	0e 94 f0 2d 	call	0x5be0	; 0x5be0 <__addsf3>
    45a2:	2d 81       	ldd	r18, Y+5	; 0x05
    45a4:	3e 81       	ldd	r19, Y+6	; 0x06
    45a6:	4f 81       	ldd	r20, Y+7	; 0x07
    45a8:	58 85       	ldd	r21, Y+8	; 0x08
    45aa:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    45ae:	a5 01       	movw	r20, r10
    45b0:	94 01       	movw	r18, r8
    45b2:	0e 94 f0 2d 	call	0x5be0	; 0x5be0 <__addsf3>
    45b6:	a3 01       	movw	r20, r6
    45b8:	92 01       	movw	r18, r4
    45ba:	0e 94 f0 2d 	call	0x5be0	; 0x5be0 <__addsf3>
    45be:	29 85       	ldd	r18, Y+9	; 0x09
    45c0:	3a 85       	ldd	r19, Y+10	; 0x0a
    45c2:	23 2b       	or	r18, r19
    45c4:	41 f0       	breq	.+16     	; 0x45d6 <__tandf+0x134>
    45c6:	9b 01       	movw	r18, r22
    45c8:	ac 01       	movw	r20, r24
    45ca:	60 e0       	ldi	r22, 0x00	; 0
    45cc:	70 e0       	ldi	r23, 0x00	; 0
    45ce:	80 e8       	ldi	r24, 0x80	; 128
    45d0:	9f eb       	ldi	r25, 0xBF	; 191
    45d2:	0e 94 3a 2e 	call	0x5c74	; 0x5c74 <__divsf3>
    45d6:	2a 96       	adiw	r28, 0x0a	; 10
    45d8:	0f b6       	in	r0, 0x3f	; 63
    45da:	f8 94       	cli
    45dc:	de bf       	out	0x3e, r29	; 62
    45de:	0f be       	out	0x3f, r0	; 63
    45e0:	cd bf       	out	0x3d, r28	; 61
    45e2:	df 91       	pop	r29
    45e4:	cf 91       	pop	r28
    45e6:	ff 90       	pop	r15
    45e8:	ef 90       	pop	r14
    45ea:	df 90       	pop	r13
    45ec:	cf 90       	pop	r12
    45ee:	bf 90       	pop	r11
    45f0:	af 90       	pop	r10
    45f2:	9f 90       	pop	r9
    45f4:	8f 90       	pop	r8
    45f6:	7f 90       	pop	r7
    45f8:	6f 90       	pop	r6
    45fa:	5f 90       	pop	r5
    45fc:	4f 90       	pop	r4
    45fe:	08 95       	ret

Disassembly of section .text:

00005c60 <__gesf2>:
    5c60:	0e 94 7a 2b 	call	0x56f4	; 0x56f4 <__fp_cmp>
    5c64:	08 f4       	brcc	.+2      	; 0x5c68 <__gesf2+0x8>
    5c66:	8f ef       	ldi	r24, 0xFF	; 255
    5c68:	08 95       	ret

Disassembly of section .text.__rem_pio2_large:

00000230 <__rem_pio2_large>:
     230:	a1 e7       	ldi	r26, 0x71	; 113
     232:	b1 e0       	ldi	r27, 0x01	; 1
     234:	ee e1       	ldi	r30, 0x1E	; 30
     236:	f1 e0       	ldi	r31, 0x01	; 1
     238:	0c 94 59 2c 	jmp	0x58b2	; 0x58b2 <__prologue_saves__>
     23c:	cb 59       	subi	r28, 0x9B	; 155
     23e:	de 4f       	sbci	r29, 0xFE	; 254
     240:	88 83       	st	Y, r24
     242:	c5 56       	subi	r28, 0x65	; 101
     244:	d1 40       	sbci	r29, 0x01	; 1
     246:	c7 59       	subi	r28, 0x97	; 151
     248:	de 4f       	sbci	r29, 0xFE	; 254
     24a:	98 83       	st	Y, r25
     24c:	c9 56       	subi	r28, 0x69	; 105
     24e:	d1 40       	sbci	r29, 0x01	; 1
     250:	c3 5a       	subi	r28, 0xA3	; 163
     252:	de 4f       	sbci	r29, 0xFE	; 254
     254:	79 83       	std	Y+1, r23	; 0x01
     256:	68 83       	st	Y, r22
     258:	cd 55       	subi	r28, 0x5D	; 93
     25a:	d1 40       	sbci	r29, 0x01	; 1
     25c:	7a 01       	movw	r14, r20
     25e:	c7 5b       	subi	r28, 0xB7	; 183
     260:	de 4f       	sbci	r29, 0xFE	; 254
     262:	39 83       	std	Y+1, r19	; 0x01
     264:	28 83       	st	Y, r18
     266:	c9 54       	subi	r28, 0x49	; 73
     268:	d1 40       	sbci	r29, 0x01	; 1
     26a:	cd 59       	subi	r28, 0x9D	; 157
     26c:	de 4f       	sbci	r29, 0xFE	; 254
     26e:	19 83       	std	Y+1, r17	; 0x01
     270:	08 83       	st	Y, r16
     272:	c3 56       	subi	r28, 0x63	; 99
     274:	d1 40       	sbci	r29, 0x01	; 1
     276:	c8 01       	movw	r24, r16
     278:	88 0f       	add	r24, r24
     27a:	99 1f       	adc	r25, r25
     27c:	09 2e       	mov	r0, r25
     27e:	00 0c       	add	r0, r0
     280:	aa 0b       	sbc	r26, r26
     282:	88 5d       	subi	r24, 0xD8	; 216
     284:	9d 4f       	sbci	r25, 0xFD	; 253
     286:	af 4f       	sbci	r26, 0xFF	; 255
     288:	fc 01       	movw	r30, r24
     28a:	5a 2f       	mov	r21, r26
     28c:	0e 94 d9 2d 	call	0x5bb2	; 0x5bb2 <__xload_2>
     290:	4b 01       	movw	r8, r22
     292:	77 0f       	add	r23, r23
     294:	aa 08       	sbc	r10, r10
     296:	bb 08       	sbc	r11, r11
     298:	cb 5a       	subi	r28, 0xAB	; 171
     29a:	de 4f       	sbci	r29, 0xFE	; 254
     29c:	88 82       	st	Y, r8
     29e:	99 82       	std	Y+1, r9	; 0x01
     2a0:	aa 82       	std	Y+2, r10	; 0x02
     2a2:	bb 82       	std	Y+3, r11	; 0x03
     2a4:	c5 55       	subi	r28, 0x55	; 85
     2a6:	d1 40       	sbci	r29, 0x01	; 1
     2a8:	c9 01       	movw	r24, r18
     2aa:	01 97       	sbiw	r24, 0x01	; 1
     2ac:	5c 01       	movw	r10, r24
     2ae:	99 0f       	add	r25, r25
     2b0:	cc 08       	sbc	r12, r12
     2b2:	dd 08       	sbc	r13, r13
     2b4:	cf 5a       	subi	r28, 0xAF	; 175
     2b6:	de 4f       	sbci	r29, 0xFE	; 254
     2b8:	a8 82       	st	Y, r10
     2ba:	b9 82       	std	Y+1, r11	; 0x01
     2bc:	ca 82       	std	Y+2, r12	; 0x02
     2be:	db 82       	std	Y+3, r13	; 0x03
     2c0:	c1 55       	subi	r28, 0x51	; 81
     2c2:	d1 40       	sbci	r29, 0x01	; 1
     2c4:	c7 01       	movw	r24, r14
     2c6:	03 97       	sbiw	r24, 0x03	; 3
     2c8:	68 e1       	ldi	r22, 0x18	; 24
     2ca:	70 e0       	ldi	r23, 0x00	; 0
     2cc:	0e 94 d4 2c 	call	0x59a8	; 0x59a8 <__divmodhi4>
     2d0:	77 fd       	sbrc	r23, 7
     2d2:	0d c0       	rjmp	.+26     	; 0x2ee <__rem_pio2_large+0xbe>
     2d4:	4b 01       	movw	r8, r22
     2d6:	77 0f       	add	r23, r23
     2d8:	aa 08       	sbc	r10, r10
     2da:	bb 08       	sbc	r11, r11
     2dc:	c7 5a       	subi	r28, 0xA7	; 167
     2de:	de 4f       	sbci	r29, 0xFE	; 254
     2e0:	88 82       	st	Y, r8
     2e2:	99 82       	std	Y+1, r9	; 0x01
     2e4:	aa 82       	std	Y+2, r10	; 0x02
     2e6:	bb 82       	std	Y+3, r11	; 0x03
     2e8:	c9 55       	subi	r28, 0x59	; 89
     2ea:	d1 40       	sbci	r29, 0x01	; 1
     2ec:	08 c0       	rjmp	.+16     	; 0x2fe <__rem_pio2_large+0xce>
     2ee:	c7 5a       	subi	r28, 0xA7	; 167
     2f0:	de 4f       	sbci	r29, 0xFE	; 254
     2f2:	18 82       	st	Y, r1
     2f4:	19 82       	std	Y+1, r1	; 0x01
     2f6:	1a 82       	std	Y+2, r1	; 0x02
     2f8:	1b 82       	std	Y+3, r1	; 0x03
     2fa:	c9 55       	subi	r28, 0x59	; 89
     2fc:	d1 40       	sbci	r29, 0x01	; 1
     2fe:	a8 ee       	ldi	r26, 0xE8	; 232
     300:	bf ef       	ldi	r27, 0xFF	; 255
     302:	c7 5a       	subi	r28, 0xA7	; 167
     304:	de 4f       	sbci	r29, 0xFE	; 254
     306:	28 81       	ld	r18, Y
     308:	39 81       	ldd	r19, Y+1	; 0x01
     30a:	4a 81       	ldd	r20, Y+2	; 0x02
     30c:	5b 81       	ldd	r21, Y+3	; 0x03
     30e:	c9 55       	subi	r28, 0x59	; 89
     310:	d1 40       	sbci	r29, 0x01	; 1
     312:	2f 5f       	subi	r18, 0xFF	; 255
     314:	3f 4f       	sbci	r19, 0xFF	; 255
     316:	4f 4f       	sbci	r20, 0xFF	; 255
     318:	5f 4f       	sbci	r21, 0xFF	; 255
     31a:	0e 94 d4 2d 	call	0x5ba8	; 0x5ba8 <__mulohisi3>
     31e:	87 01       	movw	r16, r14
     320:	ff 0c       	add	r15, r15
     322:	22 0b       	sbc	r18, r18
     324:	33 0b       	sbc	r19, r19
     326:	5b 01       	movw	r10, r22
     328:	6c 01       	movw	r12, r24
     32a:	a0 0e       	add	r10, r16
     32c:	b1 1e       	adc	r11, r17
     32e:	c2 1e       	adc	r12, r18
     330:	d3 1e       	adc	r13, r19
     332:	cf 5b       	subi	r28, 0xBF	; 191
     334:	de 4f       	sbci	r29, 0xFE	; 254
     336:	a8 82       	st	Y, r10
     338:	b9 82       	std	Y+1, r11	; 0x01
     33a:	ca 82       	std	Y+2, r12	; 0x02
     33c:	db 82       	std	Y+3, r13	; 0x03
     33e:	c1 54       	subi	r28, 0x41	; 65
     340:	d1 40       	sbci	r29, 0x01	; 1
     342:	c7 5a       	subi	r28, 0xA7	; 167
     344:	de 4f       	sbci	r29, 0xFE	; 254
     346:	48 80       	ld	r4, Y
     348:	59 80       	ldd	r5, Y+1	; 0x01
     34a:	6a 80       	ldd	r6, Y+2	; 0x02
     34c:	7b 80       	ldd	r7, Y+3	; 0x03
     34e:	c9 55       	subi	r28, 0x59	; 89
     350:	d1 40       	sbci	r29, 0x01	; 1
     352:	cf 5a       	subi	r28, 0xAF	; 175
     354:	de 4f       	sbci	r29, 0xFE	; 254
     356:	c8 80       	ld	r12, Y
     358:	d9 80       	ldd	r13, Y+1	; 0x01
     35a:	ea 80       	ldd	r14, Y+2	; 0x02
     35c:	fb 80       	ldd	r15, Y+3	; 0x03
     35e:	c1 55       	subi	r28, 0x51	; 81
     360:	d1 40       	sbci	r29, 0x01	; 1
     362:	4c 18       	sub	r4, r12
     364:	5d 08       	sbc	r5, r13
     366:	6e 08       	sbc	r6, r14
     368:	7f 08       	sbc	r7, r15
     36a:	cb 5a       	subi	r28, 0xAB	; 171
     36c:	de 4f       	sbci	r29, 0xFE	; 254
     36e:	88 80       	ld	r8, Y
     370:	99 80       	ldd	r9, Y+1	; 0x01
     372:	aa 80       	ldd	r10, Y+2	; 0x02
     374:	bb 80       	ldd	r11, Y+3	; 0x03
     376:	c5 55       	subi	r28, 0x55	; 85
     378:	d1 40       	sbci	r29, 0x01	; 1
     37a:	8c 0c       	add	r8, r12
     37c:	9d 1c       	adc	r9, r13
     37e:	ae 1c       	adc	r10, r14
     380:	bf 1c       	adc	r11, r15
     382:	cb 5b       	subi	r28, 0xBB	; 187
     384:	de 4f       	sbci	r29, 0xFE	; 254
     386:	88 82       	st	Y, r8
     388:	99 82       	std	Y+1, r9	; 0x01
     38a:	aa 82       	std	Y+2, r10	; 0x02
     38c:	bb 82       	std	Y+3, r11	; 0x03
     38e:	c5 54       	subi	r28, 0x45	; 69
     390:	d1 40       	sbci	r29, 0x01	; 1
     392:	8e 01       	movw	r16, r28
     394:	0f 55       	subi	r16, 0x5F	; 95
     396:	1f 4f       	sbci	r17, 0xFF	; 255
     398:	62 01       	movw	r12, r4
     39a:	cc 0c       	add	r12, r12
     39c:	dd 1c       	adc	r13, r13
     39e:	cc 0c       	add	r12, r12
     3a0:	dd 1c       	adc	r13, r13
     3a2:	c6 01       	movw	r24, r12
     3a4:	dd 0c       	add	r13, r13
     3a6:	aa 0b       	sbc	r26, r26
     3a8:	9c 01       	movw	r18, r24
     3aa:	4a 2f       	mov	r20, r26
     3ac:	20 52       	subi	r18, 0x20	; 32
     3ae:	3f 4f       	sbci	r19, 0xFF	; 255
     3b0:	4f 4f       	sbci	r20, 0xFF	; 255
     3b2:	69 01       	movw	r12, r18
     3b4:	e4 2e       	mov	r14, r20
     3b6:	81 2c       	mov	r8, r1
     3b8:	91 2c       	mov	r9, r1
     3ba:	54 01       	movw	r10, r8
     3bc:	cb 5b       	subi	r28, 0xBB	; 187
     3be:	de 4f       	sbci	r29, 0xFE	; 254
     3c0:	28 81       	ld	r18, Y
     3c2:	39 81       	ldd	r19, Y+1	; 0x01
     3c4:	4a 81       	ldd	r20, Y+2	; 0x02
     3c6:	5b 81       	ldd	r21, Y+3	; 0x03
     3c8:	c5 54       	subi	r28, 0x45	; 69
     3ca:	d1 40       	sbci	r29, 0x01	; 1
     3cc:	28 15       	cp	r18, r8
     3ce:	39 05       	cpc	r19, r9
     3d0:	4a 05       	cpc	r20, r10
     3d2:	5b 05       	cpc	r21, r11
     3d4:	14 f1       	brlt	.+68     	; 0x41a <__EEPROM_REGION_LENGTH__+0x1a>
     3d6:	d5 01       	movw	r26, r10
     3d8:	c4 01       	movw	r24, r8
     3da:	84 0d       	add	r24, r4
     3dc:	95 1d       	adc	r25, r5
     3de:	a6 1d       	adc	r26, r6
     3e0:	b7 1d       	adc	r27, r7
     3e2:	b7 fd       	sbrc	r27, 7
     3e4:	07 c0       	rjmp	.+14     	; 0x3f4 <__rem_pio2_large+0x1c4>
     3e6:	f6 01       	movw	r30, r12
     3e8:	5e 2d       	mov	r21, r14
     3ea:	0e 94 a4 2d 	call	0x5b48	; 0x5b48 <__xload_4>
     3ee:	0e 94 7c 29 	call	0x52f8	; 0x52f8 <__floatsisf>
     3f2:	03 c0       	rjmp	.+6      	; 0x3fa <__rem_pio2_large+0x1ca>
     3f4:	60 e0       	ldi	r22, 0x00	; 0
     3f6:	70 e0       	ldi	r23, 0x00	; 0
     3f8:	cb 01       	movw	r24, r22
     3fa:	d8 01       	movw	r26, r16
     3fc:	6d 93       	st	X+, r22
     3fe:	7d 93       	st	X+, r23
     400:	8d 93       	st	X+, r24
     402:	9d 93       	st	X+, r25
     404:	8d 01       	movw	r16, r26
     406:	bf ef       	ldi	r27, 0xFF	; 255
     408:	8b 1a       	sub	r8, r27
     40a:	9b 0a       	sbc	r9, r27
     40c:	ab 0a       	sbc	r10, r27
     40e:	bb 0a       	sbc	r11, r27
     410:	e4 e0       	ldi	r30, 0x04	; 4
     412:	ce 0e       	add	r12, r30
     414:	d1 1c       	adc	r13, r1
     416:	e1 1c       	adc	r14, r1
     418:	d1 cf       	rjmp	.-94     	; 0x3bc <__rem_pio2_large+0x18c>
     41a:	8e 01       	movw	r16, r28
     41c:	0f 5f       	subi	r16, 0xFF	; 255
     41e:	1f 4f       	sbci	r17, 0xFF	; 255
     420:	c3 5b       	subi	r28, 0xB3	; 179
     422:	de 4f       	sbci	r29, 0xFE	; 254
     424:	19 83       	std	Y+1, r17	; 0x01
     426:	08 83       	st	Y, r16
     428:	cd 54       	subi	r28, 0x4D	; 77
     42a:	d1 40       	sbci	r29, 0x01	; 1
     42c:	c7 5b       	subi	r28, 0xB7	; 183
     42e:	de 4f       	sbci	r29, 0xFE	; 254
     430:	88 80       	ld	r8, Y
     432:	99 80       	ldd	r9, Y+1	; 0x01
     434:	c9 54       	subi	r28, 0x49	; 73
     436:	d1 40       	sbci	r29, 0x01	; 1
     438:	c4 01       	movw	r24, r8
     43a:	99 0c       	add	r9, r9
     43c:	aa 0b       	sbc	r26, r26
     43e:	bb 0b       	sbc	r27, r27
     440:	01 97       	sbiw	r24, 0x01	; 1
     442:	a1 09       	sbc	r26, r1
     444:	b1 09       	sbc	r27, r1
     446:	5c 01       	movw	r10, r24
     448:	aa 0c       	add	r10, r10
     44a:	bb 1c       	adc	r11, r11
     44c:	aa 0c       	add	r10, r10
     44e:	bb 1c       	adc	r11, r11
     450:	c1 5a       	subi	r28, 0xA1	; 161
     452:	de 4f       	sbci	r29, 0xFE	; 254
     454:	b9 82       	std	Y+1, r11	; 0x01
     456:	a8 82       	st	Y, r10
     458:	cf 55       	subi	r28, 0x5F	; 95
     45a:	d1 40       	sbci	r29, 0x01	; 1
     45c:	21 2c       	mov	r2, r1
     45e:	31 2c       	mov	r3, r1
     460:	41 2c       	mov	r4, r1
     462:	51 2c       	mov	r5, r1
     464:	32 01       	movw	r6, r4
     466:	cb 5a       	subi	r28, 0xAB	; 171
     468:	de 4f       	sbci	r29, 0xFE	; 254
     46a:	88 80       	ld	r8, Y
     46c:	99 80       	ldd	r9, Y+1	; 0x01
     46e:	aa 80       	ldd	r10, Y+2	; 0x02
     470:	bb 80       	ldd	r11, Y+3	; 0x03
     472:	c5 55       	subi	r28, 0x55	; 85
     474:	d1 40       	sbci	r29, 0x01	; 1
     476:	84 14       	cp	r8, r4
     478:	95 04       	cpc	r9, r5
     47a:	a6 04       	cpc	r10, r6
     47c:	b7 04       	cpc	r11, r7
     47e:	0c f4       	brge	.+2      	; 0x482 <__EEPROM_REGION_LENGTH__+0x82>
     480:	84 c0       	rjmp	.+264    	; 0x58a <__EEPROM_REGION_LENGTH__+0x18a>
     482:	cb 59       	subi	r28, 0x9B	; 155
     484:	de 4f       	sbci	r29, 0xFE	; 254
     486:	98 80       	ld	r9, Y
     488:	c5 56       	subi	r28, 0x65	; 101
     48a:	d1 40       	sbci	r29, 0x01	; 1
     48c:	cb 5b       	subi	r28, 0xBB	; 187
     48e:	de 4f       	sbci	r29, 0xFE	; 254
     490:	98 82       	st	Y, r9
     492:	c5 54       	subi	r28, 0x45	; 69
     494:	d1 40       	sbci	r29, 0x01	; 1
     496:	c7 59       	subi	r28, 0x97	; 151
     498:	de 4f       	sbci	r29, 0xFE	; 254
     49a:	a8 80       	ld	r10, Y
     49c:	c9 56       	subi	r28, 0x69	; 105
     49e:	d1 40       	sbci	r29, 0x01	; 1
     4a0:	ca 5b       	subi	r28, 0xBA	; 186
     4a2:	de 4f       	sbci	r29, 0xFE	; 254
     4a4:	a8 82       	st	Y, r10
     4a6:	c6 54       	subi	r28, 0x46	; 70
     4a8:	d1 40       	sbci	r29, 0x01	; 1
     4aa:	c1 5a       	subi	r28, 0xA1	; 161
     4ac:	de 4f       	sbci	r29, 0xFE	; 254
     4ae:	c8 80       	ld	r12, Y
     4b0:	d9 80       	ldd	r13, Y+1	; 0x01
     4b2:	cf 55       	subi	r28, 0x5F	; 95
     4b4:	d1 40       	sbci	r29, 0x01	; 1
     4b6:	c2 0c       	add	r12, r2
     4b8:	d3 1c       	adc	r13, r3
     4ba:	c9 59       	subi	r28, 0x99	; 153
     4bc:	de 4f       	sbci	r29, 0xFE	; 254
     4be:	d9 82       	std	Y+1, r13	; 0x01
     4c0:	c8 82       	st	Y, r12
     4c2:	c7 56       	subi	r28, 0x67	; 103
     4c4:	d1 40       	sbci	r29, 0x01	; 1
     4c6:	00 e0       	ldi	r16, 0x00	; 0
     4c8:	10 e0       	ldi	r17, 0x00	; 0
     4ca:	81 2c       	mov	r8, r1
     4cc:	91 2c       	mov	r9, r1
     4ce:	54 01       	movw	r10, r8
     4d0:	c1 2c       	mov	r12, r1
     4d2:	d1 2c       	mov	r13, r1
     4d4:	76 01       	movw	r14, r12
     4d6:	cf 5a       	subi	r28, 0xAF	; 175
     4d8:	de 4f       	sbci	r29, 0xFE	; 254
     4da:	28 81       	ld	r18, Y
     4dc:	39 81       	ldd	r19, Y+1	; 0x01
     4de:	4a 81       	ldd	r20, Y+2	; 0x02
     4e0:	5b 81       	ldd	r21, Y+3	; 0x03
     4e2:	c1 55       	subi	r28, 0x51	; 81
     4e4:	d1 40       	sbci	r29, 0x01	; 1
     4e6:	2c 15       	cp	r18, r12
     4e8:	3d 05       	cpc	r19, r13
     4ea:	4e 05       	cpc	r20, r14
     4ec:	5f 05       	cpc	r21, r15
     4ee:	a4 f1       	brlt	.+104    	; 0x558 <__EEPROM_REGION_LENGTH__+0x158>
     4f0:	c9 59       	subi	r28, 0x99	; 153
     4f2:	de 4f       	sbci	r29, 0xFE	; 254
     4f4:	e8 81       	ld	r30, Y
     4f6:	f9 81       	ldd	r31, Y+1	; 0x01
     4f8:	c7 56       	subi	r28, 0x67	; 103
     4fa:	d1 40       	sbci	r29, 0x01	; 1
     4fc:	e0 0f       	add	r30, r16
     4fe:	f1 1f       	adc	r31, r17
     500:	21 ea       	ldi	r18, 0xA1	; 161
     502:	30 e0       	ldi	r19, 0x00	; 0
     504:	2c 0f       	add	r18, r28
     506:	3d 1f       	adc	r19, r29
     508:	e2 0f       	add	r30, r18
     50a:	f3 1f       	adc	r31, r19
     50c:	cb 5b       	subi	r28, 0xBB	; 187
     50e:	de 4f       	sbci	r29, 0xFE	; 254
     510:	a8 81       	ld	r26, Y
     512:	b9 81       	ldd	r27, Y+1	; 0x01
     514:	c5 54       	subi	r28, 0x45	; 69
     516:	d1 40       	sbci	r29, 0x01	; 1
     518:	2d 91       	ld	r18, X+
     51a:	3d 91       	ld	r19, X+
     51c:	4d 91       	ld	r20, X+
     51e:	5d 91       	ld	r21, X+
     520:	cb 5b       	subi	r28, 0xBB	; 187
     522:	de 4f       	sbci	r29, 0xFE	; 254
     524:	b9 83       	std	Y+1, r27	; 0x01
     526:	a8 83       	st	Y, r26
     528:	c5 54       	subi	r28, 0x45	; 69
     52a:	d1 40       	sbci	r29, 0x01	; 1
     52c:	60 81       	ld	r22, Z
     52e:	71 81       	ldd	r23, Z+1	; 0x01
     530:	82 81       	ldd	r24, Z+2	; 0x02
     532:	93 81       	ldd	r25, Z+3	; 0x03
     534:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
     538:	9b 01       	movw	r18, r22
     53a:	ac 01       	movw	r20, r24
     53c:	c5 01       	movw	r24, r10
     53e:	b4 01       	movw	r22, r8
     540:	0e 94 f0 2d 	call	0x5be0	; 0x5be0 <__addsf3>
     544:	4b 01       	movw	r8, r22
     546:	5c 01       	movw	r10, r24
     548:	bf ef       	ldi	r27, 0xFF	; 255
     54a:	cb 1a       	sub	r12, r27
     54c:	db 0a       	sbc	r13, r27
     54e:	eb 0a       	sbc	r14, r27
     550:	fb 0a       	sbc	r15, r27
     552:	04 50       	subi	r16, 0x04	; 4
     554:	11 09       	sbc	r17, r1
     556:	bf cf       	rjmp	.-130    	; 0x4d6 <__EEPROM_REGION_LENGTH__+0xd6>
     558:	c3 5b       	subi	r28, 0xB3	; 179
     55a:	de 4f       	sbci	r29, 0xFE	; 254
     55c:	a8 81       	ld	r26, Y
     55e:	b9 81       	ldd	r27, Y+1	; 0x01
     560:	cd 54       	subi	r28, 0x4D	; 77
     562:	d1 40       	sbci	r29, 0x01	; 1
     564:	8d 92       	st	X+, r8
     566:	9d 92       	st	X+, r9
     568:	ad 92       	st	X+, r10
     56a:	bd 92       	st	X+, r11
     56c:	c3 5b       	subi	r28, 0xB3	; 179
     56e:	de 4f       	sbci	r29, 0xFE	; 254
     570:	b9 83       	std	Y+1, r27	; 0x01
     572:	a8 83       	st	Y, r26
     574:	cd 54       	subi	r28, 0x4D	; 77
     576:	d1 40       	sbci	r29, 0x01	; 1
     578:	bf ef       	ldi	r27, 0xFF	; 255
     57a:	4b 1a       	sub	r4, r27
     57c:	5b 0a       	sbc	r5, r27
     57e:	6b 0a       	sbc	r6, r27
     580:	7b 0a       	sbc	r7, r27
     582:	e4 e0       	ldi	r30, 0x04	; 4
     584:	2e 0e       	add	r2, r30
     586:	31 1c       	adc	r3, r1
     588:	6e cf       	rjmp	.-292    	; 0x466 <__EEPROM_REGION_LENGTH__+0x66>
     58a:	cb 5a       	subi	r28, 0xAB	; 171
     58c:	de 4f       	sbci	r29, 0xFE	; 254
     58e:	88 81       	ld	r24, Y
     590:	99 81       	ldd	r25, Y+1	; 0x01
     592:	aa 81       	ldd	r26, Y+2	; 0x02
     594:	bb 81       	ldd	r27, Y+3	; 0x03
     596:	c5 55       	subi	r28, 0x55	; 85
     598:	d1 40       	sbci	r29, 0x01	; 1
     59a:	01 97       	sbiw	r24, 0x01	; 1
     59c:	a1 09       	sbc	r26, r1
     59e:	b1 09       	sbc	r27, r1
     5a0:	7c 01       	movw	r14, r24
     5a2:	ee 0c       	add	r14, r14
     5a4:	ff 1c       	adc	r15, r15
     5a6:	ee 0c       	add	r14, r14
     5a8:	ff 1c       	adc	r15, r15
     5aa:	c4 59       	subi	r28, 0x94	; 148
     5ac:	de 4f       	sbci	r29, 0xFE	; 254
     5ae:	f9 82       	std	Y+1, r15	; 0x01
     5b0:	e8 82       	st	Y, r14
     5b2:	cc 56       	subi	r28, 0x6C	; 108
     5b4:	d1 40       	sbci	r29, 0x01	; 1
     5b6:	cb 5a       	subi	r28, 0xAB	; 171
     5b8:	de 4f       	sbci	r29, 0xFE	; 254
     5ba:	48 80       	ld	r4, Y
     5bc:	59 80       	ldd	r5, Y+1	; 0x01
     5be:	6a 80       	ldd	r6, Y+2	; 0x02
     5c0:	7b 80       	ldd	r7, Y+3	; 0x03
     5c2:	c5 55       	subi	r28, 0x55	; 85
     5c4:	d1 40       	sbci	r29, 0x01	; 1
     5c6:	c7 5b       	subi	r28, 0xB7	; 183
     5c8:	de 4f       	sbci	r29, 0xFE	; 254
     5ca:	88 81       	ld	r24, Y
     5cc:	99 81       	ldd	r25, Y+1	; 0x01
     5ce:	c9 54       	subi	r28, 0x49	; 73
     5d0:	d1 40       	sbci	r29, 0x01	; 1
     5d2:	01 97       	sbiw	r24, 0x01	; 1
     5d4:	4c 01       	movw	r8, r24
     5d6:	99 0f       	add	r25, r25
     5d8:	aa 08       	sbc	r10, r10
     5da:	bb 08       	sbc	r11, r11
     5dc:	c2 59       	subi	r28, 0x92	; 146
     5de:	de 4f       	sbci	r29, 0xFE	; 254
     5e0:	88 82       	st	Y, r8
     5e2:	99 82       	std	Y+1, r9	; 0x01
     5e4:	aa 82       	std	Y+2, r10	; 0x02
     5e6:	bb 82       	std	Y+3, r11	; 0x03
     5e8:	ce 56       	subi	r28, 0x6E	; 110
     5ea:	d1 40       	sbci	r29, 0x01	; 1
     5ec:	52 01       	movw	r10, r4
     5ee:	aa 0c       	add	r10, r10
     5f0:	bb 1c       	adc	r11, r11
     5f2:	aa 0c       	add	r10, r10
     5f4:	bb 1c       	adc	r11, r11
     5f6:	c3 5b       	subi	r28, 0xB3	; 179
     5f8:	de 4f       	sbci	r29, 0xFE	; 254
     5fa:	b9 82       	std	Y+1, r11	; 0x01
     5fc:	a8 82       	st	Y, r10
     5fe:	cd 54       	subi	r28, 0x4D	; 77
     600:	d1 40       	sbci	r29, 0x01	; 1
     602:	e1 e0       	ldi	r30, 0x01	; 1
     604:	f0 e0       	ldi	r31, 0x00	; 0
     606:	ec 0f       	add	r30, r28
     608:	fd 1f       	adc	r31, r29
     60a:	ea 0d       	add	r30, r10
     60c:	fb 1d       	adc	r31, r11
     60e:	c0 80       	ld	r12, Z
     610:	d1 80       	ldd	r13, Z+1	; 0x01
     612:	e2 80       	ldd	r14, Z+2	; 0x02
     614:	f3 80       	ldd	r15, Z+3	; 0x03
     616:	1e 01       	movw	r2, r28
     618:	01 ef       	ldi	r16, 0xF1	; 241
     61a:	20 0e       	add	r2, r16
     61c:	31 1c       	adc	r3, r1
     61e:	d3 01       	movw	r26, r6
     620:	c2 01       	movw	r24, r4
     622:	01 97       	sbiw	r24, 0x01	; 1
     624:	a1 09       	sbc	r26, r1
     626:	b1 09       	sbc	r27, r1
     628:	4c 01       	movw	r8, r24
     62a:	88 0c       	add	r8, r8
     62c:	99 1c       	adc	r9, r9
     62e:	88 0c       	add	r8, r8
     630:	99 1c       	adc	r9, r9
     632:	c1 5a       	subi	r28, 0xA1	; 161
     634:	de 4f       	sbci	r29, 0xFE	; 254
     636:	99 82       	std	Y+1, r9	; 0x01
     638:	88 82       	st	Y, r8
     63a:	cf 55       	subi	r28, 0x5F	; 95
     63c:	d1 40       	sbci	r29, 0x01	; 1
     63e:	cb 5b       	subi	r28, 0xBB	; 187
     640:	de 4f       	sbci	r29, 0xFE	; 254
     642:	39 82       	std	Y+1, r3	; 0x01
     644:	28 82       	st	Y, r2
     646:	c5 54       	subi	r28, 0x45	; 69
     648:	d1 40       	sbci	r29, 0x01	; 1
     64a:	53 01       	movw	r10, r6
     64c:	42 01       	movw	r8, r4
     64e:	00 e0       	ldi	r16, 0x00	; 0
     650:	10 e0       	ldi	r17, 0x00	; 0
     652:	18 14       	cp	r1, r8
     654:	19 04       	cpc	r1, r9
     656:	1a 04       	cpc	r1, r10
     658:	1b 04       	cpc	r1, r11
     65a:	0c f0       	brlt	.+2      	; 0x65e <__EEPROM_REGION_LENGTH__+0x25e>
     65c:	59 c0       	rjmp	.+178    	; 0x710 <__EEPROM_REGION_LENGTH__+0x310>
     65e:	20 e0       	ldi	r18, 0x00	; 0
     660:	30 e0       	ldi	r19, 0x00	; 0
     662:	40 e8       	ldi	r20, 0x80	; 128
     664:	53 e3       	ldi	r21, 0x33	; 51
     666:	c7 01       	movw	r24, r14
     668:	b6 01       	movw	r22, r12
     66a:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
     66e:	0e 94 f6 2d 	call	0x5bec	; 0x5bec <__fixsfsi>
     672:	0e 94 7c 29 	call	0x52f8	; 0x52f8 <__floatsisf>
     676:	c7 5b       	subi	r28, 0xB7	; 183
     678:	de 4f       	sbci	r29, 0xFE	; 254
     67a:	68 83       	st	Y, r22
     67c:	79 83       	std	Y+1, r23	; 0x01
     67e:	8a 83       	std	Y+2, r24	; 0x02
     680:	9b 83       	std	Y+3, r25	; 0x03
     682:	c9 54       	subi	r28, 0x49	; 73
     684:	d1 40       	sbci	r29, 0x01	; 1
     686:	20 e0       	ldi	r18, 0x00	; 0
     688:	30 e0       	ldi	r19, 0x00	; 0
     68a:	40 e8       	ldi	r20, 0x80	; 128
     68c:	5b e4       	ldi	r21, 0x4B	; 75
     68e:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
     692:	9b 01       	movw	r18, r22
     694:	ac 01       	movw	r20, r24
     696:	c7 01       	movw	r24, r14
     698:	b6 01       	movw	r22, r12
     69a:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__subsf3>
     69e:	0e 94 f6 2d 	call	0x5bec	; 0x5bec <__fixsfsi>
     6a2:	cb 5b       	subi	r28, 0xBB	; 187
     6a4:	de 4f       	sbci	r29, 0xFE	; 254
     6a6:	a8 81       	ld	r26, Y
     6a8:	b9 81       	ldd	r27, Y+1	; 0x01
     6aa:	c5 54       	subi	r28, 0x45	; 69
     6ac:	d1 40       	sbci	r29, 0x01	; 1
     6ae:	6d 93       	st	X+, r22
     6b0:	7d 93       	st	X+, r23
     6b2:	8d 93       	st	X+, r24
     6b4:	9d 93       	st	X+, r25
     6b6:	cb 5b       	subi	r28, 0xBB	; 187
     6b8:	de 4f       	sbci	r29, 0xFE	; 254
     6ba:	b9 83       	std	Y+1, r27	; 0x01
     6bc:	a8 83       	st	Y, r26
     6be:	c5 54       	subi	r28, 0x45	; 69
     6c0:	d1 40       	sbci	r29, 0x01	; 1
     6c2:	b1 e0       	ldi	r27, 0x01	; 1
     6c4:	8b 1a       	sub	r8, r27
     6c6:	91 08       	sbc	r9, r1
     6c8:	a1 08       	sbc	r10, r1
     6ca:	b1 08       	sbc	r11, r1
     6cc:	c1 5a       	subi	r28, 0xA1	; 161
     6ce:	de 4f       	sbci	r29, 0xFE	; 254
     6d0:	e8 81       	ld	r30, Y
     6d2:	f9 81       	ldd	r31, Y+1	; 0x01
     6d4:	cf 55       	subi	r28, 0x5F	; 95
     6d6:	d1 40       	sbci	r29, 0x01	; 1
     6d8:	e0 0f       	add	r30, r16
     6da:	f1 1f       	adc	r31, r17
     6dc:	cc 24       	eor	r12, r12
     6de:	c3 94       	inc	r12
     6e0:	d1 2c       	mov	r13, r1
     6e2:	cc 0e       	add	r12, r28
     6e4:	dd 1e       	adc	r13, r29
     6e6:	ec 0d       	add	r30, r12
     6e8:	fd 1d       	adc	r31, r13
     6ea:	20 81       	ld	r18, Z
     6ec:	31 81       	ldd	r19, Z+1	; 0x01
     6ee:	42 81       	ldd	r20, Z+2	; 0x02
     6f0:	53 81       	ldd	r21, Z+3	; 0x03
     6f2:	c7 5b       	subi	r28, 0xB7	; 183
     6f4:	de 4f       	sbci	r29, 0xFE	; 254
     6f6:	68 81       	ld	r22, Y
     6f8:	79 81       	ldd	r23, Y+1	; 0x01
     6fa:	8a 81       	ldd	r24, Y+2	; 0x02
     6fc:	9b 81       	ldd	r25, Y+3	; 0x03
     6fe:	c9 54       	subi	r28, 0x49	; 73
     700:	d1 40       	sbci	r29, 0x01	; 1
     702:	0e 94 f0 2d 	call	0x5be0	; 0x5be0 <__addsf3>
     706:	6b 01       	movw	r12, r22
     708:	7c 01       	movw	r14, r24
     70a:	04 50       	subi	r16, 0x04	; 4
     70c:	11 09       	sbc	r17, r1
     70e:	a1 cf       	rjmp	.-190    	; 0x652 <__EEPROM_REGION_LENGTH__+0x252>
     710:	cf 5b       	subi	r28, 0xBF	; 191
     712:	de 4f       	sbci	r29, 0xFE	; 254
     714:	08 81       	ld	r16, Y
     716:	19 81       	ldd	r17, Y+1	; 0x01
     718:	c1 54       	subi	r28, 0x41	; 65
     71a:	d1 40       	sbci	r29, 0x01	; 1
     71c:	a8 01       	movw	r20, r16
     71e:	c7 01       	movw	r24, r14
     720:	b6 01       	movw	r22, r12
     722:	0e 94 13 28 	call	0x5026	; 0x5026 <scalbnf>
     726:	6b 01       	movw	r12, r22
     728:	7c 01       	movw	r14, r24
     72a:	20 e0       	ldi	r18, 0x00	; 0
     72c:	30 e0       	ldi	r19, 0x00	; 0
     72e:	40 e0       	ldi	r20, 0x00	; 0
     730:	5e e3       	ldi	r21, 0x3E	; 62
     732:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
     736:	0e 94 00 23 	call	0x4600	; 0x4600 <floorf>
     73a:	20 e0       	ldi	r18, 0x00	; 0
     73c:	30 e0       	ldi	r19, 0x00	; 0
     73e:	40 e0       	ldi	r20, 0x00	; 0
     740:	51 e4       	ldi	r21, 0x41	; 65
     742:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
     746:	9b 01       	movw	r18, r22
     748:	ac 01       	movw	r20, r24
     74a:	c7 01       	movw	r24, r14
     74c:	b6 01       	movw	r22, r12
     74e:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__subsf3>
     752:	6b 01       	movw	r12, r22
     754:	7c 01       	movw	r14, r24
     756:	0e 94 f6 2d 	call	0x5bec	; 0x5bec <__fixsfsi>
     75a:	c7 5b       	subi	r28, 0xB7	; 183
     75c:	de 4f       	sbci	r29, 0xFE	; 254
     75e:	68 83       	st	Y, r22
     760:	79 83       	std	Y+1, r23	; 0x01
     762:	8a 83       	std	Y+2, r24	; 0x02
     764:	9b 83       	std	Y+3, r25	; 0x03
     766:	c9 54       	subi	r28, 0x49	; 73
     768:	d1 40       	sbci	r29, 0x01	; 1
     76a:	0e 94 7c 29 	call	0x52f8	; 0x52f8 <__floatsisf>
     76e:	9b 01       	movw	r18, r22
     770:	ac 01       	movw	r20, r24
     772:	c7 01       	movw	r24, r14
     774:	b6 01       	movw	r22, r12
     776:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__subsf3>
     77a:	6b 01       	movw	r12, r22
     77c:	7c 01       	movw	r14, r24
     77e:	cf 5b       	subi	r28, 0xBF	; 191
     780:	de 4f       	sbci	r29, 0xFE	; 254
     782:	88 80       	ld	r8, Y
     784:	99 80       	ldd	r9, Y+1	; 0x01
     786:	aa 80       	ldd	r10, Y+2	; 0x02
     788:	bb 80       	ldd	r11, Y+3	; 0x03
     78a:	c1 54       	subi	r28, 0x41	; 65
     78c:	d1 40       	sbci	r29, 0x01	; 1
     78e:	18 14       	cp	r1, r8
     790:	19 04       	cpc	r1, r9
     792:	1a 04       	cpc	r1, r10
     794:	1b 04       	cpc	r1, r11
     796:	0c f0       	brlt	.+2      	; 0x79a <__EEPROM_REGION_LENGTH__+0x39a>
     798:	5a c0       	rjmp	.+180    	; 0x84e <__DATA_REGION_LENGTH__+0x4e>
     79a:	d3 01       	movw	r26, r6
     79c:	c2 01       	movw	r24, r4
     79e:	01 97       	sbiw	r24, 0x01	; 1
     7a0:	a1 09       	sbc	r26, r1
     7a2:	b1 09       	sbc	r27, r1
     7a4:	fc 01       	movw	r30, r24
     7a6:	ee 0f       	add	r30, r30
     7a8:	ff 1f       	adc	r31, r31
     7aa:	ee 0f       	add	r30, r30
     7ac:	ff 1f       	adc	r31, r31
     7ae:	71 ef       	ldi	r23, 0xF1	; 241
     7b0:	a7 2e       	mov	r10, r23
     7b2:	b1 2c       	mov	r11, r1
     7b4:	ac 0e       	add	r10, r28
     7b6:	bd 1e       	adc	r11, r29
     7b8:	ea 0d       	add	r30, r10
     7ba:	fb 1d       	adc	r31, r11
     7bc:	80 81       	ld	r24, Z
     7be:	91 81       	ldd	r25, Z+1	; 0x01
     7c0:	a2 81       	ldd	r26, Z+2	; 0x02
     7c2:	b3 81       	ldd	r27, Z+3	; 0x03
     7c4:	28 e1       	ldi	r18, 0x18	; 24
     7c6:	30 e0       	ldi	r19, 0x00	; 0
     7c8:	28 19       	sub	r18, r8
     7ca:	39 09       	sbc	r19, r9
     7cc:	ac 01       	movw	r20, r24
     7ce:	bd 01       	movw	r22, r26
     7d0:	02 2e       	mov	r0, r18
     7d2:	04 c0       	rjmp	.+8      	; 0x7dc <__EEPROM_REGION_LENGTH__+0x3dc>
     7d4:	75 95       	asr	r23
     7d6:	67 95       	ror	r22
     7d8:	57 95       	ror	r21
     7da:	47 95       	ror	r20
     7dc:	0a 94       	dec	r0
     7de:	d2 f7       	brpl	.-12     	; 0x7d4 <__EEPROM_REGION_LENGTH__+0x3d4>
     7e0:	c7 5b       	subi	r28, 0xB7	; 183
     7e2:	de 4f       	sbci	r29, 0xFE	; 254
     7e4:	88 80       	ld	r8, Y
     7e6:	99 80       	ldd	r9, Y+1	; 0x01
     7e8:	aa 80       	ldd	r10, Y+2	; 0x02
     7ea:	bb 80       	ldd	r11, Y+3	; 0x03
     7ec:	c9 54       	subi	r28, 0x49	; 73
     7ee:	d1 40       	sbci	r29, 0x01	; 1
     7f0:	84 0e       	add	r8, r20
     7f2:	95 1e       	adc	r9, r21
     7f4:	a6 1e       	adc	r10, r22
     7f6:	b7 1e       	adc	r11, r23
     7f8:	c7 5b       	subi	r28, 0xB7	; 183
     7fa:	de 4f       	sbci	r29, 0xFE	; 254
     7fc:	88 82       	st	Y, r8
     7fe:	99 82       	std	Y+1, r9	; 0x01
     800:	aa 82       	std	Y+2, r10	; 0x02
     802:	bb 82       	std	Y+3, r11	; 0x03
     804:	c9 54       	subi	r28, 0x49	; 73
     806:	d1 40       	sbci	r29, 0x01	; 1
     808:	04 c0       	rjmp	.+8      	; 0x812 <__DATA_REGION_LENGTH__+0x12>
     80a:	44 0f       	add	r20, r20
     80c:	55 1f       	adc	r21, r21
     80e:	66 1f       	adc	r22, r22
     810:	77 1f       	adc	r23, r23
     812:	2a 95       	dec	r18
     814:	d2 f7       	brpl	.-12     	; 0x80a <__DATA_REGION_LENGTH__+0xa>
     816:	84 1b       	sub	r24, r20
     818:	95 0b       	sbc	r25, r21
     81a:	a6 0b       	sbc	r26, r22
     81c:	b7 0b       	sbc	r27, r23
     81e:	80 83       	st	Z, r24
     820:	91 83       	std	Z+1, r25	; 0x01
     822:	a2 83       	std	Z+2, r26	; 0x02
     824:	b3 83       	std	Z+3, r27	; 0x03
     826:	27 e1       	ldi	r18, 0x17	; 23
     828:	30 e0       	ldi	r19, 0x00	; 0
     82a:	cf 5b       	subi	r28, 0xBF	; 191
     82c:	de 4f       	sbci	r29, 0xFE	; 254
     82e:	a8 80       	ld	r10, Y
     830:	b9 80       	ldd	r11, Y+1	; 0x01
     832:	c1 54       	subi	r28, 0x41	; 65
     834:	d1 40       	sbci	r29, 0x01	; 1
     836:	2a 19       	sub	r18, r10
     838:	3b 09       	sbc	r19, r11
     83a:	4c 01       	movw	r8, r24
     83c:	5d 01       	movw	r10, r26
     83e:	04 c0       	rjmp	.+8      	; 0x848 <__DATA_REGION_LENGTH__+0x48>
     840:	b5 94       	asr	r11
     842:	a7 94       	ror	r10
     844:	97 94       	ror	r9
     846:	87 94       	ror	r8
     848:	2a 95       	dec	r18
     84a:	d2 f7       	brpl	.-12     	; 0x840 <__DATA_REGION_LENGTH__+0x40>
     84c:	28 c0       	rjmp	.+80     	; 0x89e <__stack+0x3f>
     84e:	cf 5b       	subi	r28, 0xBF	; 191
     850:	de 4f       	sbci	r29, 0xFE	; 254
     852:	88 80       	ld	r8, Y
     854:	99 80       	ldd	r9, Y+1	; 0x01
     856:	aa 80       	ldd	r10, Y+2	; 0x02
     858:	bb 80       	ldd	r11, Y+3	; 0x03
     85a:	c1 54       	subi	r28, 0x41	; 65
     85c:	d1 40       	sbci	r29, 0x01	; 1
     85e:	89 28       	or	r8, r9
     860:	8a 28       	or	r8, r10
     862:	8b 28       	or	r8, r11
     864:	91 f5       	brne	.+100    	; 0x8ca <__stack+0x6b>
     866:	d3 01       	movw	r26, r6
     868:	c2 01       	movw	r24, r4
     86a:	01 97       	sbiw	r24, 0x01	; 1
     86c:	a1 09       	sbc	r26, r1
     86e:	b1 09       	sbc	r27, r1
     870:	88 0f       	add	r24, r24
     872:	99 1f       	adc	r25, r25
     874:	88 0f       	add	r24, r24
     876:	99 1f       	adc	r25, r25
     878:	e1 ef       	ldi	r30, 0xF1	; 241
     87a:	f0 e0       	ldi	r31, 0x00	; 0
     87c:	ec 0f       	add	r30, r28
     87e:	fd 1f       	adc	r31, r29
     880:	e8 0f       	add	r30, r24
     882:	f9 1f       	adc	r31, r25
     884:	80 81       	ld	r24, Z
     886:	91 81       	ldd	r25, Z+1	; 0x01
     888:	a2 81       	ldd	r26, Z+2	; 0x02
     88a:	b3 81       	ldd	r27, Z+3	; 0x03
     88c:	4c 01       	movw	r8, r24
     88e:	5d 01       	movw	r10, r26
     890:	57 e1       	ldi	r21, 0x17	; 23
     892:	b5 94       	asr	r11
     894:	a7 94       	ror	r10
     896:	97 94       	ror	r9
     898:	87 94       	ror	r8
     89a:	5a 95       	dec	r21
     89c:	d1 f7       	brne	.-12     	; 0x892 <__stack+0x33>
     89e:	cb 5b       	subi	r28, 0xBB	; 187
     8a0:	de 4f       	sbci	r29, 0xFE	; 254
     8a2:	88 82       	st	Y, r8
     8a4:	99 82       	std	Y+1, r9	; 0x01
     8a6:	aa 82       	std	Y+2, r10	; 0x02
     8a8:	bb 82       	std	Y+3, r11	; 0x03
     8aa:	c5 54       	subi	r28, 0x45	; 69
     8ac:	d1 40       	sbci	r29, 0x01	; 1
     8ae:	cb 5b       	subi	r28, 0xBB	; 187
     8b0:	de 4f       	sbci	r29, 0xFE	; 254
     8b2:	88 80       	ld	r8, Y
     8b4:	99 80       	ldd	r9, Y+1	; 0x01
     8b6:	aa 80       	ldd	r10, Y+2	; 0x02
     8b8:	bb 80       	ldd	r11, Y+3	; 0x03
     8ba:	c5 54       	subi	r28, 0x45	; 69
     8bc:	d1 40       	sbci	r29, 0x01	; 1
     8be:	18 14       	cp	r1, r8
     8c0:	19 04       	cpc	r1, r9
     8c2:	1a 04       	cpc	r1, r10
     8c4:	1b 04       	cpc	r1, r11
     8c6:	fc f0       	brlt	.+62     	; 0x906 <__stack+0xa7>
     8c8:	e2 c0       	rjmp	.+452    	; 0xa8e <__stack+0x22f>
     8ca:	20 e0       	ldi	r18, 0x00	; 0
     8cc:	30 e0       	ldi	r19, 0x00	; 0
     8ce:	40 e0       	ldi	r20, 0x00	; 0
     8d0:	5f e3       	ldi	r21, 0x3F	; 63
     8d2:	0e 94 30 2e 	call	0x5c60	; 0x5c60 <__gesf2>
     8d6:	87 ff       	sbrs	r24, 7
     8d8:	09 c0       	rjmp	.+18     	; 0x8ec <__stack+0x8d>
     8da:	cb 5b       	subi	r28, 0xBB	; 187
     8dc:	de 4f       	sbci	r29, 0xFE	; 254
     8de:	18 82       	st	Y, r1
     8e0:	19 82       	std	Y+1, r1	; 0x01
     8e2:	1a 82       	std	Y+2, r1	; 0x02
     8e4:	1b 82       	std	Y+3, r1	; 0x03
     8e6:	c5 54       	subi	r28, 0x45	; 69
     8e8:	d1 40       	sbci	r29, 0x01	; 1
     8ea:	d1 c0       	rjmp	.+418    	; 0xa8e <__stack+0x22f>
     8ec:	32 e0       	ldi	r19, 0x02	; 2
     8ee:	83 2e       	mov	r8, r19
     8f0:	91 2c       	mov	r9, r1
     8f2:	a1 2c       	mov	r10, r1
     8f4:	b1 2c       	mov	r11, r1
     8f6:	cb 5b       	subi	r28, 0xBB	; 187
     8f8:	de 4f       	sbci	r29, 0xFE	; 254
     8fa:	88 82       	st	Y, r8
     8fc:	99 82       	std	Y+1, r9	; 0x01
     8fe:	aa 82       	std	Y+2, r10	; 0x02
     900:	bb 82       	std	Y+3, r11	; 0x03
     902:	c5 54       	subi	r28, 0x45	; 69
     904:	d1 40       	sbci	r29, 0x01	; 1
     906:	c7 5b       	subi	r28, 0xB7	; 183
     908:	de 4f       	sbci	r29, 0xFE	; 254
     90a:	28 81       	ld	r18, Y
     90c:	39 81       	ldd	r19, Y+1	; 0x01
     90e:	4a 81       	ldd	r20, Y+2	; 0x02
     910:	5b 81       	ldd	r21, Y+3	; 0x03
     912:	c9 54       	subi	r28, 0x49	; 73
     914:	d1 40       	sbci	r29, 0x01	; 1
     916:	2f 5f       	subi	r18, 0xFF	; 255
     918:	3f 4f       	sbci	r19, 0xFF	; 255
     91a:	4f 4f       	sbci	r20, 0xFF	; 255
     91c:	5f 4f       	sbci	r21, 0xFF	; 255
     91e:	c7 5b       	subi	r28, 0xB7	; 183
     920:	de 4f       	sbci	r29, 0xFE	; 254
     922:	28 83       	st	Y, r18
     924:	39 83       	std	Y+1, r19	; 0x01
     926:	4a 83       	std	Y+2, r20	; 0x02
     928:	5b 83       	std	Y+3, r21	; 0x03
     92a:	c9 54       	subi	r28, 0x49	; 73
     92c:	d1 40       	sbci	r29, 0x01	; 1
     92e:	80 e0       	ldi	r24, 0x00	; 0
     930:	90 e0       	ldi	r25, 0x00	; 0
     932:	dc 01       	movw	r26, r24
     934:	81 2c       	mov	r8, r1
     936:	91 2c       	mov	r9, r1
     938:	54 01       	movw	r10, r8
     93a:	84 15       	cp	r24, r4
     93c:	95 05       	cpc	r25, r5
     93e:	a6 05       	cpc	r26, r6
     940:	b7 05       	cpc	r27, r7
     942:	ac f5       	brge	.+106    	; 0x9ae <__stack+0x14f>
     944:	f1 01       	movw	r30, r2
     946:	40 81       	ld	r20, Z
     948:	51 81       	ldd	r21, Z+1	; 0x01
     94a:	62 81       	ldd	r22, Z+2	; 0x02
     94c:	73 81       	ldd	r23, Z+3	; 0x03
     94e:	81 14       	cp	r8, r1
     950:	91 04       	cpc	r9, r1
     952:	a1 04       	cpc	r10, r1
     954:	b1 04       	cpc	r11, r1
     956:	81 f4       	brne	.+32     	; 0x978 <__stack+0x119>
     958:	41 15       	cp	r20, r1
     95a:	51 05       	cpc	r21, r1
     95c:	61 05       	cpc	r22, r1
     95e:	71 05       	cpc	r23, r1
     960:	f9 f0       	breq	.+62     	; 0x9a0 <__stack+0x141>
     962:	81 2c       	mov	r8, r1
     964:	91 2c       	mov	r9, r1
     966:	54 01       	movw	r10, r8
     968:	b3 94       	inc	r11
     96a:	84 1a       	sub	r8, r20
     96c:	95 0a       	sbc	r9, r21
     96e:	a6 0a       	sbc	r10, r22
     970:	b7 0a       	sbc	r11, r23
     972:	b5 01       	movw	r22, r10
     974:	a4 01       	movw	r20, r8
     976:	0c c0       	rjmp	.+24     	; 0x990 <__stack+0x131>
     978:	88 24       	eor	r8, r8
     97a:	8a 94       	dec	r8
     97c:	98 2c       	mov	r9, r8
     97e:	a8 2c       	mov	r10, r8
     980:	b1 2c       	mov	r11, r1
     982:	84 1a       	sub	r8, r20
     984:	95 0a       	sbc	r9, r21
     986:	a6 0a       	sbc	r10, r22
     988:	b7 0a       	sbc	r11, r23
     98a:	b5 01       	movw	r22, r10
     98c:	a4 01       	movw	r20, r8
     98e:	f1 01       	movw	r30, r2
     990:	40 83       	st	Z, r20
     992:	51 83       	std	Z+1, r21	; 0x01
     994:	62 83       	std	Z+2, r22	; 0x02
     996:	73 83       	std	Z+3, r23	; 0x03
     998:	81 2c       	mov	r8, r1
     99a:	91 2c       	mov	r9, r1
     99c:	54 01       	movw	r10, r8
     99e:	83 94       	inc	r8
     9a0:	01 96       	adiw	r24, 0x01	; 1
     9a2:	a1 1d       	adc	r26, r1
     9a4:	b1 1d       	adc	r27, r1
     9a6:	f4 e0       	ldi	r31, 0x04	; 4
     9a8:	2f 0e       	add	r2, r31
     9aa:	31 1c       	adc	r3, r1
     9ac:	c6 cf       	rjmp	.-116    	; 0x93a <__stack+0xdb>
     9ae:	cf 5b       	subi	r28, 0xBF	; 191
     9b0:	de 4f       	sbci	r29, 0xFE	; 254
     9b2:	28 81       	ld	r18, Y
     9b4:	39 81       	ldd	r19, Y+1	; 0x01
     9b6:	4a 81       	ldd	r20, Y+2	; 0x02
     9b8:	5b 81       	ldd	r21, Y+3	; 0x03
     9ba:	c1 54       	subi	r28, 0x41	; 65
     9bc:	d1 40       	sbci	r29, 0x01	; 1
     9be:	12 16       	cp	r1, r18
     9c0:	13 06       	cpc	r1, r19
     9c2:	14 06       	cpc	r1, r20
     9c4:	15 06       	cpc	r1, r21
     9c6:	cc f5       	brge	.+114    	; 0xa3a <__stack+0x1db>
     9c8:	21 30       	cpi	r18, 0x01	; 1
     9ca:	31 05       	cpc	r19, r1
     9cc:	41 05       	cpc	r20, r1
     9ce:	51 05       	cpc	r21, r1
     9d0:	d9 f0       	breq	.+54     	; 0xa08 <__stack+0x1a9>
     9d2:	22 30       	cpi	r18, 0x02	; 2
     9d4:	31 05       	cpc	r19, r1
     9d6:	41 05       	cpc	r20, r1
     9d8:	51 05       	cpc	r21, r1
     9da:	79 f5       	brne	.+94     	; 0xa3a <__stack+0x1db>
     9dc:	d3 01       	movw	r26, r6
     9de:	c2 01       	movw	r24, r4
     9e0:	01 97       	sbiw	r24, 0x01	; 1
     9e2:	a1 09       	sbc	r26, r1
     9e4:	b1 09       	sbc	r27, r1
     9e6:	88 0f       	add	r24, r24
     9e8:	99 1f       	adc	r25, r25
     9ea:	88 0f       	add	r24, r24
     9ec:	99 1f       	adc	r25, r25
     9ee:	e1 ef       	ldi	r30, 0xF1	; 241
     9f0:	f0 e0       	ldi	r31, 0x00	; 0
     9f2:	ec 0f       	add	r30, r28
     9f4:	fd 1f       	adc	r31, r29
     9f6:	e8 0f       	add	r30, r24
     9f8:	f9 1f       	adc	r31, r25
     9fa:	40 81       	ld	r20, Z
     9fc:	51 81       	ldd	r21, Z+1	; 0x01
     9fe:	62 81       	ldd	r22, Z+2	; 0x02
     a00:	73 81       	ldd	r23, Z+3	; 0x03
     a02:	6f 73       	andi	r22, 0x3F	; 63
     a04:	77 27       	eor	r23, r23
     a06:	15 c0       	rjmp	.+42     	; 0xa32 <__stack+0x1d3>
     a08:	d3 01       	movw	r26, r6
     a0a:	c2 01       	movw	r24, r4
     a0c:	01 97       	sbiw	r24, 0x01	; 1
     a0e:	a1 09       	sbc	r26, r1
     a10:	b1 09       	sbc	r27, r1
     a12:	88 0f       	add	r24, r24
     a14:	99 1f       	adc	r25, r25
     a16:	88 0f       	add	r24, r24
     a18:	99 1f       	adc	r25, r25
     a1a:	e1 ef       	ldi	r30, 0xF1	; 241
     a1c:	f0 e0       	ldi	r31, 0x00	; 0
     a1e:	ec 0f       	add	r30, r28
     a20:	fd 1f       	adc	r31, r29
     a22:	e8 0f       	add	r30, r24
     a24:	f9 1f       	adc	r31, r25
     a26:	40 81       	ld	r20, Z
     a28:	51 81       	ldd	r21, Z+1	; 0x01
     a2a:	62 81       	ldd	r22, Z+2	; 0x02
     a2c:	73 81       	ldd	r23, Z+3	; 0x03
     a2e:	6f 77       	andi	r22, 0x7F	; 127
     a30:	77 27       	eor	r23, r23
     a32:	40 83       	st	Z, r20
     a34:	51 83       	std	Z+1, r21	; 0x01
     a36:	62 83       	std	Z+2, r22	; 0x02
     a38:	73 83       	std	Z+3, r23	; 0x03
     a3a:	cb 5b       	subi	r28, 0xBB	; 187
     a3c:	de 4f       	sbci	r29, 0xFE	; 254
     a3e:	48 81       	ld	r20, Y
     a40:	59 81       	ldd	r21, Y+1	; 0x01
     a42:	6a 81       	ldd	r22, Y+2	; 0x02
     a44:	7b 81       	ldd	r23, Y+3	; 0x03
     a46:	c5 54       	subi	r28, 0x45	; 69
     a48:	d1 40       	sbci	r29, 0x01	; 1
     a4a:	42 30       	cpi	r20, 0x02	; 2
     a4c:	51 05       	cpc	r21, r1
     a4e:	61 05       	cpc	r22, r1
     a50:	71 05       	cpc	r23, r1
     a52:	e9 f4       	brne	.+58     	; 0xa8e <__stack+0x22f>
     a54:	a7 01       	movw	r20, r14
     a56:	96 01       	movw	r18, r12
     a58:	60 e0       	ldi	r22, 0x00	; 0
     a5a:	70 e0       	ldi	r23, 0x00	; 0
     a5c:	80 e8       	ldi	r24, 0x80	; 128
     a5e:	9f e3       	ldi	r25, 0x3F	; 63
     a60:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__subsf3>
     a64:	6b 01       	movw	r12, r22
     a66:	7c 01       	movw	r14, r24
     a68:	89 28       	or	r8, r9
     a6a:	8a 28       	or	r8, r10
     a6c:	8b 28       	or	r8, r11
     a6e:	79 f0       	breq	.+30     	; 0xa8e <__stack+0x22f>
     a70:	a8 01       	movw	r20, r16
     a72:	60 e0       	ldi	r22, 0x00	; 0
     a74:	70 e0       	ldi	r23, 0x00	; 0
     a76:	80 e8       	ldi	r24, 0x80	; 128
     a78:	9f e3       	ldi	r25, 0x3F	; 63
     a7a:	0e 94 13 28 	call	0x5026	; 0x5026 <scalbnf>
     a7e:	9b 01       	movw	r18, r22
     a80:	ac 01       	movw	r20, r24
     a82:	c7 01       	movw	r24, r14
     a84:	b6 01       	movw	r22, r12
     a86:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__subsf3>
     a8a:	6b 01       	movw	r12, r22
     a8c:	7c 01       	movw	r14, r24
     a8e:	20 e0       	ldi	r18, 0x00	; 0
     a90:	30 e0       	ldi	r19, 0x00	; 0
     a92:	a9 01       	movw	r20, r18
     a94:	c7 01       	movw	r24, r14
     a96:	b6 01       	movw	r22, r12
     a98:	0e 94 35 2e 	call	0x5c6a	; 0x5c6a <__cmpsf2>
     a9c:	81 11       	cpse	r24, r1
     a9e:	cf c1       	rjmp	.+926    	; 0xe3e <__stack+0x5df>
     aa0:	73 01       	movw	r14, r6
     aa2:	62 01       	movw	r12, r4
     aa4:	51 e0       	ldi	r21, 0x01	; 1
     aa6:	c5 1a       	sub	r12, r21
     aa8:	d1 08       	sbc	r13, r1
     aaa:	e1 08       	sbc	r14, r1
     aac:	f1 08       	sbc	r15, r1
     aae:	b3 01       	movw	r22, r6
     ab0:	a2 01       	movw	r20, r4
     ab2:	20 e0       	ldi	r18, 0x00	; 0
     ab4:	30 e0       	ldi	r19, 0x00	; 0
     ab6:	80 e0       	ldi	r24, 0x00	; 0
     ab8:	90 e0       	ldi	r25, 0x00	; 0
     aba:	dc 01       	movw	r26, r24
     abc:	41 50       	subi	r20, 0x01	; 1
     abe:	51 09       	sbc	r21, r1
     ac0:	61 09       	sbc	r22, r1
     ac2:	71 09       	sbc	r23, r1
     ac4:	cb 5a       	subi	r28, 0xAB	; 171
     ac6:	de 4f       	sbci	r29, 0xFE	; 254
     ac8:	88 80       	ld	r8, Y
     aca:	99 80       	ldd	r9, Y+1	; 0x01
     acc:	aa 80       	ldd	r10, Y+2	; 0x02
     ace:	bb 80       	ldd	r11, Y+3	; 0x03
     ad0:	c5 55       	subi	r28, 0x55	; 85
     ad2:	d1 40       	sbci	r29, 0x01	; 1
     ad4:	48 15       	cp	r20, r8
     ad6:	59 05       	cpc	r21, r9
     ad8:	6a 05       	cpc	r22, r10
     ada:	7b 05       	cpc	r23, r11
     adc:	d4 f0       	brlt	.+52     	; 0xb12 <__stack+0x2b3>
     ade:	c1 5a       	subi	r28, 0xA1	; 161
     ae0:	de 4f       	sbci	r29, 0xFE	; 254
     ae2:	e8 81       	ld	r30, Y
     ae4:	f9 81       	ldd	r31, Y+1	; 0x01
     ae6:	cf 55       	subi	r28, 0x5F	; 95
     ae8:	d1 40       	sbci	r29, 0x01	; 1
     aea:	e2 0f       	add	r30, r18
     aec:	f3 1f       	adc	r31, r19
     aee:	11 ef       	ldi	r17, 0xF1	; 241
     af0:	81 2e       	mov	r8, r17
     af2:	91 2c       	mov	r9, r1
     af4:	8c 0e       	add	r8, r28
     af6:	9d 1e       	adc	r9, r29
     af8:	e8 0d       	add	r30, r8
     afa:	f9 1d       	adc	r31, r9
     afc:	80 80       	ld	r8, Z
     afe:	91 80       	ldd	r9, Z+1	; 0x01
     b00:	a2 80       	ldd	r10, Z+2	; 0x02
     b02:	b3 80       	ldd	r11, Z+3	; 0x03
     b04:	88 29       	or	r24, r8
     b06:	99 29       	or	r25, r9
     b08:	aa 29       	or	r26, r10
     b0a:	bb 29       	or	r27, r11
     b0c:	24 50       	subi	r18, 0x04	; 4
     b0e:	31 09       	sbc	r19, r1
     b10:	d5 cf       	rjmp	.-86     	; 0xabc <__stack+0x25d>
     b12:	89 2b       	or	r24, r25
     b14:	8a 2b       	or	r24, r26
     b16:	8b 2b       	or	r24, r27
     b18:	09 f0       	breq	.+2      	; 0xb1c <__stack+0x2bd>
     b1a:	46 c1       	rjmp	.+652    	; 0xda8 <__stack+0x549>
     b1c:	80 e0       	ldi	r24, 0x00	; 0
     b1e:	90 e0       	ldi	r25, 0x00	; 0
     b20:	41 e0       	ldi	r20, 0x01	; 1
     b22:	50 e0       	ldi	r21, 0x00	; 0
     b24:	60 e0       	ldi	r22, 0x00	; 0
     b26:	70 e0       	ldi	r23, 0x00	; 0
     b28:	04 97       	sbiw	r24, 0x04	; 4
     b2a:	c4 59       	subi	r28, 0x94	; 148
     b2c:	de 4f       	sbci	r29, 0xFE	; 254
     b2e:	e8 81       	ld	r30, Y
     b30:	f9 81       	ldd	r31, Y+1	; 0x01
     b32:	cc 56       	subi	r28, 0x6C	; 108
     b34:	d1 40       	sbci	r29, 0x01	; 1
     b36:	e8 0f       	add	r30, r24
     b38:	f9 1f       	adc	r31, r25
     b3a:	21 ef       	ldi	r18, 0xF1	; 241
     b3c:	a2 2e       	mov	r10, r18
     b3e:	b1 2c       	mov	r11, r1
     b40:	ac 0e       	add	r10, r28
     b42:	bd 1e       	adc	r11, r29
     b44:	ea 0d       	add	r30, r10
     b46:	fb 1d       	adc	r31, r11
     b48:	04 81       	ldd	r16, Z+4	; 0x04
     b4a:	15 81       	ldd	r17, Z+5	; 0x05
     b4c:	26 81       	ldd	r18, Z+6	; 0x06
     b4e:	37 81       	ldd	r19, Z+7	; 0x07
     b50:	01 2b       	or	r16, r17
     b52:	02 2b       	or	r16, r18
     b54:	03 2b       	or	r16, r19
     b56:	29 f4       	brne	.+10     	; 0xb62 <__stack+0x303>
     b58:	4f 5f       	subi	r20, 0xFF	; 255
     b5a:	5f 4f       	sbci	r21, 0xFF	; 255
     b5c:	6f 4f       	sbci	r22, 0xFF	; 255
     b5e:	7f 4f       	sbci	r23, 0xFF	; 255
     b60:	e3 cf       	rjmp	.-58     	; 0xb28 <__stack+0x2c9>
     b62:	53 01       	movw	r10, r6
     b64:	42 01       	movw	r8, r4
     b66:	0f ef       	ldi	r16, 0xFF	; 255
     b68:	80 1a       	sub	r8, r16
     b6a:	90 0a       	sbc	r9, r16
     b6c:	a0 0a       	sbc	r10, r16
     b6e:	b0 0a       	sbc	r11, r16
     b70:	c7 5a       	subi	r28, 0xA7	; 167
     b72:	de 4f       	sbci	r29, 0xFE	; 254
     b74:	c8 80       	ld	r12, Y
     b76:	d9 80       	ldd	r13, Y+1	; 0x01
     b78:	ea 80       	ldd	r14, Y+2	; 0x02
     b7a:	fb 80       	ldd	r15, Y+3	; 0x03
     b7c:	c9 55       	subi	r28, 0x59	; 89
     b7e:	d1 40       	sbci	r29, 0x01	; 1
     b80:	c8 0c       	add	r12, r8
     b82:	d9 1c       	adc	r13, r9
     b84:	ea 1c       	adc	r14, r10
     b86:	fb 1c       	adc	r15, r11
     b88:	cc 0c       	add	r12, r12
     b8a:	dd 1c       	adc	r13, r13
     b8c:	cc 0c       	add	r12, r12
     b8e:	dd 1c       	adc	r13, r13
     b90:	c6 01       	movw	r24, r12
     b92:	dd 0c       	add	r13, r13
     b94:	aa 0b       	sbc	r26, r26
     b96:	8c 01       	movw	r16, r24
     b98:	2a 2f       	mov	r18, r26
     b9a:	00 52       	subi	r16, 0x20	; 32
     b9c:	1f 4f       	sbci	r17, 0xFF	; 255
     b9e:	2f 4f       	sbci	r18, 0xFF	; 255
     ba0:	68 01       	movw	r12, r16
     ba2:	e2 2e       	mov	r14, r18
     ba4:	c2 59       	subi	r28, 0x92	; 146
     ba6:	de 4f       	sbci	r29, 0xFE	; 254
     ba8:	88 81       	ld	r24, Y
     baa:	99 81       	ldd	r25, Y+1	; 0x01
     bac:	aa 81       	ldd	r26, Y+2	; 0x02
     bae:	bb 81       	ldd	r27, Y+3	; 0x03
     bb0:	ce 56       	subi	r28, 0x6E	; 110
     bb2:	d1 40       	sbci	r29, 0x01	; 1
     bb4:	88 0d       	add	r24, r8
     bb6:	99 1d       	adc	r25, r9
     bb8:	aa 1d       	adc	r26, r10
     bba:	bb 1d       	adc	r27, r11
     bbc:	8c 01       	movw	r16, r24
     bbe:	00 0f       	add	r16, r16
     bc0:	11 1f       	adc	r17, r17
     bc2:	00 0f       	add	r16, r16
     bc4:	11 1f       	adc	r17, r17
     bc6:	c6 59       	subi	r28, 0x96	; 150
     bc8:	de 4f       	sbci	r29, 0xFE	; 254
     bca:	19 83       	std	Y+1, r17	; 0x01
     bcc:	08 83       	st	Y, r16
     bce:	ca 56       	subi	r28, 0x6A	; 106
     bd0:	d1 40       	sbci	r29, 0x01	; 1
     bd2:	84 01       	movw	r16, r8
     bd4:	00 0f       	add	r16, r16
     bd6:	11 1f       	adc	r17, r17
     bd8:	00 0f       	add	r16, r16
     bda:	11 1f       	adc	r17, r17
     bdc:	c9 59       	subi	r28, 0x99	; 153
     bde:	de 4f       	sbci	r29, 0xFE	; 254
     be0:	19 83       	std	Y+1, r17	; 0x01
     be2:	08 83       	st	Y, r16
     be4:	c7 56       	subi	r28, 0x67	; 103
     be6:	d1 40       	sbci	r29, 0x01	; 1
     be8:	21 2c       	mov	r2, r1
     bea:	31 2c       	mov	r3, r1
     bec:	d3 01       	movw	r26, r6
     bee:	c2 01       	movw	r24, r4
     bf0:	84 0f       	add	r24, r20
     bf2:	95 1f       	adc	r25, r21
     bf4:	a6 1f       	adc	r26, r22
     bf6:	b7 1f       	adc	r27, r23
     bf8:	c1 5a       	subi	r28, 0xA1	; 161
     bfa:	de 4f       	sbci	r29, 0xFE	; 254
     bfc:	88 83       	st	Y, r24
     bfe:	99 83       	std	Y+1, r25	; 0x01
     c00:	aa 83       	std	Y+2, r26	; 0x02
     c02:	bb 83       	std	Y+3, r27	; 0x03
     c04:	cf 55       	subi	r28, 0x5F	; 95
     c06:	d1 40       	sbci	r29, 0x01	; 1
     c08:	c1 5a       	subi	r28, 0xA1	; 161
     c0a:	de 4f       	sbci	r29, 0xFE	; 254
     c0c:	08 81       	ld	r16, Y
     c0e:	19 81       	ldd	r17, Y+1	; 0x01
     c10:	2a 81       	ldd	r18, Y+2	; 0x02
     c12:	3b 81       	ldd	r19, Y+3	; 0x03
     c14:	cf 55       	subi	r28, 0x5F	; 95
     c16:	d1 40       	sbci	r29, 0x01	; 1
     c18:	08 15       	cp	r16, r8
     c1a:	19 05       	cpc	r17, r9
     c1c:	2a 05       	cpc	r18, r10
     c1e:	3b 05       	cpc	r19, r11
     c20:	0c f4       	brge	.+2      	; 0xc24 <__stack+0x3c5>
     c22:	bf c0       	rjmp	.+382    	; 0xda2 <__stack+0x543>
     c24:	c6 59       	subi	r28, 0x96	; 150
     c26:	de 4f       	sbci	r29, 0xFE	; 254
     c28:	08 81       	ld	r16, Y
     c2a:	19 81       	ldd	r17, Y+1	; 0x01
     c2c:	ca 56       	subi	r28, 0x6A	; 106
     c2e:	d1 40       	sbci	r29, 0x01	; 1
     c30:	02 0d       	add	r16, r2
     c32:	13 1d       	adc	r17, r3
     c34:	c3 5b       	subi	r28, 0xB3	; 179
     c36:	de 4f       	sbci	r29, 0xFE	; 254
     c38:	19 83       	std	Y+1, r17	; 0x01
     c3a:	08 83       	st	Y, r16
     c3c:	cd 54       	subi	r28, 0x4D	; 77
     c3e:	d1 40       	sbci	r29, 0x01	; 1
     c40:	01 ea       	ldi	r16, 0xA1	; 161
     c42:	10 e0       	ldi	r17, 0x00	; 0
     c44:	0c 0f       	add	r16, r28
     c46:	1d 1f       	adc	r17, r29
     c48:	c3 5b       	subi	r28, 0xB3	; 179
     c4a:	de 4f       	sbci	r29, 0xFE	; 254
     c4c:	28 81       	ld	r18, Y
     c4e:	39 81       	ldd	r19, Y+1	; 0x01
     c50:	cd 54       	subi	r28, 0x4D	; 77
     c52:	d1 40       	sbci	r29, 0x01	; 1
     c54:	02 0f       	add	r16, r18
     c56:	13 1f       	adc	r17, r19
     c58:	f6 01       	movw	r30, r12
     c5a:	5e 2d       	mov	r21, r14
     c5c:	0e 94 a4 2d 	call	0x5b48	; 0x5b48 <__xload_4>
     c60:	0e 94 7c 29 	call	0x52f8	; 0x52f8 <__floatsisf>
     c64:	d8 01       	movw	r26, r16
     c66:	6d 93       	st	X+, r22
     c68:	7d 93       	st	X+, r23
     c6a:	8d 93       	st	X+, r24
     c6c:	9c 93       	st	X, r25
     c6e:	13 97       	sbiw	r26, 0x03	; 3
     c70:	cb 59       	subi	r28, 0x9B	; 155
     c72:	de 4f       	sbci	r29, 0xFE	; 254
     c74:	f8 80       	ld	r15, Y
     c76:	c5 56       	subi	r28, 0x65	; 101
     c78:	d1 40       	sbci	r29, 0x01	; 1
     c7a:	cb 5b       	subi	r28, 0xBB	; 187
     c7c:	de 4f       	sbci	r29, 0xFE	; 254
     c7e:	f8 82       	st	Y, r15
     c80:	c5 54       	subi	r28, 0x45	; 69
     c82:	d1 40       	sbci	r29, 0x01	; 1
     c84:	c7 59       	subi	r28, 0x97	; 151
     c86:	de 4f       	sbci	r29, 0xFE	; 254
     c88:	f8 80       	ld	r15, Y
     c8a:	c9 56       	subi	r28, 0x69	; 105
     c8c:	d1 40       	sbci	r29, 0x01	; 1
     c8e:	ca 5b       	subi	r28, 0xBA	; 186
     c90:	de 4f       	sbci	r29, 0xFE	; 254
     c92:	f8 82       	st	Y, r15
     c94:	c6 54       	subi	r28, 0x46	; 70
     c96:	d1 40       	sbci	r29, 0x01	; 1
     c98:	c7 5b       	subi	r28, 0xB7	; 183
     c9a:	de 4f       	sbci	r29, 0xFE	; 254
     c9c:	18 82       	st	Y, r1
     c9e:	19 82       	std	Y+1, r1	; 0x01
     ca0:	1a 82       	std	Y+2, r1	; 0x02
     ca2:	1b 82       	std	Y+3, r1	; 0x03
     ca4:	c9 54       	subi	r28, 0x49	; 73
     ca6:	d1 40       	sbci	r29, 0x01	; 1
     ca8:	00 e0       	ldi	r16, 0x00	; 0
     caa:	10 e0       	ldi	r17, 0x00	; 0
     cac:	41 2c       	mov	r4, r1
     cae:	51 2c       	mov	r5, r1
     cb0:	32 01       	movw	r6, r4
     cb2:	c7 5b       	subi	r28, 0xB7	; 183
     cb4:	de 4f       	sbci	r29, 0xFE	; 254
     cb6:	48 81       	ld	r20, Y
     cb8:	59 81       	ldd	r21, Y+1	; 0x01
     cba:	6a 81       	ldd	r22, Y+2	; 0x02
     cbc:	7b 81       	ldd	r23, Y+3	; 0x03
     cbe:	c9 54       	subi	r28, 0x49	; 73
     cc0:	d1 40       	sbci	r29, 0x01	; 1
     cc2:	cf 5a       	subi	r28, 0xAF	; 175
     cc4:	de 4f       	sbci	r29, 0xFE	; 254
     cc6:	88 81       	ld	r24, Y
     cc8:	99 81       	ldd	r25, Y+1	; 0x01
     cca:	aa 81       	ldd	r26, Y+2	; 0x02
     ccc:	bb 81       	ldd	r27, Y+3	; 0x03
     cce:	c1 55       	subi	r28, 0x51	; 81
     cd0:	d1 40       	sbci	r29, 0x01	; 1
     cd2:	84 17       	cp	r24, r20
     cd4:	95 07       	cpc	r25, r21
     cd6:	a6 07       	cpc	r26, r22
     cd8:	b7 07       	cpc	r27, r23
     cda:	0c f4       	brge	.+2      	; 0xcde <__stack+0x47f>
     cdc:	43 c0       	rjmp	.+134    	; 0xd64 <__stack+0x505>
     cde:	c3 5b       	subi	r28, 0xB3	; 179
     ce0:	de 4f       	sbci	r29, 0xFE	; 254
     ce2:	e8 81       	ld	r30, Y
     ce4:	f9 81       	ldd	r31, Y+1	; 0x01
     ce6:	cd 54       	subi	r28, 0x4D	; 77
     ce8:	d1 40       	sbci	r29, 0x01	; 1
     cea:	e0 0f       	add	r30, r16
     cec:	f1 1f       	adc	r31, r17
     cee:	21 ea       	ldi	r18, 0xA1	; 161
     cf0:	30 e0       	ldi	r19, 0x00	; 0
     cf2:	2c 0f       	add	r18, r28
     cf4:	3d 1f       	adc	r19, r29
     cf6:	e2 0f       	add	r30, r18
     cf8:	f3 1f       	adc	r31, r19
     cfa:	cb 5b       	subi	r28, 0xBB	; 187
     cfc:	de 4f       	sbci	r29, 0xFE	; 254
     cfe:	a8 81       	ld	r26, Y
     d00:	b9 81       	ldd	r27, Y+1	; 0x01
     d02:	c5 54       	subi	r28, 0x45	; 69
     d04:	d1 40       	sbci	r29, 0x01	; 1
     d06:	2d 91       	ld	r18, X+
     d08:	3d 91       	ld	r19, X+
     d0a:	4d 91       	ld	r20, X+
     d0c:	5d 91       	ld	r21, X+
     d0e:	cb 5b       	subi	r28, 0xBB	; 187
     d10:	de 4f       	sbci	r29, 0xFE	; 254
     d12:	b9 83       	std	Y+1, r27	; 0x01
     d14:	a8 83       	st	Y, r26
     d16:	c5 54       	subi	r28, 0x45	; 69
     d18:	d1 40       	sbci	r29, 0x01	; 1
     d1a:	60 81       	ld	r22, Z
     d1c:	71 81       	ldd	r23, Z+1	; 0x01
     d1e:	82 81       	ldd	r24, Z+2	; 0x02
     d20:	93 81       	ldd	r25, Z+3	; 0x03
     d22:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
     d26:	9b 01       	movw	r18, r22
     d28:	ac 01       	movw	r20, r24
     d2a:	c3 01       	movw	r24, r6
     d2c:	b2 01       	movw	r22, r4
     d2e:	0e 94 f0 2d 	call	0x5be0	; 0x5be0 <__addsf3>
     d32:	2b 01       	movw	r4, r22
     d34:	3c 01       	movw	r6, r24
     d36:	c7 5b       	subi	r28, 0xB7	; 183
     d38:	de 4f       	sbci	r29, 0xFE	; 254
     d3a:	28 81       	ld	r18, Y
     d3c:	39 81       	ldd	r19, Y+1	; 0x01
     d3e:	4a 81       	ldd	r20, Y+2	; 0x02
     d40:	5b 81       	ldd	r21, Y+3	; 0x03
     d42:	c9 54       	subi	r28, 0x49	; 73
     d44:	d1 40       	sbci	r29, 0x01	; 1
     d46:	2f 5f       	subi	r18, 0xFF	; 255
     d48:	3f 4f       	sbci	r19, 0xFF	; 255
     d4a:	4f 4f       	sbci	r20, 0xFF	; 255
     d4c:	5f 4f       	sbci	r21, 0xFF	; 255
     d4e:	c7 5b       	subi	r28, 0xB7	; 183
     d50:	de 4f       	sbci	r29, 0xFE	; 254
     d52:	28 83       	st	Y, r18
     d54:	39 83       	std	Y+1, r19	; 0x01
     d56:	4a 83       	std	Y+2, r20	; 0x02
     d58:	5b 83       	std	Y+3, r21	; 0x03
     d5a:	c9 54       	subi	r28, 0x49	; 73
     d5c:	d1 40       	sbci	r29, 0x01	; 1
     d5e:	04 50       	subi	r16, 0x04	; 4
     d60:	11 09       	sbc	r17, r1
     d62:	a7 cf       	rjmp	.-178    	; 0xcb2 <__stack+0x453>
     d64:	c9 59       	subi	r28, 0x99	; 153
     d66:	de 4f       	sbci	r29, 0xFE	; 254
     d68:	e8 81       	ld	r30, Y
     d6a:	f9 81       	ldd	r31, Y+1	; 0x01
     d6c:	c7 56       	subi	r28, 0x67	; 103
     d6e:	d1 40       	sbci	r29, 0x01	; 1
     d70:	e2 0d       	add	r30, r2
     d72:	f3 1d       	adc	r31, r3
     d74:	a1 e0       	ldi	r26, 0x01	; 1
     d76:	b0 e0       	ldi	r27, 0x00	; 0
     d78:	ac 0f       	add	r26, r28
     d7a:	bd 1f       	adc	r27, r29
     d7c:	ea 0f       	add	r30, r26
     d7e:	fb 1f       	adc	r31, r27
     d80:	40 82       	st	Z, r4
     d82:	51 82       	std	Z+1, r5	; 0x01
     d84:	62 82       	std	Z+2, r6	; 0x02
     d86:	73 82       	std	Z+3, r7	; 0x03
     d88:	bf ef       	ldi	r27, 0xFF	; 255
     d8a:	8b 1a       	sub	r8, r27
     d8c:	9b 0a       	sbc	r9, r27
     d8e:	ab 0a       	sbc	r10, r27
     d90:	bb 0a       	sbc	r11, r27
     d92:	e4 e0       	ldi	r30, 0x04	; 4
     d94:	2e 0e       	add	r2, r30
     d96:	31 1c       	adc	r3, r1
     d98:	f4 e0       	ldi	r31, 0x04	; 4
     d9a:	cf 0e       	add	r12, r31
     d9c:	d1 1c       	adc	r13, r1
     d9e:	e1 1c       	adc	r14, r1
     da0:	33 cf       	rjmp	.-410    	; 0xc08 <__stack+0x3a9>
     da2:	28 01       	movw	r4, r16
     da4:	39 01       	movw	r6, r18
     da6:	22 cc       	rjmp	.-1980   	; 0x5ec <__EEPROM_REGION_LENGTH__+0x1ec>
     da8:	cf 5b       	subi	r28, 0xBF	; 191
     daa:	de 4f       	sbci	r29, 0xFE	; 254
     dac:	28 81       	ld	r18, Y
     dae:	39 81       	ldd	r19, Y+1	; 0x01
     db0:	4a 81       	ldd	r20, Y+2	; 0x02
     db2:	5b 81       	ldd	r21, Y+3	; 0x03
     db4:	c1 54       	subi	r28, 0x41	; 65
     db6:	d1 40       	sbci	r29, 0x01	; 1
     db8:	28 51       	subi	r18, 0x18	; 24
     dba:	31 09       	sbc	r19, r1
     dbc:	41 09       	sbc	r20, r1
     dbe:	51 09       	sbc	r21, r1
     dc0:	cf 5b       	subi	r28, 0xBF	; 191
     dc2:	de 4f       	sbci	r29, 0xFE	; 254
     dc4:	28 83       	st	Y, r18
     dc6:	39 83       	std	Y+1, r19	; 0x01
     dc8:	4a 83       	std	Y+2, r20	; 0x02
     dca:	5b 83       	std	Y+3, r21	; 0x03
     dcc:	c1 54       	subi	r28, 0x41	; 65
     dce:	d1 40       	sbci	r29, 0x01	; 1
     dd0:	c6 01       	movw	r24, r12
     dd2:	88 0f       	add	r24, r24
     dd4:	99 1f       	adc	r25, r25
     dd6:	88 0f       	add	r24, r24
     dd8:	99 1f       	adc	r25, r25
     dda:	26 01       	movw	r4, r12
     ddc:	37 01       	movw	r6, r14
     dde:	20 e0       	ldi	r18, 0x00	; 0
     de0:	30 e0       	ldi	r19, 0x00	; 0
     de2:	24 50       	subi	r18, 0x04	; 4
     de4:	31 09       	sbc	r19, r1
     de6:	f9 01       	movw	r30, r18
     de8:	e8 0f       	add	r30, r24
     dea:	f9 1f       	adc	r31, r25
     dec:	61 ef       	ldi	r22, 0xF1	; 241
     dee:	70 e0       	ldi	r23, 0x00	; 0
     df0:	6c 0f       	add	r22, r28
     df2:	7d 1f       	adc	r23, r29
     df4:	e6 0f       	add	r30, r22
     df6:	f7 1f       	adc	r31, r23
     df8:	44 81       	ldd	r20, Z+4	; 0x04
     dfa:	55 81       	ldd	r21, Z+5	; 0x05
     dfc:	66 81       	ldd	r22, Z+6	; 0x06
     dfe:	77 81       	ldd	r23, Z+7	; 0x07
     e00:	45 2b       	or	r20, r21
     e02:	46 2b       	or	r20, r22
     e04:	47 2b       	or	r20, r23
     e06:	09 f0       	breq	.+2      	; 0xe0a <__stack+0x5ab>
     e08:	9e c0       	rjmp	.+316    	; 0xf46 <__stack+0x6e7>
     e0a:	41 e0       	ldi	r20, 0x01	; 1
     e0c:	44 1a       	sub	r4, r20
     e0e:	51 08       	sbc	r5, r1
     e10:	61 08       	sbc	r6, r1
     e12:	71 08       	sbc	r7, r1
     e14:	cf 5b       	subi	r28, 0xBF	; 191
     e16:	de 4f       	sbci	r29, 0xFE	; 254
     e18:	48 81       	ld	r20, Y
     e1a:	59 81       	ldd	r21, Y+1	; 0x01
     e1c:	6a 81       	ldd	r22, Y+2	; 0x02
     e1e:	7b 81       	ldd	r23, Y+3	; 0x03
     e20:	c1 54       	subi	r28, 0x41	; 65
     e22:	d1 40       	sbci	r29, 0x01	; 1
     e24:	48 51       	subi	r20, 0x18	; 24
     e26:	51 09       	sbc	r21, r1
     e28:	61 09       	sbc	r22, r1
     e2a:	71 09       	sbc	r23, r1
     e2c:	cf 5b       	subi	r28, 0xBF	; 191
     e2e:	de 4f       	sbci	r29, 0xFE	; 254
     e30:	48 83       	st	Y, r20
     e32:	59 83       	std	Y+1, r21	; 0x01
     e34:	6a 83       	std	Y+2, r22	; 0x02
     e36:	7b 83       	std	Y+3, r23	; 0x03
     e38:	c1 54       	subi	r28, 0x41	; 65
     e3a:	d1 40       	sbci	r29, 0x01	; 1
     e3c:	d2 cf       	rjmp	.-92     	; 0xde2 <__stack+0x583>
     e3e:	cf 5b       	subi	r28, 0xBF	; 191
     e40:	de 4f       	sbci	r29, 0xFE	; 254
     e42:	48 81       	ld	r20, Y
     e44:	59 81       	ldd	r21, Y+1	; 0x01
     e46:	c1 54       	subi	r28, 0x41	; 65
     e48:	d1 40       	sbci	r29, 0x01	; 1
     e4a:	51 95       	neg	r21
     e4c:	41 95       	neg	r20
     e4e:	51 09       	sbc	r21, r1
     e50:	c7 01       	movw	r24, r14
     e52:	b6 01       	movw	r22, r12
     e54:	0e 94 13 28 	call	0x5026	; 0x5026 <scalbnf>
     e58:	6b 01       	movw	r12, r22
     e5a:	7c 01       	movw	r14, r24
     e5c:	20 e0       	ldi	r18, 0x00	; 0
     e5e:	30 e0       	ldi	r19, 0x00	; 0
     e60:	40 e8       	ldi	r20, 0x80	; 128
     e62:	5b e4       	ldi	r21, 0x4B	; 75
     e64:	0e 94 30 2e 	call	0x5c60	; 0x5c60 <__gesf2>
     e68:	87 fd       	sbrc	r24, 7
     e6a:	57 c0       	rjmp	.+174    	; 0xf1a <__stack+0x6bb>
     e6c:	20 e0       	ldi	r18, 0x00	; 0
     e6e:	30 e0       	ldi	r19, 0x00	; 0
     e70:	40 e8       	ldi	r20, 0x80	; 128
     e72:	53 e3       	ldi	r21, 0x33	; 51
     e74:	c7 01       	movw	r24, r14
     e76:	b6 01       	movw	r22, r12
     e78:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
     e7c:	0e 94 f6 2d 	call	0x5bec	; 0x5bec <__fixsfsi>
     e80:	0e 94 7c 29 	call	0x52f8	; 0x52f8 <__floatsisf>
     e84:	4b 01       	movw	r8, r22
     e86:	5c 01       	movw	r10, r24
     e88:	01 ef       	ldi	r16, 0xF1	; 241
     e8a:	10 e0       	ldi	r17, 0x00	; 0
     e8c:	0c 0f       	add	r16, r28
     e8e:	1d 1f       	adc	r17, r29
     e90:	c3 5b       	subi	r28, 0xB3	; 179
     e92:	de 4f       	sbci	r29, 0xFE	; 254
     e94:	88 81       	ld	r24, Y
     e96:	99 81       	ldd	r25, Y+1	; 0x01
     e98:	cd 54       	subi	r28, 0x4D	; 77
     e9a:	d1 40       	sbci	r29, 0x01	; 1
     e9c:	08 0f       	add	r16, r24
     e9e:	19 1f       	adc	r17, r25
     ea0:	20 e0       	ldi	r18, 0x00	; 0
     ea2:	30 e0       	ldi	r19, 0x00	; 0
     ea4:	40 e8       	ldi	r20, 0x80	; 128
     ea6:	5b e4       	ldi	r21, 0x4B	; 75
     ea8:	c5 01       	movw	r24, r10
     eaa:	b4 01       	movw	r22, r8
     eac:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
     eb0:	9b 01       	movw	r18, r22
     eb2:	ac 01       	movw	r20, r24
     eb4:	c7 01       	movw	r24, r14
     eb6:	b6 01       	movw	r22, r12
     eb8:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__subsf3>
     ebc:	0e 94 f6 2d 	call	0x5bec	; 0x5bec <__fixsfsi>
     ec0:	d8 01       	movw	r26, r16
     ec2:	6d 93       	st	X+, r22
     ec4:	7d 93       	st	X+, r23
     ec6:	8d 93       	st	X+, r24
     ec8:	9c 93       	st	X, r25
     eca:	13 97       	sbiw	r26, 0x03	; 3
     ecc:	bf ef       	ldi	r27, 0xFF	; 255
     ece:	4b 1a       	sub	r4, r27
     ed0:	5b 0a       	sbc	r5, r27
     ed2:	6b 0a       	sbc	r6, r27
     ed4:	7b 0a       	sbc	r7, r27
     ed6:	cf 5b       	subi	r28, 0xBF	; 191
     ed8:	de 4f       	sbci	r29, 0xFE	; 254
     eda:	08 81       	ld	r16, Y
     edc:	19 81       	ldd	r17, Y+1	; 0x01
     ede:	2a 81       	ldd	r18, Y+2	; 0x02
     ee0:	3b 81       	ldd	r19, Y+3	; 0x03
     ee2:	c1 54       	subi	r28, 0x41	; 65
     ee4:	d1 40       	sbci	r29, 0x01	; 1
     ee6:	08 5e       	subi	r16, 0xE8	; 232
     ee8:	1f 4f       	sbci	r17, 0xFF	; 255
     eea:	2f 4f       	sbci	r18, 0xFF	; 255
     eec:	3f 4f       	sbci	r19, 0xFF	; 255
     eee:	cf 5b       	subi	r28, 0xBF	; 191
     ef0:	de 4f       	sbci	r29, 0xFE	; 254
     ef2:	08 83       	st	Y, r16
     ef4:	19 83       	std	Y+1, r17	; 0x01
     ef6:	2a 83       	std	Y+2, r18	; 0x02
     ef8:	3b 83       	std	Y+3, r19	; 0x03
     efa:	c1 54       	subi	r28, 0x41	; 65
     efc:	d1 40       	sbci	r29, 0x01	; 1
     efe:	82 01       	movw	r16, r4
     f00:	00 0f       	add	r16, r16
     f02:	11 1f       	adc	r17, r17
     f04:	00 0f       	add	r16, r16
     f06:	11 1f       	adc	r17, r17
     f08:	21 ef       	ldi	r18, 0xF1	; 241
     f0a:	30 e0       	ldi	r19, 0x00	; 0
     f0c:	2c 0f       	add	r18, r28
     f0e:	3d 1f       	adc	r19, r29
     f10:	02 0f       	add	r16, r18
     f12:	13 1f       	adc	r17, r19
     f14:	c5 01       	movw	r24, r10
     f16:	b4 01       	movw	r22, r8
     f18:	0e c0       	rjmp	.+28     	; 0xf36 <__stack+0x6d7>
     f1a:	01 ef       	ldi	r16, 0xF1	; 241
     f1c:	10 e0       	ldi	r17, 0x00	; 0
     f1e:	0c 0f       	add	r16, r28
     f20:	1d 1f       	adc	r17, r29
     f22:	c3 5b       	subi	r28, 0xB3	; 179
     f24:	de 4f       	sbci	r29, 0xFE	; 254
     f26:	88 80       	ld	r8, Y
     f28:	99 80       	ldd	r9, Y+1	; 0x01
     f2a:	cd 54       	subi	r28, 0x4D	; 77
     f2c:	d1 40       	sbci	r29, 0x01	; 1
     f2e:	08 0d       	add	r16, r8
     f30:	19 1d       	adc	r17, r9
     f32:	c7 01       	movw	r24, r14
     f34:	b6 01       	movw	r22, r12
     f36:	0e 94 f6 2d 	call	0x5bec	; 0x5bec <__fixsfsi>
     f3a:	d8 01       	movw	r26, r16
     f3c:	6d 93       	st	X+, r22
     f3e:	7d 93       	st	X+, r23
     f40:	8d 93       	st	X+, r24
     f42:	9c 93       	st	X, r25
     f44:	13 97       	sbiw	r26, 0x03	; 3
     f46:	cf 5b       	subi	r28, 0xBF	; 191
     f48:	de 4f       	sbci	r29, 0xFE	; 254
     f4a:	48 81       	ld	r20, Y
     f4c:	59 81       	ldd	r21, Y+1	; 0x01
     f4e:	c1 54       	subi	r28, 0x41	; 65
     f50:	d1 40       	sbci	r29, 0x01	; 1
     f52:	60 e0       	ldi	r22, 0x00	; 0
     f54:	70 e0       	ldi	r23, 0x00	; 0
     f56:	80 e8       	ldi	r24, 0x80	; 128
     f58:	9f e3       	ldi	r25, 0x3F	; 63
     f5a:	0e 94 13 28 	call	0x5026	; 0x5026 <scalbnf>
     f5e:	4b 01       	movw	r8, r22
     f60:	5c 01       	movw	r10, r24
     f62:	c1 5a       	subi	r28, 0xA1	; 161
     f64:	de 4f       	sbci	r29, 0xFE	; 254
     f66:	59 82       	std	Y+1, r5	; 0x01
     f68:	48 82       	st	Y, r4
     f6a:	cf 55       	subi	r28, 0x5F	; 95
     f6c:	d1 40       	sbci	r29, 0x01	; 1
     f6e:	12 01       	movw	r2, r4
     f70:	22 0c       	add	r2, r2
     f72:	33 1c       	adc	r3, r3
     f74:	22 0c       	add	r2, r2
     f76:	33 1c       	adc	r3, r3
     f78:	73 01       	movw	r14, r6
     f7a:	62 01       	movw	r12, r4
     f7c:	00 e0       	ldi	r16, 0x00	; 0
     f7e:	10 e0       	ldi	r17, 0x00	; 0
     f80:	f7 fc       	sbrc	r15, 7
     f82:	3c c0       	rjmp	.+120    	; 0xffc <__stack+0x79d>
     f84:	c8 01       	movw	r24, r16
     f86:	82 0d       	add	r24, r2
     f88:	93 1d       	adc	r25, r3
     f8a:	e1 e0       	ldi	r30, 0x01	; 1
     f8c:	f0 e0       	ldi	r31, 0x00	; 0
     f8e:	ec 0f       	add	r30, r28
     f90:	fd 1f       	adc	r31, r29
     f92:	e8 0f       	add	r30, r24
     f94:	f9 1f       	adc	r31, r25
     f96:	cf 5b       	subi	r28, 0xBF	; 191
     f98:	de 4f       	sbci	r29, 0xFE	; 254
     f9a:	f9 83       	std	Y+1, r31	; 0x01
     f9c:	e8 83       	st	Y, r30
     f9e:	c1 54       	subi	r28, 0x41	; 65
     fa0:	d1 40       	sbci	r29, 0x01	; 1
     fa2:	e1 ef       	ldi	r30, 0xF1	; 241
     fa4:	f0 e0       	ldi	r31, 0x00	; 0
     fa6:	ec 0f       	add	r30, r28
     fa8:	fd 1f       	adc	r31, r29
     faa:	e8 0f       	add	r30, r24
     fac:	f9 1f       	adc	r31, r25
     fae:	60 81       	ld	r22, Z
     fb0:	71 81       	ldd	r23, Z+1	; 0x01
     fb2:	82 81       	ldd	r24, Z+2	; 0x02
     fb4:	93 81       	ldd	r25, Z+3	; 0x03
     fb6:	0e 94 7c 29 	call	0x52f8	; 0x52f8 <__floatsisf>
     fba:	a5 01       	movw	r20, r10
     fbc:	94 01       	movw	r18, r8
     fbe:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
     fc2:	cf 5b       	subi	r28, 0xBF	; 191
     fc4:	de 4f       	sbci	r29, 0xFE	; 254
     fc6:	a8 81       	ld	r26, Y
     fc8:	b9 81       	ldd	r27, Y+1	; 0x01
     fca:	c1 54       	subi	r28, 0x41	; 65
     fcc:	d1 40       	sbci	r29, 0x01	; 1
     fce:	6d 93       	st	X+, r22
     fd0:	7d 93       	st	X+, r23
     fd2:	8d 93       	st	X+, r24
     fd4:	9c 93       	st	X, r25
     fd6:	13 97       	sbiw	r26, 0x03	; 3
     fd8:	20 e0       	ldi	r18, 0x00	; 0
     fda:	30 e0       	ldi	r19, 0x00	; 0
     fdc:	40 e8       	ldi	r20, 0x80	; 128
     fde:	53 e3       	ldi	r21, 0x33	; 51
     fe0:	c5 01       	movw	r24, r10
     fe2:	b4 01       	movw	r22, r8
     fe4:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
     fe8:	4b 01       	movw	r8, r22
     fea:	5c 01       	movw	r10, r24
     fec:	b1 e0       	ldi	r27, 0x01	; 1
     fee:	cb 1a       	sub	r12, r27
     ff0:	d1 08       	sbc	r13, r1
     ff2:	e1 08       	sbc	r14, r1
     ff4:	f1 08       	sbc	r15, r1
     ff6:	04 50       	subi	r16, 0x04	; 4
     ff8:	11 09       	sbc	r17, r1
     ffa:	c2 cf       	rjmp	.-124    	; 0xf80 <__stack+0x721>
     ffc:	8e 01       	movw	r16, r28
     ffe:	0f 5a       	subi	r16, 0xAF	; 175
    1000:	1f 4f       	sbci	r17, 0xFF	; 255
    1002:	c3 5b       	subi	r28, 0xB3	; 179
    1004:	de 4f       	sbci	r29, 0xFE	; 254
    1006:	19 83       	std	Y+1, r17	; 0x01
    1008:	08 83       	st	Y, r16
    100a:	cd 54       	subi	r28, 0x4D	; 77
    100c:	d1 40       	sbci	r29, 0x01	; 1
    100e:	cf 5b       	subi	r28, 0xBF	; 191
    1010:	de 4f       	sbci	r29, 0xFE	; 254
    1012:	18 82       	st	Y, r1
    1014:	19 82       	std	Y+1, r1	; 0x01
    1016:	1a 82       	std	Y+2, r1	; 0x02
    1018:	1b 82       	std	Y+3, r1	; 0x03
    101a:	c1 54       	subi	r28, 0x41	; 65
    101c:	d1 40       	sbci	r29, 0x01	; 1
    101e:	cf 5a       	subi	r28, 0xAF	; 175
    1020:	de 4f       	sbci	r29, 0xFE	; 254
    1022:	19 82       	std	Y+1, r1	; 0x01
    1024:	18 82       	st	Y, r1
    1026:	c1 55       	subi	r28, 0x51	; 81
    1028:	d1 40       	sbci	r29, 0x01	; 1
    102a:	d3 01       	movw	r26, r6
    102c:	c2 01       	movw	r24, r4
    102e:	cf 5b       	subi	r28, 0xBF	; 191
    1030:	de 4f       	sbci	r29, 0xFE	; 254
    1032:	88 80       	ld	r8, Y
    1034:	99 80       	ldd	r9, Y+1	; 0x01
    1036:	aa 80       	ldd	r10, Y+2	; 0x02
    1038:	bb 80       	ldd	r11, Y+3	; 0x03
    103a:	c1 54       	subi	r28, 0x41	; 65
    103c:	d1 40       	sbci	r29, 0x01	; 1
    103e:	88 19       	sub	r24, r8
    1040:	99 09       	sbc	r25, r9
    1042:	aa 09       	sbc	r26, r10
    1044:	bb 09       	sbc	r27, r11
    1046:	b7 fd       	sbrc	r27, 7
    1048:	b2 c0       	rjmp	.+356    	; 0x11ae <__stack+0x94f>
    104a:	78 ee       	ldi	r23, 0xE8	; 232
    104c:	87 2e       	mov	r8, r23
    104e:	71 e0       	ldi	r23, 0x01	; 1
    1050:	97 2e       	mov	r9, r23
    1052:	70 e0       	ldi	r23, 0x00	; 0
    1054:	a7 2e       	mov	r10, r23
    1056:	61 01       	movw	r12, r2
    1058:	cf 5a       	subi	r28, 0xAF	; 175
    105a:	de 4f       	sbci	r29, 0xFE	; 254
    105c:	e8 80       	ld	r14, Y
    105e:	f9 80       	ldd	r15, Y+1	; 0x01
    1060:	c1 55       	subi	r28, 0x51	; 81
    1062:	d1 40       	sbci	r29, 0x01	; 1
    1064:	ce 18       	sub	r12, r14
    1066:	df 08       	sbc	r13, r15
    1068:	cb 59       	subi	r28, 0x9B	; 155
    106a:	de 4f       	sbci	r29, 0xFE	; 254
    106c:	d9 82       	std	Y+1, r13	; 0x01
    106e:	c8 82       	st	Y, r12
    1070:	c5 56       	subi	r28, 0x65	; 101
    1072:	d1 40       	sbci	r29, 0x01	; 1
    1074:	00 e0       	ldi	r16, 0x00	; 0
    1076:	10 e0       	ldi	r17, 0x00	; 0
    1078:	c7 5a       	subi	r28, 0xA7	; 167
    107a:	de 4f       	sbci	r29, 0xFE	; 254
    107c:	18 82       	st	Y, r1
    107e:	19 82       	std	Y+1, r1	; 0x01
    1080:	1a 82       	std	Y+2, r1	; 0x02
    1082:	1b 82       	std	Y+3, r1	; 0x03
    1084:	c9 55       	subi	r28, 0x59	; 89
    1086:	d1 40       	sbci	r29, 0x01	; 1
    1088:	c1 2c       	mov	r12, r1
    108a:	d1 2c       	mov	r13, r1
    108c:	76 01       	movw	r14, r12
    108e:	cb 5a       	subi	r28, 0xAB	; 171
    1090:	de 4f       	sbci	r29, 0xFE	; 254
    1092:	68 81       	ld	r22, Y
    1094:	79 81       	ldd	r23, Y+1	; 0x01
    1096:	8a 81       	ldd	r24, Y+2	; 0x02
    1098:	9b 81       	ldd	r25, Y+3	; 0x03
    109a:	c5 55       	subi	r28, 0x55	; 85
    109c:	d1 40       	sbci	r29, 0x01	; 1
    109e:	6c 15       	cp	r22, r12
    10a0:	7d 05       	cpc	r23, r13
    10a2:	8e 05       	cpc	r24, r14
    10a4:	9f 05       	cpc	r25, r15
    10a6:	0c f4       	brge	.+2      	; 0x10aa <__stack+0x84b>
    10a8:	47 c0       	rjmp	.+142    	; 0x1138 <__stack+0x8d9>
    10aa:	cf 5b       	subi	r28, 0xBF	; 191
    10ac:	de 4f       	sbci	r29, 0xFE	; 254
    10ae:	88 81       	ld	r24, Y
    10b0:	99 81       	ldd	r25, Y+1	; 0x01
    10b2:	aa 81       	ldd	r26, Y+2	; 0x02
    10b4:	bb 81       	ldd	r27, Y+3	; 0x03
    10b6:	c1 54       	subi	r28, 0x41	; 65
    10b8:	d1 40       	sbci	r29, 0x01	; 1
    10ba:	8c 15       	cp	r24, r12
    10bc:	9d 05       	cpc	r25, r13
    10be:	ae 05       	cpc	r26, r14
    10c0:	bf 05       	cpc	r27, r15
    10c2:	d4 f1       	brlt	.+116    	; 0x1138 <__stack+0x8d9>
    10c4:	cb 59       	subi	r28, 0x9B	; 155
    10c6:	de 4f       	sbci	r29, 0xFE	; 254
    10c8:	a8 81       	ld	r26, Y
    10ca:	b9 81       	ldd	r27, Y+1	; 0x01
    10cc:	c5 56       	subi	r28, 0x65	; 101
    10ce:	d1 40       	sbci	r29, 0x01	; 1
    10d0:	a0 0f       	add	r26, r16
    10d2:	b1 1f       	adc	r27, r17
    10d4:	21 e0       	ldi	r18, 0x01	; 1
    10d6:	30 e0       	ldi	r19, 0x00	; 0
    10d8:	2c 0f       	add	r18, r28
    10da:	3d 1f       	adc	r19, r29
    10dc:	a2 0f       	add	r26, r18
    10de:	b3 1f       	adc	r27, r19
    10e0:	f4 01       	movw	r30, r8
    10e2:	5a 2d       	mov	r21, r10
    10e4:	0e 94 a4 2d 	call	0x5b48	; 0x5b48 <__xload_4>
    10e8:	9b 01       	movw	r18, r22
    10ea:	ac 01       	movw	r20, r24
    10ec:	6d 91       	ld	r22, X+
    10ee:	7d 91       	ld	r23, X+
    10f0:	8d 91       	ld	r24, X+
    10f2:	9c 91       	ld	r25, X
    10f4:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    10f8:	9b 01       	movw	r18, r22
    10fa:	ac 01       	movw	r20, r24
    10fc:	c7 5a       	subi	r28, 0xA7	; 167
    10fe:	de 4f       	sbci	r29, 0xFE	; 254
    1100:	68 81       	ld	r22, Y
    1102:	79 81       	ldd	r23, Y+1	; 0x01
    1104:	8a 81       	ldd	r24, Y+2	; 0x02
    1106:	9b 81       	ldd	r25, Y+3	; 0x03
    1108:	c9 55       	subi	r28, 0x59	; 89
    110a:	d1 40       	sbci	r29, 0x01	; 1
    110c:	0e 94 f0 2d 	call	0x5be0	; 0x5be0 <__addsf3>
    1110:	c7 5a       	subi	r28, 0xA7	; 167
    1112:	de 4f       	sbci	r29, 0xFE	; 254
    1114:	68 83       	st	Y, r22
    1116:	79 83       	std	Y+1, r23	; 0x01
    1118:	8a 83       	std	Y+2, r24	; 0x02
    111a:	9b 83       	std	Y+3, r25	; 0x03
    111c:	c9 55       	subi	r28, 0x59	; 89
    111e:	d1 40       	sbci	r29, 0x01	; 1
    1120:	3f ef       	ldi	r19, 0xFF	; 255
    1122:	c3 1a       	sub	r12, r19
    1124:	d3 0a       	sbc	r13, r19
    1126:	e3 0a       	sbc	r14, r19
    1128:	f3 0a       	sbc	r15, r19
    112a:	44 e0       	ldi	r20, 0x04	; 4
    112c:	84 0e       	add	r8, r20
    112e:	91 1c       	adc	r9, r1
    1130:	a1 1c       	adc	r10, r1
    1132:	0c 5f       	subi	r16, 0xFC	; 252
    1134:	1f 4f       	sbci	r17, 0xFF	; 255
    1136:	ab cf       	rjmp	.-170    	; 0x108e <__stack+0x82f>
    1138:	c3 5b       	subi	r28, 0xB3	; 179
    113a:	de 4f       	sbci	r29, 0xFE	; 254
    113c:	a8 81       	ld	r26, Y
    113e:	b9 81       	ldd	r27, Y+1	; 0x01
    1140:	cd 54       	subi	r28, 0x4D	; 77
    1142:	d1 40       	sbci	r29, 0x01	; 1
    1144:	c7 5a       	subi	r28, 0xA7	; 167
    1146:	de 4f       	sbci	r29, 0xFE	; 254
    1148:	88 80       	ld	r8, Y
    114a:	99 80       	ldd	r9, Y+1	; 0x01
    114c:	aa 80       	ldd	r10, Y+2	; 0x02
    114e:	bb 80       	ldd	r11, Y+3	; 0x03
    1150:	c9 55       	subi	r28, 0x59	; 89
    1152:	d1 40       	sbci	r29, 0x01	; 1
    1154:	8d 92       	st	X+, r8
    1156:	9d 92       	st	X+, r9
    1158:	ad 92       	st	X+, r10
    115a:	bd 92       	st	X+, r11
    115c:	c3 5b       	subi	r28, 0xB3	; 179
    115e:	de 4f       	sbci	r29, 0xFE	; 254
    1160:	b9 83       	std	Y+1, r27	; 0x01
    1162:	a8 83       	st	Y, r26
    1164:	cd 54       	subi	r28, 0x4D	; 77
    1166:	d1 40       	sbci	r29, 0x01	; 1
    1168:	cf 5a       	subi	r28, 0xAF	; 175
    116a:	de 4f       	sbci	r29, 0xFE	; 254
    116c:	08 81       	ld	r16, Y
    116e:	19 81       	ldd	r17, Y+1	; 0x01
    1170:	c1 55       	subi	r28, 0x51	; 81
    1172:	d1 40       	sbci	r29, 0x01	; 1
    1174:	0c 5f       	subi	r16, 0xFC	; 252
    1176:	1f 4f       	sbci	r17, 0xFF	; 255
    1178:	cf 5a       	subi	r28, 0xAF	; 175
    117a:	de 4f       	sbci	r29, 0xFE	; 254
    117c:	19 83       	std	Y+1, r17	; 0x01
    117e:	08 83       	st	Y, r16
    1180:	c1 55       	subi	r28, 0x51	; 81
    1182:	d1 40       	sbci	r29, 0x01	; 1
    1184:	cf 5b       	subi	r28, 0xBF	; 191
    1186:	de 4f       	sbci	r29, 0xFE	; 254
    1188:	28 81       	ld	r18, Y
    118a:	39 81       	ldd	r19, Y+1	; 0x01
    118c:	4a 81       	ldd	r20, Y+2	; 0x02
    118e:	5b 81       	ldd	r21, Y+3	; 0x03
    1190:	c1 54       	subi	r28, 0x41	; 65
    1192:	d1 40       	sbci	r29, 0x01	; 1
    1194:	2f 5f       	subi	r18, 0xFF	; 255
    1196:	3f 4f       	sbci	r19, 0xFF	; 255
    1198:	4f 4f       	sbci	r20, 0xFF	; 255
    119a:	5f 4f       	sbci	r21, 0xFF	; 255
    119c:	cf 5b       	subi	r28, 0xBF	; 191
    119e:	de 4f       	sbci	r29, 0xFE	; 254
    11a0:	28 83       	st	Y, r18
    11a2:	39 83       	std	Y+1, r19	; 0x01
    11a4:	4a 83       	std	Y+2, r20	; 0x02
    11a6:	5b 83       	std	Y+3, r21	; 0x03
    11a8:	c1 54       	subi	r28, 0x41	; 65
    11aa:	d1 40       	sbci	r29, 0x01	; 1
    11ac:	3e cf       	rjmp	.-388    	; 0x102a <__stack+0x7cb>
    11ae:	cd 59       	subi	r28, 0x9D	; 157
    11b0:	de 4f       	sbci	r29, 0xFE	; 254
    11b2:	08 81       	ld	r16, Y
    11b4:	19 81       	ldd	r17, Y+1	; 0x01
    11b6:	c3 56       	subi	r28, 0x63	; 99
    11b8:	d1 40       	sbci	r29, 0x01	; 1
    11ba:	03 30       	cpi	r16, 0x03	; 3
    11bc:	11 05       	cpc	r17, r1
    11be:	74 f4       	brge	.+28     	; 0x11dc <__stack+0x97d>
    11c0:	01 30       	cpi	r16, 0x01	; 1
    11c2:	11 05       	cpc	r17, r1
    11c4:	0c f0       	brlt	.+2      	; 0x11c8 <__stack+0x969>
    11c6:	48 c0       	rjmp	.+144    	; 0x1258 <__stack+0x9f9>
    11c8:	01 15       	cp	r16, r1
    11ca:	11 05       	cpc	r17, r1
    11cc:	09 f0       	breq	.+2      	; 0x11d0 <__stack+0x971>
    11ce:	41 c2       	rjmp	.+1154   	; 0x1652 <__stack+0xdf3>
    11d0:	00 e0       	ldi	r16, 0x00	; 0
    11d2:	10 e0       	ldi	r17, 0x00	; 0
    11d4:	60 e0       	ldi	r22, 0x00	; 0
    11d6:	70 e0       	ldi	r23, 0x00	; 0
    11d8:	cb 01       	movw	r24, r22
    11da:	46 c0       	rjmp	.+140    	; 0x1268 <__stack+0xa09>
    11dc:	cd 59       	subi	r28, 0x9D	; 157
    11de:	de 4f       	sbci	r29, 0xFE	; 254
    11e0:	08 81       	ld	r16, Y
    11e2:	19 81       	ldd	r17, Y+1	; 0x01
    11e4:	c3 56       	subi	r28, 0x63	; 99
    11e6:	d1 40       	sbci	r29, 0x01	; 1
    11e8:	03 30       	cpi	r16, 0x03	; 3
    11ea:	11 05       	cpc	r17, r1
    11ec:	09 f0       	breq	.+2      	; 0x11f0 <__stack+0x991>
    11ee:	31 c2       	rjmp	.+1122   	; 0x1652 <__stack+0xdf3>
    11f0:	51 e5       	ldi	r21, 0x51	; 81
    11f2:	85 2e       	mov	r8, r21
    11f4:	91 2c       	mov	r9, r1
    11f6:	8c 0e       	add	r8, r28
    11f8:	9d 1e       	adc	r9, r29
    11fa:	82 0c       	add	r8, r2
    11fc:	93 1c       	adc	r9, r3
    11fe:	cf 5b       	subi	r28, 0xBF	; 191
    1200:	de 4f       	sbci	r29, 0xFE	; 254
    1202:	99 82       	std	Y+1, r9	; 0x01
    1204:	88 82       	st	Y, r8
    1206:	c1 54       	subi	r28, 0x41	; 65
    1208:	d1 40       	sbci	r29, 0x01	; 1
    120a:	14 01       	movw	r2, r8
    120c:	2c ef       	ldi	r18, 0xFC	; 252
    120e:	c1 5a       	subi	r28, 0xA1	; 161
    1210:	de 4f       	sbci	r29, 0xFE	; 254
    1212:	08 81       	ld	r16, Y
    1214:	19 81       	ldd	r17, Y+1	; 0x01
    1216:	cf 55       	subi	r28, 0x5F	; 95
    1218:	d1 40       	sbci	r29, 0x01	; 1
    121a:	20 03       	mulsu	r18, r16
    121c:	40 01       	movw	r8, r0
    121e:	21 9f       	mul	r18, r17
    1220:	90 0c       	add	r9, r0
    1222:	11 24       	eor	r1, r1
    1224:	cd 59       	subi	r28, 0x9D	; 157
    1226:	de 4f       	sbci	r29, 0xFE	; 254
    1228:	99 82       	std	Y+1, r9	; 0x01
    122a:	88 82       	st	Y, r8
    122c:	c3 56       	subi	r28, 0x63	; 99
    122e:	d1 40       	sbci	r29, 0x01	; 1
    1230:	d3 01       	movw	r26, r6
    1232:	c2 01       	movw	r24, r4
    1234:	01 97       	sbiw	r24, 0x01	; 1
    1236:	a1 09       	sbc	r26, r1
    1238:	b1 09       	sbc	r27, r1
    123a:	5c 01       	movw	r10, r24
    123c:	aa 0c       	add	r10, r10
    123e:	bb 1c       	adc	r11, r11
    1240:	aa 0c       	add	r10, r10
    1242:	bb 1c       	adc	r11, r11
    1244:	c7 5a       	subi	r28, 0xA7	; 167
    1246:	de 4f       	sbci	r29, 0xFE	; 254
    1248:	b9 82       	std	Y+1, r11	; 0x01
    124a:	a8 82       	st	Y, r10
    124c:	c9 55       	subi	r28, 0x59	; 89
    124e:	d1 40       	sbci	r29, 0x01	; 1
    1250:	81 01       	movw	r16, r2
    1252:	73 01       	movw	r14, r6
    1254:	62 01       	movw	r12, r4
    1256:	b0 c0       	rjmp	.+352    	; 0x13b8 <__stack+0xb59>
    1258:	73 01       	movw	r14, r6
    125a:	62 01       	movw	r12, r4
    125c:	00 e0       	ldi	r16, 0x00	; 0
    125e:	10 e0       	ldi	r17, 0x00	; 0
    1260:	60 e0       	ldi	r22, 0x00	; 0
    1262:	70 e0       	ldi	r23, 0x00	; 0
    1264:	cb 01       	movw	r24, r22
    1266:	35 c0       	rjmp	.+106    	; 0x12d2 <__stack+0xa73>
    1268:	77 fc       	sbrc	r7, 7
    126a:	18 c0       	rjmp	.+48     	; 0x129c <__stack+0xa3d>
    126c:	f1 01       	movw	r30, r2
    126e:	e0 0f       	add	r30, r16
    1270:	f1 1f       	adc	r31, r17
    1272:	41 e5       	ldi	r20, 0x51	; 81
    1274:	c4 2e       	mov	r12, r20
    1276:	d1 2c       	mov	r13, r1
    1278:	cc 0e       	add	r12, r28
    127a:	dd 1e       	adc	r13, r29
    127c:	ec 0d       	add	r30, r12
    127e:	fd 1d       	adc	r31, r13
    1280:	20 81       	ld	r18, Z
    1282:	31 81       	ldd	r19, Z+1	; 0x01
    1284:	42 81       	ldd	r20, Z+2	; 0x02
    1286:	53 81       	ldd	r21, Z+3	; 0x03
    1288:	0e 94 f0 2d 	call	0x5be0	; 0x5be0 <__addsf3>
    128c:	21 e0       	ldi	r18, 0x01	; 1
    128e:	42 1a       	sub	r4, r18
    1290:	51 08       	sbc	r5, r1
    1292:	61 08       	sbc	r6, r1
    1294:	71 08       	sbc	r7, r1
    1296:	04 50       	subi	r16, 0x04	; 4
    1298:	11 09       	sbc	r17, r1
    129a:	e6 cf       	rjmp	.-52     	; 0x1268 <__stack+0xa09>
    129c:	cb 5b       	subi	r28, 0xBB	; 187
    129e:	de 4f       	sbci	r29, 0xFE	; 254
    12a0:	88 80       	ld	r8, Y
    12a2:	99 80       	ldd	r9, Y+1	; 0x01
    12a4:	aa 80       	ldd	r10, Y+2	; 0x02
    12a6:	bb 80       	ldd	r11, Y+3	; 0x03
    12a8:	c5 54       	subi	r28, 0x45	; 69
    12aa:	d1 40       	sbci	r29, 0x01	; 1
    12ac:	dc 01       	movw	r26, r24
    12ae:	cb 01       	movw	r24, r22
    12b0:	81 14       	cp	r8, r1
    12b2:	91 04       	cpc	r9, r1
    12b4:	a1 04       	cpc	r10, r1
    12b6:	b1 04       	cpc	r11, r1
    12b8:	09 f0       	breq	.+2      	; 0x12bc <__stack+0xa5d>
    12ba:	b0 58       	subi	r27, 0x80	; 128
    12bc:	c3 5a       	subi	r28, 0xA3	; 163
    12be:	de 4f       	sbci	r29, 0xFE	; 254
    12c0:	e8 81       	ld	r30, Y
    12c2:	f9 81       	ldd	r31, Y+1	; 0x01
    12c4:	cd 55       	subi	r28, 0x5D	; 93
    12c6:	d1 40       	sbci	r29, 0x01	; 1
    12c8:	80 83       	st	Z, r24
    12ca:	91 83       	std	Z+1, r25	; 0x01
    12cc:	a2 83       	std	Z+2, r26	; 0x02
    12ce:	b3 83       	std	Z+3, r27	; 0x03
    12d0:	c0 c1       	rjmp	.+896    	; 0x1652 <__stack+0xdf3>
    12d2:	f7 fc       	sbrc	r15, 7
    12d4:	18 c0       	rjmp	.+48     	; 0x1306 <__stack+0xaa7>
    12d6:	f1 01       	movw	r30, r2
    12d8:	e0 0f       	add	r30, r16
    12da:	f1 1f       	adc	r31, r17
    12dc:	31 e5       	ldi	r19, 0x51	; 81
    12de:	83 2e       	mov	r8, r19
    12e0:	91 2c       	mov	r9, r1
    12e2:	8c 0e       	add	r8, r28
    12e4:	9d 1e       	adc	r9, r29
    12e6:	e8 0d       	add	r30, r8
    12e8:	f9 1d       	adc	r31, r9
    12ea:	20 81       	ld	r18, Z
    12ec:	31 81       	ldd	r19, Z+1	; 0x01
    12ee:	42 81       	ldd	r20, Z+2	; 0x02
    12f0:	53 81       	ldd	r21, Z+3	; 0x03
    12f2:	0e 94 f0 2d 	call	0x5be0	; 0x5be0 <__addsf3>
    12f6:	21 e0       	ldi	r18, 0x01	; 1
    12f8:	c2 1a       	sub	r12, r18
    12fa:	d1 08       	sbc	r13, r1
    12fc:	e1 08       	sbc	r14, r1
    12fe:	f1 08       	sbc	r15, r1
    1300:	04 50       	subi	r16, 0x04	; 4
    1302:	11 09       	sbc	r17, r1
    1304:	e6 cf       	rjmp	.-52     	; 0x12d2 <__stack+0xa73>
    1306:	cb 5b       	subi	r28, 0xBB	; 187
    1308:	de 4f       	sbci	r29, 0xFE	; 254
    130a:	88 80       	ld	r8, Y
    130c:	99 80       	ldd	r9, Y+1	; 0x01
    130e:	aa 80       	ldd	r10, Y+2	; 0x02
    1310:	bb 80       	ldd	r11, Y+3	; 0x03
    1312:	c5 54       	subi	r28, 0x45	; 69
    1314:	d1 40       	sbci	r29, 0x01	; 1
    1316:	8b 01       	movw	r16, r22
    1318:	9c 01       	movw	r18, r24
    131a:	89 28       	or	r8, r9
    131c:	8a 28       	or	r8, r10
    131e:	8b 28       	or	r8, r11
    1320:	09 f0       	breq	.+2      	; 0x1324 <__stack+0xac5>
    1322:	30 58       	subi	r19, 0x80	; 128
    1324:	c3 5a       	subi	r28, 0xA3	; 163
    1326:	de 4f       	sbci	r29, 0xFE	; 254
    1328:	a8 81       	ld	r26, Y
    132a:	b9 81       	ldd	r27, Y+1	; 0x01
    132c:	cd 55       	subi	r28, 0x5D	; 93
    132e:	d1 40       	sbci	r29, 0x01	; 1
    1330:	0d 93       	st	X+, r16
    1332:	1d 93       	st	X+, r17
    1334:	2d 93       	st	X+, r18
    1336:	3c 93       	st	X, r19
    1338:	13 97       	sbiw	r26, 0x03	; 3
    133a:	9b 01       	movw	r18, r22
    133c:	ac 01       	movw	r20, r24
    133e:	8e 01       	movw	r16, r28
    1340:	0f 5a       	subi	r16, 0xAF	; 175
    1342:	1f 4f       	sbci	r17, 0xFF	; 255
    1344:	f8 01       	movw	r30, r16
    1346:	61 91       	ld	r22, Z+
    1348:	71 91       	ld	r23, Z+
    134a:	81 91       	ld	r24, Z+
    134c:	91 91       	ld	r25, Z+
    134e:	8f 01       	movw	r16, r30
    1350:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__subsf3>
    1354:	c1 2c       	mov	r12, r1
    1356:	d1 2c       	mov	r13, r1
    1358:	76 01       	movw	r14, r12
    135a:	c3 94       	inc	r12
    135c:	4c 14       	cp	r4, r12
    135e:	5d 04       	cpc	r5, r13
    1360:	6e 04       	cpc	r6, r14
    1362:	7f 04       	cpc	r7, r15
    1364:	74 f0       	brlt	.+28     	; 0x1382 <__stack+0xb23>
    1366:	d8 01       	movw	r26, r16
    1368:	2d 91       	ld	r18, X+
    136a:	3d 91       	ld	r19, X+
    136c:	4d 91       	ld	r20, X+
    136e:	5d 91       	ld	r21, X+
    1370:	8d 01       	movw	r16, r26
    1372:	0e 94 f0 2d 	call	0x5be0	; 0x5be0 <__addsf3>
    1376:	bf ef       	ldi	r27, 0xFF	; 255
    1378:	cb 1a       	sub	r12, r27
    137a:	db 0a       	sbc	r13, r27
    137c:	eb 0a       	sbc	r14, r27
    137e:	fb 0a       	sbc	r15, r27
    1380:	ed cf       	rjmp	.-38     	; 0x135c <__stack+0xafd>
    1382:	cb 5b       	subi	r28, 0xBB	; 187
    1384:	de 4f       	sbci	r29, 0xFE	; 254
    1386:	88 80       	ld	r8, Y
    1388:	99 80       	ldd	r9, Y+1	; 0x01
    138a:	aa 80       	ldd	r10, Y+2	; 0x02
    138c:	bb 80       	ldd	r11, Y+3	; 0x03
    138e:	c5 54       	subi	r28, 0x45	; 69
    1390:	d1 40       	sbci	r29, 0x01	; 1
    1392:	dc 01       	movw	r26, r24
    1394:	cb 01       	movw	r24, r22
    1396:	81 14       	cp	r8, r1
    1398:	91 04       	cpc	r9, r1
    139a:	a1 04       	cpc	r10, r1
    139c:	b1 04       	cpc	r11, r1
    139e:	09 f0       	breq	.+2      	; 0x13a2 <__stack+0xb43>
    13a0:	b0 58       	subi	r27, 0x80	; 128
    13a2:	c3 5a       	subi	r28, 0xA3	; 163
    13a4:	de 4f       	sbci	r29, 0xFE	; 254
    13a6:	e8 81       	ld	r30, Y
    13a8:	f9 81       	ldd	r31, Y+1	; 0x01
    13aa:	cd 55       	subi	r28, 0x5D	; 93
    13ac:	d1 40       	sbci	r29, 0x01	; 1
    13ae:	84 83       	std	Z+4, r24	; 0x04
    13b0:	95 83       	std	Z+5, r25	; 0x05
    13b2:	a6 83       	std	Z+6, r26	; 0x06
    13b4:	b7 83       	std	Z+7, r27	; 0x07
    13b6:	4d c1       	rjmp	.+666    	; 0x1652 <__stack+0xdf3>
    13b8:	1c 14       	cp	r1, r12
    13ba:	1d 04       	cpc	r1, r13
    13bc:	1e 04       	cpc	r1, r14
    13be:	1f 04       	cpc	r1, r15
    13c0:	0c f0       	brlt	.+2      	; 0x13c4 <__stack+0xb65>
    13c2:	6d c0       	rjmp	.+218    	; 0x149e <__stack+0xc3f>
    13c4:	f1 e0       	ldi	r31, 0x01	; 1
    13c6:	cf 1a       	sub	r12, r31
    13c8:	d1 08       	sbc	r13, r1
    13ca:	e1 08       	sbc	r14, r1
    13cc:	f1 08       	sbc	r15, r1
    13ce:	cd 59       	subi	r28, 0x9D	; 157
    13d0:	de 4f       	sbci	r29, 0xFE	; 254
    13d2:	88 81       	ld	r24, Y
    13d4:	99 81       	ldd	r25, Y+1	; 0x01
    13d6:	c3 56       	subi	r28, 0x63	; 99
    13d8:	d1 40       	sbci	r29, 0x01	; 1
    13da:	80 0f       	add	r24, r16
    13dc:	91 1f       	adc	r25, r17
    13de:	c7 5a       	subi	r28, 0xA7	; 167
    13e0:	de 4f       	sbci	r29, 0xFE	; 254
    13e2:	88 80       	ld	r8, Y
    13e4:	99 80       	ldd	r9, Y+1	; 0x01
    13e6:	c9 55       	subi	r28, 0x59	; 89
    13e8:	d1 40       	sbci	r29, 0x01	; 1
    13ea:	88 0e       	add	r8, r24
    13ec:	99 1e       	adc	r9, r25
    13ee:	cf 5a       	subi	r28, 0xAF	; 175
    13f0:	de 4f       	sbci	r29, 0xFE	; 254
    13f2:	99 82       	std	Y+1, r9	; 0x01
    13f4:	88 82       	st	Y, r8
    13f6:	c1 55       	subi	r28, 0x51	; 81
    13f8:	d1 40       	sbci	r29, 0x01	; 1
    13fa:	d4 01       	movw	r26, r8
    13fc:	8d 90       	ld	r8, X+
    13fe:	9d 90       	ld	r9, X+
    1400:	ad 90       	ld	r10, X+
    1402:	bc 90       	ld	r11, X
    1404:	cb 5a       	subi	r28, 0xAB	; 171
    1406:	de 4f       	sbci	r29, 0xFE	; 254
    1408:	88 82       	st	Y, r8
    140a:	99 82       	std	Y+1, r9	; 0x01
    140c:	aa 82       	std	Y+2, r10	; 0x02
    140e:	bb 82       	std	Y+3, r11	; 0x03
    1410:	c5 55       	subi	r28, 0x55	; 85
    1412:	d1 40       	sbci	r29, 0x01	; 1
    1414:	f8 01       	movw	r30, r16
    1416:	80 80       	ld	r8, Z
    1418:	91 80       	ldd	r9, Z+1	; 0x01
    141a:	a2 80       	ldd	r10, Z+2	; 0x02
    141c:	b3 80       	ldd	r11, Z+3	; 0x03
    141e:	a5 01       	movw	r20, r10
    1420:	94 01       	movw	r18, r8
    1422:	cb 5a       	subi	r28, 0xAB	; 171
    1424:	de 4f       	sbci	r29, 0xFE	; 254
    1426:	68 81       	ld	r22, Y
    1428:	79 81       	ldd	r23, Y+1	; 0x01
    142a:	8a 81       	ldd	r24, Y+2	; 0x02
    142c:	9b 81       	ldd	r25, Y+3	; 0x03
    142e:	c5 55       	subi	r28, 0x55	; 85
    1430:	d1 40       	sbci	r29, 0x01	; 1
    1432:	0e 94 f0 2d 	call	0x5be0	; 0x5be0 <__addsf3>
    1436:	c3 5b       	subi	r28, 0xB3	; 179
    1438:	de 4f       	sbci	r29, 0xFE	; 254
    143a:	68 83       	st	Y, r22
    143c:	79 83       	std	Y+1, r23	; 0x01
    143e:	8a 83       	std	Y+2, r24	; 0x02
    1440:	9b 83       	std	Y+3, r25	; 0x03
    1442:	cd 54       	subi	r28, 0x4D	; 77
    1444:	d1 40       	sbci	r29, 0x01	; 1
    1446:	9b 01       	movw	r18, r22
    1448:	ac 01       	movw	r20, r24
    144a:	cb 5a       	subi	r28, 0xAB	; 171
    144c:	de 4f       	sbci	r29, 0xFE	; 254
    144e:	68 81       	ld	r22, Y
    1450:	79 81       	ldd	r23, Y+1	; 0x01
    1452:	8a 81       	ldd	r24, Y+2	; 0x02
    1454:	9b 81       	ldd	r25, Y+3	; 0x03
    1456:	c5 55       	subi	r28, 0x55	; 85
    1458:	d1 40       	sbci	r29, 0x01	; 1
    145a:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__subsf3>
    145e:	a5 01       	movw	r20, r10
    1460:	94 01       	movw	r18, r8
    1462:	0e 94 f0 2d 	call	0x5be0	; 0x5be0 <__addsf3>
    1466:	d8 01       	movw	r26, r16
    1468:	6d 93       	st	X+, r22
    146a:	7d 93       	st	X+, r23
    146c:	8d 93       	st	X+, r24
    146e:	9c 93       	st	X, r25
    1470:	13 97       	sbiw	r26, 0x03	; 3
    1472:	c3 5b       	subi	r28, 0xB3	; 179
    1474:	de 4f       	sbci	r29, 0xFE	; 254
    1476:	88 80       	ld	r8, Y
    1478:	99 80       	ldd	r9, Y+1	; 0x01
    147a:	aa 80       	ldd	r10, Y+2	; 0x02
    147c:	bb 80       	ldd	r11, Y+3	; 0x03
    147e:	cd 54       	subi	r28, 0x4D	; 77
    1480:	d1 40       	sbci	r29, 0x01	; 1
    1482:	cf 5a       	subi	r28, 0xAF	; 175
    1484:	de 4f       	sbci	r29, 0xFE	; 254
    1486:	a8 81       	ld	r26, Y
    1488:	b9 81       	ldd	r27, Y+1	; 0x01
    148a:	c1 55       	subi	r28, 0x51	; 81
    148c:	d1 40       	sbci	r29, 0x01	; 1
    148e:	8d 92       	st	X+, r8
    1490:	9d 92       	st	X+, r9
    1492:	ad 92       	st	X+, r10
    1494:	bc 92       	st	X, r11
    1496:	13 97       	sbiw	r26, 0x03	; 3
    1498:	04 50       	subi	r16, 0x04	; 4
    149a:	11 09       	sbc	r17, r1
    149c:	8d cf       	rjmp	.-230    	; 0x13b8 <__stack+0xb59>
    149e:	73 01       	movw	r14, r6
    14a0:	62 01       	movw	r12, r4
    14a2:	e2 e0       	ldi	r30, 0x02	; 2
    14a4:	ce 16       	cp	r12, r30
    14a6:	d1 04       	cpc	r13, r1
    14a8:	e1 04       	cpc	r14, r1
    14aa:	f1 04       	cpc	r15, r1
    14ac:	0c f4       	brge	.+2      	; 0x14b0 <__stack+0xc51>
    14ae:	63 c0       	rjmp	.+198    	; 0x1576 <__stack+0xd17>
    14b0:	b1 e0       	ldi	r27, 0x01	; 1
    14b2:	cb 1a       	sub	r12, r27
    14b4:	d1 08       	sbc	r13, r1
    14b6:	e1 08       	sbc	r14, r1
    14b8:	f1 08       	sbc	r15, r1
    14ba:	cd 59       	subi	r28, 0x9D	; 157
    14bc:	de 4f       	sbci	r29, 0xFE	; 254
    14be:	08 81       	ld	r16, Y
    14c0:	19 81       	ldd	r17, Y+1	; 0x01
    14c2:	c3 56       	subi	r28, 0x63	; 99
    14c4:	d1 40       	sbci	r29, 0x01	; 1
    14c6:	02 0d       	add	r16, r2
    14c8:	13 1d       	adc	r17, r3
    14ca:	c7 5a       	subi	r28, 0xA7	; 167
    14cc:	de 4f       	sbci	r29, 0xFE	; 254
    14ce:	88 80       	ld	r8, Y
    14d0:	99 80       	ldd	r9, Y+1	; 0x01
    14d2:	c9 55       	subi	r28, 0x59	; 89
    14d4:	d1 40       	sbci	r29, 0x01	; 1
    14d6:	08 0d       	add	r16, r8
    14d8:	19 1d       	adc	r17, r9
    14da:	d8 01       	movw	r26, r16
    14dc:	8d 90       	ld	r8, X+
    14de:	9d 90       	ld	r9, X+
    14e0:	ad 90       	ld	r10, X+
    14e2:	bc 90       	ld	r11, X
    14e4:	cb 5a       	subi	r28, 0xAB	; 171
    14e6:	de 4f       	sbci	r29, 0xFE	; 254
    14e8:	88 82       	st	Y, r8
    14ea:	99 82       	std	Y+1, r9	; 0x01
    14ec:	aa 82       	std	Y+2, r10	; 0x02
    14ee:	bb 82       	std	Y+3, r11	; 0x03
    14f0:	c5 55       	subi	r28, 0x55	; 85
    14f2:	d1 40       	sbci	r29, 0x01	; 1
    14f4:	f1 01       	movw	r30, r2
    14f6:	80 80       	ld	r8, Z
    14f8:	91 80       	ldd	r9, Z+1	; 0x01
    14fa:	a2 80       	ldd	r10, Z+2	; 0x02
    14fc:	b3 80       	ldd	r11, Z+3	; 0x03
    14fe:	a5 01       	movw	r20, r10
    1500:	94 01       	movw	r18, r8
    1502:	cb 5a       	subi	r28, 0xAB	; 171
    1504:	de 4f       	sbci	r29, 0xFE	; 254
    1506:	68 81       	ld	r22, Y
    1508:	79 81       	ldd	r23, Y+1	; 0x01
    150a:	8a 81       	ldd	r24, Y+2	; 0x02
    150c:	9b 81       	ldd	r25, Y+3	; 0x03
    150e:	c5 55       	subi	r28, 0x55	; 85
    1510:	d1 40       	sbci	r29, 0x01	; 1
    1512:	0e 94 f0 2d 	call	0x5be0	; 0x5be0 <__addsf3>
    1516:	cf 5a       	subi	r28, 0xAF	; 175
    1518:	de 4f       	sbci	r29, 0xFE	; 254
    151a:	68 83       	st	Y, r22
    151c:	79 83       	std	Y+1, r23	; 0x01
    151e:	8a 83       	std	Y+2, r24	; 0x02
    1520:	9b 83       	std	Y+3, r25	; 0x03
    1522:	c1 55       	subi	r28, 0x51	; 81
    1524:	d1 40       	sbci	r29, 0x01	; 1
    1526:	9b 01       	movw	r18, r22
    1528:	ac 01       	movw	r20, r24
    152a:	cb 5a       	subi	r28, 0xAB	; 171
    152c:	de 4f       	sbci	r29, 0xFE	; 254
    152e:	68 81       	ld	r22, Y
    1530:	79 81       	ldd	r23, Y+1	; 0x01
    1532:	8a 81       	ldd	r24, Y+2	; 0x02
    1534:	9b 81       	ldd	r25, Y+3	; 0x03
    1536:	c5 55       	subi	r28, 0x55	; 85
    1538:	d1 40       	sbci	r29, 0x01	; 1
    153a:	0e 94 ef 2d 	call	0x5bde	; 0x5bde <__subsf3>
    153e:	a5 01       	movw	r20, r10
    1540:	94 01       	movw	r18, r8
    1542:	0e 94 f0 2d 	call	0x5be0	; 0x5be0 <__addsf3>
    1546:	d1 01       	movw	r26, r2
    1548:	6d 93       	st	X+, r22
    154a:	7d 93       	st	X+, r23
    154c:	8d 93       	st	X+, r24
    154e:	9c 93       	st	X, r25
    1550:	13 97       	sbiw	r26, 0x03	; 3
    1552:	cf 5a       	subi	r28, 0xAF	; 175
    1554:	de 4f       	sbci	r29, 0xFE	; 254
    1556:	88 80       	ld	r8, Y
    1558:	99 80       	ldd	r9, Y+1	; 0x01
    155a:	aa 80       	ldd	r10, Y+2	; 0x02
    155c:	bb 80       	ldd	r11, Y+3	; 0x03
    155e:	c1 55       	subi	r28, 0x51	; 81
    1560:	d1 40       	sbci	r29, 0x01	; 1
    1562:	d8 01       	movw	r26, r16
    1564:	8d 92       	st	X+, r8
    1566:	9d 92       	st	X+, r9
    1568:	ad 92       	st	X+, r10
    156a:	bc 92       	st	X, r11
    156c:	13 97       	sbiw	r26, 0x03	; 3
    156e:	b4 e0       	ldi	r27, 0x04	; 4
    1570:	2b 1a       	sub	r2, r27
    1572:	31 08       	sbc	r3, r1
    1574:	96 cf       	rjmp	.-212    	; 0x14a2 <__stack+0xc43>
    1576:	00 e0       	ldi	r16, 0x00	; 0
    1578:	10 e0       	ldi	r17, 0x00	; 0
    157a:	60 e0       	ldi	r22, 0x00	; 0
    157c:	70 e0       	ldi	r23, 0x00	; 0
    157e:	cb 01       	movw	r24, r22
    1580:	22 e0       	ldi	r18, 0x02	; 2
    1582:	42 16       	cp	r4, r18
    1584:	51 04       	cpc	r5, r1
    1586:	61 04       	cpc	r6, r1
    1588:	71 04       	cpc	r7, r1
    158a:	b4 f0       	brlt	.+44     	; 0x15b8 <__stack+0xd59>
    158c:	cf 5b       	subi	r28, 0xBF	; 191
    158e:	de 4f       	sbci	r29, 0xFE	; 254
    1590:	e8 81       	ld	r30, Y
    1592:	f9 81       	ldd	r31, Y+1	; 0x01
    1594:	c1 54       	subi	r28, 0x41	; 65
    1596:	d1 40       	sbci	r29, 0x01	; 1
    1598:	e0 0f       	add	r30, r16
    159a:	f1 1f       	adc	r31, r17
    159c:	20 81       	ld	r18, Z
    159e:	31 81       	ldd	r19, Z+1	; 0x01
    15a0:	42 81       	ldd	r20, Z+2	; 0x02
    15a2:	53 81       	ldd	r21, Z+3	; 0x03
    15a4:	0e 94 f0 2d 	call	0x5be0	; 0x5be0 <__addsf3>
    15a8:	f1 e0       	ldi	r31, 0x01	; 1
    15aa:	4f 1a       	sub	r4, r31
    15ac:	51 08       	sbc	r5, r1
    15ae:	61 08       	sbc	r6, r1
    15b0:	71 08       	sbc	r7, r1
    15b2:	04 50       	subi	r16, 0x04	; 4
    15b4:	11 09       	sbc	r17, r1
    15b6:	e4 cf       	rjmp	.-56     	; 0x1580 <__stack+0xd21>
    15b8:	cb 5b       	subi	r28, 0xBB	; 187
    15ba:	de 4f       	sbci	r29, 0xFE	; 254
    15bc:	88 80       	ld	r8, Y
    15be:	99 80       	ldd	r9, Y+1	; 0x01
    15c0:	aa 80       	ldd	r10, Y+2	; 0x02
    15c2:	bb 80       	ldd	r11, Y+3	; 0x03
    15c4:	c5 54       	subi	r28, 0x45	; 69
    15c6:	d1 40       	sbci	r29, 0x01	; 1
    15c8:	65 96       	adiw	r28, 0x15	; 21
    15ca:	0c ad       	ldd	r16, Y+60	; 0x3c
    15cc:	1d ad       	ldd	r17, Y+61	; 0x3d
    15ce:	2e ad       	ldd	r18, Y+62	; 0x3e
    15d0:	3f ad       	ldd	r19, Y+63	; 0x3f
    15d2:	65 97       	sbiw	r28, 0x15	; 21
    15d4:	81 14       	cp	r8, r1
    15d6:	91 04       	cpc	r9, r1
    15d8:	a1 04       	cpc	r10, r1
    15da:	b1 04       	cpc	r11, r1
    15dc:	e9 f4       	brne	.+58     	; 0x1618 <__stack+0xdb9>
    15de:	c3 5a       	subi	r28, 0xA3	; 163
    15e0:	de 4f       	sbci	r29, 0xFE	; 254
    15e2:	a8 81       	ld	r26, Y
    15e4:	b9 81       	ldd	r27, Y+1	; 0x01
    15e6:	cd 55       	subi	r28, 0x5D	; 93
    15e8:	d1 40       	sbci	r29, 0x01	; 1
    15ea:	0d 93       	st	X+, r16
    15ec:	1d 93       	st	X+, r17
    15ee:	2d 93       	st	X+, r18
    15f0:	3c 93       	st	X, r19
    15f2:	13 97       	sbiw	r26, 0x03	; 3
    15f4:	69 96       	adiw	r28, 0x19	; 25
    15f6:	0c ad       	ldd	r16, Y+60	; 0x3c
    15f8:	1d ad       	ldd	r17, Y+61	; 0x3d
    15fa:	2e ad       	ldd	r18, Y+62	; 0x3e
    15fc:	3f ad       	ldd	r19, Y+63	; 0x3f
    15fe:	69 97       	sbiw	r28, 0x19	; 25
    1600:	fd 01       	movw	r30, r26
    1602:	04 83       	std	Z+4, r16	; 0x04
    1604:	15 83       	std	Z+5, r17	; 0x05
    1606:	26 83       	std	Z+6, r18	; 0x06
    1608:	37 83       	std	Z+7, r19	; 0x07
    160a:	18 96       	adiw	r26, 0x08	; 8
    160c:	6d 93       	st	X+, r22
    160e:	7d 93       	st	X+, r23
    1610:	8d 93       	st	X+, r24
    1612:	9c 93       	st	X, r25
    1614:	1b 97       	sbiw	r26, 0x0b	; 11
    1616:	1d c0       	rjmp	.+58     	; 0x1652 <__stack+0xdf3>
    1618:	30 58       	subi	r19, 0x80	; 128
    161a:	c3 5a       	subi	r28, 0xA3	; 163
    161c:	de 4f       	sbci	r29, 0xFE	; 254
    161e:	e8 81       	ld	r30, Y
    1620:	f9 81       	ldd	r31, Y+1	; 0x01
    1622:	cd 55       	subi	r28, 0x5D	; 93
    1624:	d1 40       	sbci	r29, 0x01	; 1
    1626:	00 83       	st	Z, r16
    1628:	11 83       	std	Z+1, r17	; 0x01
    162a:	22 83       	std	Z+2, r18	; 0x02
    162c:	33 83       	std	Z+3, r19	; 0x03
    162e:	69 96       	adiw	r28, 0x19	; 25
    1630:	0c ad       	ldd	r16, Y+60	; 0x3c
    1632:	1d ad       	ldd	r17, Y+61	; 0x3d
    1634:	2e ad       	ldd	r18, Y+62	; 0x3e
    1636:	3f ad       	ldd	r19, Y+63	; 0x3f
    1638:	69 97       	sbiw	r28, 0x19	; 25
    163a:	30 58       	subi	r19, 0x80	; 128
    163c:	04 83       	std	Z+4, r16	; 0x04
    163e:	15 83       	std	Z+5, r17	; 0x05
    1640:	26 83       	std	Z+6, r18	; 0x06
    1642:	37 83       	std	Z+7, r19	; 0x07
    1644:	dc 01       	movw	r26, r24
    1646:	cb 01       	movw	r24, r22
    1648:	b0 58       	subi	r27, 0x80	; 128
    164a:	80 87       	std	Z+8, r24	; 0x08
    164c:	91 87       	std	Z+9, r25	; 0x09
    164e:	a2 87       	std	Z+10, r26	; 0x0a
    1650:	b3 87       	std	Z+11, r27	; 0x0b
    1652:	c7 5b       	subi	r28, 0xB7	; 183
    1654:	de 4f       	sbci	r29, 0xFE	; 254
    1656:	88 81       	ld	r24, Y
    1658:	99 81       	ldd	r25, Y+1	; 0x01
    165a:	c9 54       	subi	r28, 0x49	; 73
    165c:	d1 40       	sbci	r29, 0x01	; 1
    165e:	87 70       	andi	r24, 0x07	; 7
    1660:	99 27       	eor	r25, r25
    1662:	cf 58       	subi	r28, 0x8F	; 143
    1664:	de 4f       	sbci	r29, 0xFE	; 254
    1666:	e2 e1       	ldi	r30, 0x12	; 18
    1668:	0c 94 75 2c 	jmp	0x58ea	; 0x58ea <__epilogue_restores__>

Disassembly of section .text:

00005c6a <__cmpsf2>:
    5c6a:	0e 94 7a 2b 	call	0x56f4	; 0x56f4 <__fp_cmp>
    5c6e:	08 f4       	brcc	.+2      	; 0x5c72 <__cmpsf2+0x8>
    5c70:	81 e0       	ldi	r24, 0x01	; 1
    5c72:	08 95       	ret

Disassembly of section .text:

000056f4 <__fp_cmp>:
    56f4:	99 0f       	add	r25, r25
    56f6:	00 08       	sbc	r0, r0
    56f8:	55 0f       	add	r21, r21
    56fa:	aa 0b       	sbc	r26, r26
    56fc:	e0 e8       	ldi	r30, 0x80	; 128
    56fe:	fe ef       	ldi	r31, 0xFE	; 254
    5700:	16 16       	cp	r1, r22
    5702:	17 06       	cpc	r1, r23
    5704:	e8 07       	cpc	r30, r24
    5706:	f9 07       	cpc	r31, r25
    5708:	c0 f0       	brcs	.+48     	; 0x573a <__fp_cmp+0x46>
    570a:	12 16       	cp	r1, r18
    570c:	13 06       	cpc	r1, r19
    570e:	e4 07       	cpc	r30, r20
    5710:	f5 07       	cpc	r31, r21
    5712:	98 f0       	brcs	.+38     	; 0x573a <__fp_cmp+0x46>
    5714:	62 1b       	sub	r22, r18
    5716:	73 0b       	sbc	r23, r19
    5718:	84 0b       	sbc	r24, r20
    571a:	95 0b       	sbc	r25, r21
    571c:	39 f4       	brne	.+14     	; 0x572c <__fp_cmp+0x38>
    571e:	0a 26       	eor	r0, r26
    5720:	61 f0       	breq	.+24     	; 0x573a <__fp_cmp+0x46>
    5722:	23 2b       	or	r18, r19
    5724:	24 2b       	or	r18, r20
    5726:	25 2b       	or	r18, r21
    5728:	21 f4       	brne	.+8      	; 0x5732 <__fp_cmp+0x3e>
    572a:	08 95       	ret
    572c:	0a 26       	eor	r0, r26
    572e:	09 f4       	brne	.+2      	; 0x5732 <__fp_cmp+0x3e>
    5730:	a1 40       	sbci	r26, 0x01	; 1
    5732:	a6 95       	lsr	r26
    5734:	8f ef       	ldi	r24, 0xFF	; 255
    5736:	81 1d       	adc	r24, r1
    5738:	81 1d       	adc	r24, r1
    573a:	08 95       	ret

Disassembly of section .text.floorf:

00004600 <floorf>:
    4600:	4f 92       	push	r4
    4602:	5f 92       	push	r5
    4604:	6f 92       	push	r6
    4606:	7f 92       	push	r7
    4608:	8f 92       	push	r8
    460a:	9f 92       	push	r9
    460c:	af 92       	push	r10
    460e:	bf 92       	push	r11
    4610:	cf 92       	push	r12
    4612:	df 92       	push	r13
    4614:	ef 92       	push	r14
    4616:	ff 92       	push	r15
    4618:	cf 93       	push	r28
    461a:	df 93       	push	r29
    461c:	cd b7       	in	r28, 0x3d	; 61
    461e:	de b7       	in	r29, 0x3e	; 62
    4620:	28 97       	sbiw	r28, 0x08	; 8
    4622:	0f b6       	in	r0, 0x3f	; 63
    4624:	f8 94       	cli
    4626:	de bf       	out	0x3e, r29	; 62
    4628:	0f be       	out	0x3f, r0	; 63
    462a:	cd bf       	out	0x3d, r28	; 61
    462c:	6b 01       	movw	r12, r22
    462e:	7c 01       	movw	r14, r24
    4630:	dc 01       	movw	r26, r24
    4632:	cb 01       	movw	r24, r22
    4634:	47 e1       	ldi	r20, 0x17	; 23
    4636:	b6 95       	lsr	r27
    4638:	a7 95       	ror	r26
    463a:	97 95       	ror	r25
    463c:	87 95       	ror	r24
    463e:	4a 95       	dec	r20
    4640:	d1 f7       	brne	.-12     	; 0x4636 <floorf+0x36>
    4642:	99 27       	eor	r25, r25
    4644:	8f 57       	subi	r24, 0x7F	; 127
    4646:	91 09       	sbc	r25, r1
    4648:	87 31       	cpi	r24, 0x17	; 23
    464a:	91 05       	cpc	r25, r1
    464c:	9c f5       	brge	.+102    	; 0x46b4 <floorf+0xb4>
    464e:	97 fd       	sbrc	r25, 7
    4650:	36 c0       	rjmp	.+108    	; 0x46be <floorf+0xbe>
    4652:	88 24       	eor	r8, r8
    4654:	8a 94       	dec	r8
    4656:	98 2c       	mov	r9, r8
    4658:	3f e7       	ldi	r19, 0x7F	; 127
    465a:	a3 2e       	mov	r10, r19
    465c:	b1 2c       	mov	r11, r1
    465e:	04 c0       	rjmp	.+8      	; 0x4668 <floorf+0x68>
    4660:	b5 94       	asr	r11
    4662:	a7 94       	ror	r10
    4664:	97 94       	ror	r9
    4666:	87 94       	ror	r8
    4668:	8a 95       	dec	r24
    466a:	d2 f7       	brpl	.-12     	; 0x4660 <floorf+0x60>
    466c:	d5 01       	movw	r26, r10
    466e:	c4 01       	movw	r24, r8
    4670:	8c 21       	and	r24, r12
    4672:	9d 21       	and	r25, r13
    4674:	ae 21       	and	r26, r14
    4676:	bf 21       	and	r27, r15
    4678:	89 2b       	or	r24, r25
    467a:	8a 2b       	or	r24, r26
    467c:	8b 2b       	or	r24, r27
    467e:	d1 f0       	breq	.+52     	; 0x46b4 <floorf+0xb4>
    4680:	20 e0       	ldi	r18, 0x00	; 0
    4682:	30 e0       	ldi	r19, 0x00	; 0
    4684:	40 e8       	ldi	r20, 0x80	; 128
    4686:	5b e7       	ldi	r21, 0x7B	; 123
    4688:	c7 01       	movw	r24, r14
    468a:	b6 01       	movw	r22, r12
    468c:	0e 94 f0 2d 	call	0x5be0	; 0x5be0 <__addsf3>
    4690:	6d 83       	std	Y+5, r22	; 0x05
    4692:	7e 83       	std	Y+6, r23	; 0x06
    4694:	8f 83       	std	Y+7, r24	; 0x07
    4696:	98 87       	std	Y+8, r25	; 0x08
    4698:	f7 fe       	sbrs	r15, 7
    469a:	04 c0       	rjmp	.+8      	; 0x46a4 <floorf+0xa4>
    469c:	c8 0c       	add	r12, r8
    469e:	d9 1c       	adc	r13, r9
    46a0:	ea 1c       	adc	r14, r10
    46a2:	fb 1c       	adc	r15, r11
    46a4:	80 94       	com	r8
    46a6:	90 94       	com	r9
    46a8:	a0 94       	com	r10
    46aa:	b0 94       	com	r11
    46ac:	c8 20       	and	r12, r8
    46ae:	d9 20       	and	r13, r9
    46b0:	ea 20       	and	r14, r10
    46b2:	fb 20       	and	r15, r11
    46b4:	5c 2d       	mov	r21, r12
    46b6:	4d 2d       	mov	r20, r13
    46b8:	3e 2d       	mov	r19, r14
    46ba:	2f 2d       	mov	r18, r15
    46bc:	21 c0       	rjmp	.+66     	; 0x4700 <floorf+0x100>
    46be:	20 e0       	ldi	r18, 0x00	; 0
    46c0:	30 e0       	ldi	r19, 0x00	; 0
    46c2:	40 e8       	ldi	r20, 0x80	; 128
    46c4:	5b e7       	ldi	r21, 0x7B	; 123
    46c6:	c7 01       	movw	r24, r14
    46c8:	b6 01       	movw	r22, r12
    46ca:	0e 94 f0 2d 	call	0x5be0	; 0x5be0 <__addsf3>
    46ce:	69 83       	std	Y+1, r22	; 0x01
    46d0:	7a 83       	std	Y+2, r23	; 0x02
    46d2:	8b 83       	std	Y+3, r24	; 0x03
    46d4:	9c 83       	std	Y+4, r25	; 0x04
    46d6:	f7 fe       	sbrs	r15, 7
    46d8:	0f c0       	rjmp	.+30     	; 0x46f8 <floorf+0xf8>
    46da:	d7 01       	movw	r26, r14
    46dc:	c6 01       	movw	r24, r12
    46de:	88 0f       	add	r24, r24
    46e0:	99 1f       	adc	r25, r25
    46e2:	aa 1f       	adc	r26, r26
    46e4:	bb 1f       	adc	r27, r27
    46e6:	89 2b       	or	r24, r25
    46e8:	8a 2b       	or	r24, r26
    46ea:	8b 2b       	or	r24, r27
    46ec:	19 f3       	breq	.-58     	; 0x46b4 <floorf+0xb4>
    46ee:	50 e0       	ldi	r21, 0x00	; 0
    46f0:	40 e0       	ldi	r20, 0x00	; 0
    46f2:	30 e8       	ldi	r19, 0x80	; 128
    46f4:	2f eb       	ldi	r18, 0xBF	; 191
    46f6:	04 c0       	rjmp	.+8      	; 0x4700 <floorf+0x100>
    46f8:	50 e0       	ldi	r21, 0x00	; 0
    46fa:	40 e0       	ldi	r20, 0x00	; 0
    46fc:	30 e0       	ldi	r19, 0x00	; 0
    46fe:	20 e0       	ldi	r18, 0x00	; 0
    4700:	65 2f       	mov	r22, r21
    4702:	74 2f       	mov	r23, r20
    4704:	83 2f       	mov	r24, r19
    4706:	92 2f       	mov	r25, r18
    4708:	28 96       	adiw	r28, 0x08	; 8
    470a:	0f b6       	in	r0, 0x3f	; 63
    470c:	f8 94       	cli
    470e:	de bf       	out	0x3e, r29	; 62
    4710:	0f be       	out	0x3f, r0	; 63
    4712:	cd bf       	out	0x3d, r28	; 61
    4714:	df 91       	pop	r29
    4716:	cf 91       	pop	r28
    4718:	ff 90       	pop	r15
    471a:	ef 90       	pop	r14
    471c:	df 90       	pop	r13
    471e:	cf 90       	pop	r12
    4720:	bf 90       	pop	r11
    4722:	af 90       	pop	r10
    4724:	9f 90       	pop	r9
    4726:	8f 90       	pop	r8
    4728:	7f 90       	pop	r7
    472a:	6f 90       	pop	r6
    472c:	5f 90       	pop	r5
    472e:	4f 90       	pop	r4
    4730:	08 95       	ret

Disassembly of section .text.scalbnf:

00005026 <scalbnf>:
    5026:	0f 93       	push	r16
    5028:	1f 93       	push	r17
    502a:	cf 93       	push	r28
    502c:	df 93       	push	r29
    502e:	ea 01       	movw	r28, r20
    5030:	40 38       	cpi	r20, 0x80	; 128
    5032:	51 05       	cpc	r21, r1
    5034:	d4 f0       	brlt	.+52     	; 0x506a <scalbnf+0x44>
    5036:	20 e0       	ldi	r18, 0x00	; 0
    5038:	30 e0       	ldi	r19, 0x00	; 0
    503a:	40 e0       	ldi	r20, 0x00	; 0
    503c:	5f e7       	ldi	r21, 0x7F	; 127
    503e:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    5042:	9e 01       	movw	r18, r28
    5044:	2f 57       	subi	r18, 0x7F	; 127
    5046:	31 09       	sbc	r19, r1
    5048:	20 38       	cpi	r18, 0x80	; 128
    504a:	31 05       	cpc	r19, r1
    504c:	6c f1       	brlt	.+90     	; 0x50a8 <scalbnf+0x82>
    504e:	20 e0       	ldi	r18, 0x00	; 0
    5050:	30 e0       	ldi	r19, 0x00	; 0
    5052:	40 e0       	ldi	r20, 0x00	; 0
    5054:	5f e7       	ldi	r21, 0x7F	; 127
    5056:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    505a:	ce 5f       	subi	r28, 0xFE	; 254
    505c:	d1 09       	sbc	r29, r1
    505e:	c0 38       	cpi	r28, 0x80	; 128
    5060:	d1 05       	cpc	r29, r1
    5062:	1c f1       	brlt	.+70     	; 0x50aa <scalbnf+0x84>
    5064:	cf e7       	ldi	r28, 0x7F	; 127
    5066:	d0 e0       	ldi	r29, 0x00	; 0
    5068:	20 c0       	rjmp	.+64     	; 0x50aa <scalbnf+0x84>
    506a:	42 38       	cpi	r20, 0x82	; 130
    506c:	5f 4f       	sbci	r21, 0xFF	; 255
    506e:	ec f4       	brge	.+58     	; 0x50aa <scalbnf+0x84>
    5070:	20 e0       	ldi	r18, 0x00	; 0
    5072:	30 e0       	ldi	r19, 0x00	; 0
    5074:	40 e8       	ldi	r20, 0x80	; 128
    5076:	5c e0       	ldi	r21, 0x0C	; 12
    5078:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    507c:	9e 01       	movw	r18, r28
    507e:	2a 59       	subi	r18, 0x9A	; 154
    5080:	3f 4f       	sbci	r19, 0xFF	; 255
    5082:	22 38       	cpi	r18, 0x82	; 130
    5084:	4f ef       	ldi	r20, 0xFF	; 255
    5086:	34 07       	cpc	r19, r20
    5088:	7c f4       	brge	.+30     	; 0x50a8 <scalbnf+0x82>
    508a:	20 e0       	ldi	r18, 0x00	; 0
    508c:	30 e0       	ldi	r19, 0x00	; 0
    508e:	40 e8       	ldi	r20, 0x80	; 128
    5090:	5c e0       	ldi	r21, 0x0C	; 12
    5092:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    5096:	c4 53       	subi	r28, 0x34	; 52
    5098:	df 4f       	sbci	r29, 0xFF	; 255
    509a:	c2 38       	cpi	r28, 0x82	; 130
    509c:	2f ef       	ldi	r18, 0xFF	; 255
    509e:	d2 07       	cpc	r29, r18
    50a0:	24 f4       	brge	.+8      	; 0x50aa <scalbnf+0x84>
    50a2:	c2 e8       	ldi	r28, 0x82	; 130
    50a4:	df ef       	ldi	r29, 0xFF	; 255
    50a6:	01 c0       	rjmp	.+2      	; 0x50aa <scalbnf+0x84>
    50a8:	e9 01       	movw	r28, r18
    50aa:	9e 01       	movw	r18, r28
    50ac:	21 58       	subi	r18, 0x81	; 129
    50ae:	3f 4f       	sbci	r19, 0xFF	; 255
    50b0:	89 01       	movw	r16, r18
    50b2:	33 0f       	add	r19, r19
    50b4:	22 0b       	sbc	r18, r18
    50b6:	33 0b       	sbc	r19, r19
    50b8:	a9 01       	movw	r20, r18
    50ba:	98 01       	movw	r18, r16
    50bc:	e7 e1       	ldi	r30, 0x17	; 23
    50be:	22 0f       	add	r18, r18
    50c0:	33 1f       	adc	r19, r19
    50c2:	44 1f       	adc	r20, r20
    50c4:	55 1f       	adc	r21, r21
    50c6:	ea 95       	dec	r30
    50c8:	d1 f7       	brne	.-12     	; 0x50be <scalbnf+0x98>
    50ca:	0e 94 3e 2e 	call	0x5c7c	; 0x5c7c <__mulsf3>
    50ce:	df 91       	pop	r29
    50d0:	cf 91       	pop	r28
    50d2:	1f 91       	pop	r17
    50d4:	0f 91       	pop	r16
    50d6:	08 95       	ret

Disassembly of section .text.libgcc.div:

000059a8 <__divmodhi4>:
    59a8:	97 fb       	bst	r25, 7
    59aa:	07 2e       	mov	r0, r23
    59ac:	16 f4       	brtc	.+4      	; 0x59b2 <__divmodhi4+0xa>
    59ae:	00 94       	com	r0
    59b0:	07 d0       	rcall	.+14     	; 0x59c0 <__divmodhi4_neg1>
    59b2:	77 fd       	sbrc	r23, 7
    59b4:	09 d0       	rcall	.+18     	; 0x59c8 <__divmodhi4_neg2>
    59b6:	0e 94 e8 2c 	call	0x59d0	; 0x59d0 <__udivmodhi4>
    59ba:	07 fc       	sbrc	r0, 7
    59bc:	05 d0       	rcall	.+10     	; 0x59c8 <__divmodhi4_neg2>
    59be:	3e f4       	brtc	.+14     	; 0x59ce <__divmodhi4_exit>

000059c0 <__divmodhi4_neg1>:
    59c0:	90 95       	com	r25
    59c2:	81 95       	neg	r24
    59c4:	9f 4f       	sbci	r25, 0xFF	; 255
    59c6:	08 95       	ret

000059c8 <__divmodhi4_neg2>:
    59c8:	70 95       	com	r23
    59ca:	61 95       	neg	r22
    59cc:	7f 4f       	sbci	r23, 0xFF	; 255

000059ce <__divmodhi4_exit>:
    59ce:	08 95       	ret

Disassembly of section .text.libgcc:

00005c4a <__tablejump2__>:
    5c4a:	ee 0f       	add	r30, r30
    5c4c:	ff 1f       	adc	r31, r31
    5c4e:	05 90       	lpm	r0, Z+
    5c50:	f4 91       	lpm	r31, Z
    5c52:	e0 2d       	mov	r30, r0
    5c54:	09 94       	ijmp

Disassembly of section .text.libgcc.mul:

00005b10 <__umulhisi3>:
    5b10:	a2 9f       	mul	r26, r18
    5b12:	b0 01       	movw	r22, r0
    5b14:	b3 9f       	mul	r27, r19
    5b16:	c0 01       	movw	r24, r0
    5b18:	a3 9f       	mul	r26, r19
    5b1a:	70 0d       	add	r23, r0
    5b1c:	81 1d       	adc	r24, r1
    5b1e:	11 24       	eor	r1, r1
    5b20:	91 1d       	adc	r25, r1
    5b22:	b2 9f       	mul	r27, r18
    5b24:	70 0d       	add	r23, r0
    5b26:	81 1d       	adc	r24, r1
    5b28:	11 24       	eor	r1, r1
    5b2a:	91 1d       	adc	r25, r1
    5b2c:	08 95       	ret

Disassembly of section .text.libgcc.mul:

00005ba2 <__mulshisi3>:
    5ba2:	b7 ff       	sbrs	r27, 7
    5ba4:	0c 94 bb 2d 	jmp	0x5b76	; 0x5b76 <__muluhisi3>

00005ba8 <__mulohisi3>:
    5ba8:	0e 94 bb 2d 	call	0x5b76	; 0x5b76 <__muluhisi3>
    5bac:	82 1b       	sub	r24, r18
    5bae:	93 0b       	sbc	r25, r19
    5bb0:	08 95       	ret

Disassembly of section .text.libgcc.prologue:

000058b2 <__prologue_saves__>:
    58b2:	2f 92       	push	r2
    58b4:	3f 92       	push	r3
    58b6:	4f 92       	push	r4
    58b8:	5f 92       	push	r5
    58ba:	6f 92       	push	r6
    58bc:	7f 92       	push	r7
    58be:	8f 92       	push	r8
    58c0:	9f 92       	push	r9
    58c2:	af 92       	push	r10
    58c4:	bf 92       	push	r11
    58c6:	cf 92       	push	r12
    58c8:	df 92       	push	r13
    58ca:	ef 92       	push	r14
    58cc:	ff 92       	push	r15
    58ce:	0f 93       	push	r16
    58d0:	1f 93       	push	r17
    58d2:	cf 93       	push	r28
    58d4:	df 93       	push	r29
    58d6:	cd b7       	in	r28, 0x3d	; 61
    58d8:	de b7       	in	r29, 0x3e	; 62
    58da:	ca 1b       	sub	r28, r26
    58dc:	db 0b       	sbc	r29, r27
    58de:	0f b6       	in	r0, 0x3f	; 63
    58e0:	f8 94       	cli
    58e2:	de bf       	out	0x3e, r29	; 62
    58e4:	0f be       	out	0x3f, r0	; 63
    58e6:	cd bf       	out	0x3d, r28	; 61
    58e8:	09 94       	ijmp

Disassembly of section .text.libgcc.prologue:

000058ea <__epilogue_restores__>:
    58ea:	2a 88       	ldd	r2, Y+18	; 0x12
    58ec:	39 88       	ldd	r3, Y+17	; 0x11
    58ee:	48 88       	ldd	r4, Y+16	; 0x10
    58f0:	5f 84       	ldd	r5, Y+15	; 0x0f
    58f2:	6e 84       	ldd	r6, Y+14	; 0x0e
    58f4:	7d 84       	ldd	r7, Y+13	; 0x0d
    58f6:	8c 84       	ldd	r8, Y+12	; 0x0c
    58f8:	9b 84       	ldd	r9, Y+11	; 0x0b
    58fa:	aa 84       	ldd	r10, Y+10	; 0x0a
    58fc:	b9 84       	ldd	r11, Y+9	; 0x09
    58fe:	c8 84       	ldd	r12, Y+8	; 0x08
    5900:	df 80       	ldd	r13, Y+7	; 0x07
    5902:	ee 80       	ldd	r14, Y+6	; 0x06
    5904:	fd 80       	ldd	r15, Y+5	; 0x05
    5906:	0c 81       	ldd	r16, Y+4	; 0x04
    5908:	1b 81       	ldd	r17, Y+3	; 0x03
    590a:	aa 81       	ldd	r26, Y+2	; 0x02
    590c:	b9 81       	ldd	r27, Y+1	; 0x01
    590e:	ce 0f       	add	r28, r30
    5910:	d1 1d       	adc	r29, r1
    5912:	0f b6       	in	r0, 0x3f	; 63
    5914:	f8 94       	cli
    5916:	de bf       	out	0x3e, r29	; 62
    5918:	0f be       	out	0x3f, r0	; 63
    591a:	cd bf       	out	0x3d, r28	; 61
    591c:	ed 01       	movw	r28, r26
    591e:	08 95       	ret

Disassembly of section .text.libgcc:

00005bb2 <__xload_2>:
    5bb2:	57 fd       	sbrc	r21, 7
    5bb4:	03 c0       	rjmp	.+6      	; 0x5bbc <__xload_2+0xa>
    5bb6:	65 91       	lpm	r22, Z+
    5bb8:	75 91       	lpm	r23, Z+
    5bba:	08 95       	ret
    5bbc:	61 91       	ld	r22, Z+
    5bbe:	71 91       	ld	r23, Z+
    5bc0:	08 95       	ret

Disassembly of section .text.libgcc:

00005b48 <__xload_4>:
    5b48:	57 fd       	sbrc	r21, 7
    5b4a:	05 c0       	rjmp	.+10     	; 0x5b56 <__xload_4+0xe>
    5b4c:	65 91       	lpm	r22, Z+
    5b4e:	75 91       	lpm	r23, Z+
    5b50:	85 91       	lpm	r24, Z+
    5b52:	95 91       	lpm	r25, Z+
    5b54:	08 95       	ret
    5b56:	61 91       	ld	r22, Z+
    5b58:	71 91       	ld	r23, Z+
    5b5a:	81 91       	ld	r24, Z+
    5b5c:	91 91       	ld	r25, Z+
    5b5e:	08 95       	ret

Disassembly of section .text.libgcc.div:

000059d0 <__udivmodhi4>:
    59d0:	aa 1b       	sub	r26, r26
    59d2:	bb 1b       	sub	r27, r27
    59d4:	51 e1       	ldi	r21, 0x11	; 17
    59d6:	07 c0       	rjmp	.+14     	; 0x59e6 <__udivmodhi4_ep>

000059d8 <__udivmodhi4_loop>:
    59d8:	aa 1f       	adc	r26, r26
    59da:	bb 1f       	adc	r27, r27
    59dc:	a6 17       	cp	r26, r22
    59de:	b7 07       	cpc	r27, r23
    59e0:	10 f0       	brcs	.+4      	; 0x59e6 <__udivmodhi4_ep>
    59e2:	a6 1b       	sub	r26, r22
    59e4:	b7 0b       	sbc	r27, r23

000059e6 <__udivmodhi4_ep>:
    59e6:	88 1f       	adc	r24, r24
    59e8:	99 1f       	adc	r25, r25
    59ea:	5a 95       	dec	r21
    59ec:	a9 f7       	brne	.-22     	; 0x59d8 <__udivmodhi4_loop>
    59ee:	80 95       	com	r24
    59f0:	90 95       	com	r25
    59f2:	bc 01       	movw	r22, r24
    59f4:	cd 01       	movw	r24, r26
    59f6:	08 95       	ret

Disassembly of section .text.libgcc.mul:

00005b76 <__muluhisi3>:
    5b76:	0e 94 88 2d 	call	0x5b10	; 0x5b10 <__umulhisi3>
    5b7a:	a5 9f       	mul	r26, r21
    5b7c:	90 0d       	add	r25, r0
    5b7e:	b4 9f       	mul	r27, r20
    5b80:	90 0d       	add	r25, r0
    5b82:	a4 9f       	mul	r26, r20
    5b84:	80 0d       	add	r24, r0
    5b86:	91 1d       	adc	r25, r1
    5b88:	11 24       	eor	r1, r1
    5b8a:	08 95       	ret

Disassembly of section .text.__dummy_fini:

00005c96 <_fini>:
    5c96:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

00005c98 <__funcs_on_exit>:
    5c98:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

00005c9a <__simulator_exit>:
    5c9a:	08 95       	ret

Disassembly of section .text.exit:

00005b8c <exit>:
    5b8c:	ec 01       	movw	r28, r24
    5b8e:	0e 94 4c 2e 	call	0x5c98	; 0x5c98 <__funcs_on_exit>
    5b92:	0e 94 4b 2e 	call	0x5c96	; 0x5c96 <_fini>
    5b96:	ce 01       	movw	r24, r28
    5b98:	0e 94 4d 2e 	call	0x5c9a	; 0x5c9a <__simulator_exit>
    5b9c:	ce 01       	movw	r24, r28
    5b9e:	0e 94 49 2e 	call	0x5c92	; 0x5c92 <_Exit>

Disassembly of section .text._Exit:

00005c92 <_Exit>:
    5c92:	0e 94 6e 00 	call	0xdc	; 0xdc <_exit>

Disassembly of section .text.avrlibc:

00005c24 <eeprom_read_dword>:
    5c24:	cb 01       	movw	r24, r22
    5c26:	a6 e1       	ldi	r26, 0x16	; 22
    5c28:	b0 e0       	ldi	r27, 0x00	; 0
    5c2a:	44 e0       	ldi	r20, 0x04	; 4
    5c2c:	50 e0       	ldi	r21, 0x00	; 0
    5c2e:	0c 94 49 2d 	jmp	0x5a92	; 0x5a92 <eeprom_read_blraw>

Disassembly of section .text.avrlibc:

00005a8a <eeprom_read_block>:
    5a8a:	ba 01       	movw	r22, r20
    5a8c:	a9 01       	movw	r20, r18
    5a8e:	dc 01       	movw	r26, r24
    5a90:	cb 01       	movw	r24, r22

00005a92 <eeprom_read_blraw>:
    5a92:	fc 01       	movw	r30, r24
    5a94:	e1 99       	sbic	0x1c, 1	; 28
    5a96:	fe cf       	rjmp	.-4      	; 0x5a94 <eeprom_read_blraw+0x2>
    5a98:	06 c0       	rjmp	.+12     	; 0x5aa6 <eeprom_read_blraw+0x14>
    5a9a:	ff bb       	out	0x1f, r31	; 31
    5a9c:	ee bb       	out	0x1e, r30	; 30
    5a9e:	e0 9a       	sbi	0x1c, 0	; 28
    5aa0:	31 96       	adiw	r30, 0x01	; 1
    5aa2:	0d b2       	in	r0, 0x1d	; 29
    5aa4:	0d 92       	st	X+, r0
    5aa6:	41 50       	subi	r20, 0x01	; 1
    5aa8:	50 40       	sbci	r21, 0x00	; 0
    5aaa:	b8 f7       	brcc	.-18     	; 0x5a9a <eeprom_read_blraw+0x8>
    5aac:	08 95       	ret
